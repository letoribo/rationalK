{"version":3,"sources":["rationalk:experts/lib/methods.js","rationalk:experts/lib/collections.js","rationalk:experts/lib/routes.js","rationalk:experts/lib/server/publications.js"],"names":[],"mappings":";;;;;;;;AAAA,e;AACA,iC;AACA,G;AACA,uE;AACA,G;AACA,E;;AAEA,iC;AACA,iC;AACA,E;;AAEA,+C;AACA,sD;AACA,E;;AAEA,qD;AACA,iE;AACA,E;;AAEA,mD;AACA,qB;AACA,K;AACA,+B;AACA,M;AACA,K;AACA,gB;AACA,K;AACA,I;AACA,E;;AAEA,iD;AACA,S;AACA,6B;AACA,mB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,O;AACA,c;AACA,E;;AAEA,mC;AACA,4E;AACA,E;;;AAGA,gB;AACA,qD;AACA,2B;AACA,0B;AACA,gB;AACA,I;AACA,6B;AACA,K;AACA,I;AACA,gC;AACA,sC;AACA,4B;AACA,uB;AACA,K;AACA,I;AACA,mB;AACA,I;AACA,I;AACA,uC;AACA,yC;AACA,G;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AC1EA,wC;;AAEA,e;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,gD;AACA,0E;AACA,E;AACA,O;AACA,kD;AACA,2E;AACA,G;AACA,E;AACA,C;;;;;;;;;;;;;;;;;;;ACjBA,yC;AACA,2B;AACA,mB;AACA,yB;AACA,c;AACA,mC;AACA,oC;AACA,Q;AACA,M;AACA,K;;AAEA,oC;AACA,oK;;AAEA,0B;AACA,K;AACA,2B;AACA,yC;AACA,K;AACA,I;AACA,C;;;;;;;;;;;;;;;;;;;ACpBA,sC;AACA,uB;AACA,G","file":"/packages/rationalk_experts.js","sourcesContent":["RKExperts = {};\nRKCore.searchResultsPackage.push(\n  {\n    name: \"RKExperts\", // RKExperts.findAllFullTextSearch should exists\n  }\n);\n\nRKExperts.findAll = function () {\n  return Expert.find({}).fetch();\n};\n\nRKExperts.findAllFullTextSearch = function () {\n  return Expert.find({}, {sort: {score: -1}}).fetch();\n};\n\nRKExperts.findAnd = function (arrayOfAndForExperts) {\n  return Expert.find({$and: arrayOfAndForExperts }, {limit: 30});\n};\n\nRKExperts.findOr = function (arrayOfOrForExperts) {\n  return Expert.find(\n    {\n      $or: arrayOfOrForExperts,\n    },\n    {\n      limit: 30,\n    }\n  );\n};\n\nRKExperts.findFullText = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Expert.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    });\n    return sr;\n};\n\nRKExperts.findDummy = function () {\n  return Expert.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n\n\nMeteor.methods({\n\tupdateFieldOfExpertise: function (content, userId) {\n    check(content, String);\n    check(userId, String);\n\t\tExpert.update(\n\t\t\t{\n\t\t\t  userId: Meteor.userId(),\n\t\t\t},\n\t\t\t{\n\t\t    fieldOfExpertise: content,\n        searchResultFromExperts: true,\n\t\t    updatedAt: new Date(),\n        userId: userId,\n\t\t\t},\n\t\t\t{\n\t\t    upsert: true,\n\t\t\t}\n\t\t);\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('Updated succesfully');\n\t\t}\n\t},\n});\n","Expert = new Mongo.Collection('expert');\n\nExpert.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof Expert.createIndex === 'function') {\n\t\tExpert.createIndex({ fieldOfExpertise: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof Expert._ensureIndex === 'function') {\n\t\t\tExpert._ensureIndex( { fieldOfExpertise: \"text\" }, {name: \"TextIndex\"});\n\t\t}\n\t}\n}\n","if (Meteor.settings.public.show.expert) {\n  Router.route(\"/expert\", {\n    name: \"expert\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"expert\"),\n        Meteor.subscribe(\"members\"),\n      ];\n    },\n  });\n\n  url = Router.routes.expert.path();\n  menuHTML = new Spacebars.SafeString('<li><a href=\"' + url + '\" title=\"Experts\"><strong><span class=\"glyphicon glyphicon-user\"></span></strong> Experts</a></li>');\n\n  RKCore.packageMenu.push(\n    {\n      \"menuHTML\": menuHTML,\n      \"fromPackage\": \"rationalk:experts\",\n    }\n  );\n}\n","Meteor.publish(\"expert\", function () {\n  return Expert.find();\n});\n"]}