{"version":3,"sources":["rationalk:checklists/lib/methods.js","rationalk:checklists/lib/collections.js","rationalk:checklists/lib/routes.js","rationalk:checklists/lib/server/publications.js","rationalk:checklists/lib/server/checklists.js"],"names":[],"mappings":";;;;;;;;AAAA,kB;;AAEA,sD;;AAEA,oC;AACA,4D;AACA,E;;;;;;;;;;;;;;;;;;;ACNA,gD;;AAEA,mB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,oD;AACA,kE;AACA,E;AACA,O;AACA,sD;AACA,mE;AACA,E;AACA,C;AACA,iB;;AAEA,mC;AACA,qC;;;;;;;;;;;;;;;;;;;ACpBA,6C;AACA,+B;AACA,uB;AACA,yB;AACA,c;AACA,uC;AACA,oC;AACA,uC;AACA,Q;AACA,M;AACA,K;AACA,C;;;;;;;;;;;;;;;;;;;ACXA,0C;AACA,2B;AACA,G;;;;;;;;;;;;;;;;;;;ACFA,gB;;AAEA,G","file":"/packages/rationalk_checklists.js","sourcesContent":["RKCheckLists = {};\n\n// RKTrello.Trello = Trello; -> done in collections.js\n\nRKCheckLists.findAll = function () {\n  return RKCheckLists.find({}, {sort: {score: -1}}).fetch();\n};\n","CheckLists = new Mongo.Collection('Checklists');\n\nCheckLists.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof CheckLists.createIndex === 'function') {\n\t\tCheckLists.createIndex({ full: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof CheckLists._ensureIndex === 'function') {\n\t\t\tCheckLists._ensureIndex( { full: \"text\" }, {name: \"TextIndex\"});\n\t}\n}\n} //end if Server\n\n//expose it to the other packages :\nRKCheckLists.CheckLists = CheckLists;\n","if (Meteor.settings.public.show.checklists) {\n  Router.route(\"/checklists\", {\n    name: \"checklists\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"checklists\"),\n        Meteor.subscribe(\"members\"),\n        Meteor.subscribe(\"rkSettings\"),\n      ];\n    },\n  });\n}\n","Meteor.publish(\"checklists\", function () {\n  return CheckLists.find();\n});\n","Meteor.methods({\n\n});\n"]}