{"version":3,"sources":["rationalk:sheetconnector//Users/thomasdokithonon/rationalK/packages/rationalk-sheetconnector/package-tap.i18n","rationalk:sheetconnector/lib/methods.js","rationalk:sheetconnector/lib/collections.js","rationalk:sheetconnector/lib/routes.js","rationalk:sheetconnector/lib/server/publications.js","rationalk:sheetconnector/lib/server/excel.js","rationalk:sheetconnector//Users/thomasdokithonon/rationalK/packages/rationalk-sheetconnector/i18n/en.i18n.json","rationalk:sheetconnector//Users/thomasdokithonon/rationalK/packages/rationalk-sheetconnector/i18n/fr.i18n.json"],"names":[],"mappings":";;;;;;;;AAAA,0H;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,sB;AACA,mC;AACA,iC;AACA,G;AACA,2G;AACA,G;AACA,E;;AAEA,sD;AACA,wD;AACA,E;;AAEA,wD;AACA,S;AACA,qB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,kD;AACA,gD;AACA,kB;AACA,O;AACA,Y;AACA,E;;AAEA,0C;AACA,8E;AACA,E;;;;;;;;;;;;;;;;;;;AC9BA,4C;;AAEA,iB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,kD;AACA,iE;AACA,E;AACA,O;AACA,oD;AACA,mE;AACA,G;AACA,E;AACA,C;;AAEA,iC;AACA,2D;;;;;;;;;;;;;;;;;;;ACpBA,iD;AACA,6C;AACA,qB;AACA,qC;AACA,yB;AACA,gE;AACA,yC;AACA,O;AACA,c;AACA,mE;AACA,Q;AACA,M;AACA,K;AACA,C;;;;;;;;;;;;;;;;;;;ACbA,qD;AACA,+B;AACA,uB;AACA,K;AACA,qC;AACA,M;AACA,K;AACA,e;AACA,2B;AACA,mC;AACA,kB;AACA,qB;AACA,qB;AACA,Q;AACA,O;AACA,G;;;;;;;;;;;;;;;;;;;ACfA,O;AACA,4B;AACA,E;AACA,Y;AACA,Y;AACA,G;AACA,2E;AACA,oC;AACA,oC;AACA,oC;AACA,wB;AACA,wB;AACA,kD;AACA,G;AACA,C;;AAEA,oC;;AAEA,Y;AACA,Y;AACA,G;AACA,2E;AACA,oC;AACA,oC;AACA,oC;AACA,kD;AACA,G;AACA,C;;AAEA,Y;AACA,Y;AACA,G;AACA,2E;AACA,oC;AACA,oC;AACA,oC;AACA,2C;AACA,G;AACA,C;;AAEA,E;AACA,0B;AACA,0C;AACA,C;AACA,6B;AACA,2B;AACA,Y;AACA,Y;AACA,gE;AACA,e;AACA,C;;;AAGA,gB;AACA,yC;AACA,mB;AACA,kC;AACA,2B;AACA,kB;AACA,6B;AACA,2B;AACA,iB;AACA,kB;AACA,4B;AACA,2B;AACA,oB;AACA,c;AACA,U;AACA,U;AACA,yC;AACA,iC;AACA,+B;AACA,2B;AACA,yB;AACA,6B;AACA,2B;AACA,c;AACA,U;AACA,iB;AACA,e;AACA,a;AACA,gB;AACA,gB;AACA,U;AACA,U;AACA,e;AACA,oB;AACA,iC;AACA,oD;;AAEA,kD;AACA,mE;AACA,qC;AACA,iD;AACA,sD;AACA,4C;AACA,gD;AACA,wE;AACA,oE;;AAEA,iE;AACA,gD;AACA,kD;AACA,yC;AACA,O;AACA,Y;AACA,6B;AACA,O;;AAEA,+D;AACA,sC;;AAEA,+C;AACA,yC;AACA,kE;AACA,uD;AACA,iF;AACA,2E;AACA,yE;AACA,qE;AACA,iE;AACA,sE;AACA,mC;AACA,wB;AACA,a;AACA,S;AACA,c;AACA,+D;AACA,oB;AACA,S;AACA,O;;AAEA,qC;AACA,gC;;AAEA,iE;AACA,+D;;AAEA,e;AACA,U;AACA,W;AACA,oC;AACA,wC;AACA,Y;AACA,U;AACA,W;AACA,kC;AACA,sC;AACA,Y;AACA,Q;AACA,0E;AACA,0B;;AAEA,oD;AACA,iB;;AAEA,iD;AACA,oB;AACA,qF;AACA,oE;AACA,0D;AACA,8B;AACA,S;;AAEA,mE;AACA,6C;AACA,+B;AACA,8G;AACA,S;;AAEA,uD;AACA,qB;AACA,+C;AACA,oB;AACA,uB;AACA,uB;AACA,oD;AACA,8C;AACA,0C;AACA,gD;AACA,2H;AACA,sH;;AAEA,yC;AACA,iE;AACA,qF;AACA,yE;AACA,+D;AACA,kD;AACA,e;AACA,oB;AACA,uB;AACA,e;AACA,8B;AACA,wD;AACA,kE;AACA,a;AACA,+B;AACA,4C;AACA,0B;AACA,gC;AACA,gC;AACA,2C;AACA,4B;AACA,+B;AACA,S;AACA,c;AACA,yB;AACA,kG;AACA,S;AACA,4B;AACA,uB;AACA,U;AACA,iE;AACA,K;AACA,I;AACA,G;;;;;;;;;;;;;;;;;;;ACxNA,6B;AACA,8C;AACA,2C;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,wG;AACA,gD;AACA,mD;;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,8C;AACA,2C;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0H;AACA,mD","file":"/packages/rationalk_sheetconnector.js","sourcesContent":["TAPi18n.packages[\"rationalk:sheetconnector\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","RKSheetConnector = {};\nRKSheetConnector.Collections =  {};\nRKCore.searchResultsPackage.push(\n  {\n    name: \"RKSheetConnector\", // a publication with the name : RKSheetConnector-searchResults should exists\n  }\n);\n\nRKSheetConnector.findAllFullTextSearch = function () {\n  return External.find({}, {sort: {score: -1}}).fetch();\n};\n\nRKSheetConnector.findFullText = function (searchQuery) {\n  var sr;\n  sr = External.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n        fields: { score: { $meta: 'textScore' } },\n        sort: { score: { $meta: 'textScore' } },\n        limit: 30,\n    });\n  return sr;\n};\n\nRKSheetConnector.findDummy = function () {\n  return External.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n","External = new Mongo.Collection('external');\n\nExternal.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof External.createIndex === 'function') {\n\t\tExternal.createIndex({ \"$**\": \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof External._ensureIndex === 'function') {\n\t\t\tExternal._ensureIndex({ \"$**\": \"text\" }, { name: \"TextIndex\" });\n\t\t}\n\t}\n}\n\n// Expose collections if needed :\n//RKWiki.Collections.WikiSearchResults = WikiSearchResults;\n","if (Meteor.settings.public.show.sheetconnector) {\n  Router.route(\"/external/:externalDocId?\", {\n    name: \"external\",\n    layoutTemplate: 'externalLayout',\n    waitOn: function () {\n      if (typeof Session.get(\"externalDocId\") === 'undefined') {\n        Session.set(\"externalDocId\", \"\");\n      }\n      return [\n        Meteor.subscribe(\"external\", Session.get('externalDocId')),\n      ];\n    },\n  });\n}\n","Meteor.publish(\"external\", function (externalDocId) {\n  check(externalDocId, String);\n  return External.find(\n    {\n      'externalDocId': externalDocId,\n    },\n    {\n      fields: {\n        'externalDocId': 0,\n        'searchResultFromSheet': 0,\n        'full': 0,\n        'headers': 0,\n        'content': 0,\n      },\n    });\n});\n","// Help\n// Define in settings.json :\n/*\n\"external\":{\n  \"22IN06\" :\n  {\n    \"sourceFile\" : \"/Users/thomasdokithonon/rationalK/private/22IN06.xlsx\",\n    \"sheet_name\" : \"Liste_graisses\",\n    \"table_begin_address_row\" : \"3\",\n    \"table_end_address_row\" : \"431\",\n    \"filter_col\" : \"AZ\",\n    \"filter_on\" : \"Yes\",\n    \"cols_to_display\" : [\"AU\",\"AV\",\"AW\",\"AX\",\"AY\"]\n  }\n}\n\nor if you want to display all lines:\n\n\"external\":{\n  \"22IN06\" :\n  {\n    \"sourceFile\" : \"/Users/thomasdokithonon/rationalK/private/22IN06.xlsx\",\n    \"sheet_name\" : \"Liste_graisses\",\n    \"table_begin_address_row\" : \"3\",\n    \"table_end_address_row\" : \"431\",\n    \"cols_to_display\" : [\"AU\",\"AV\",\"AW\",\"AX\",\"AY\"]\n  }\n}\n\n\"external\":{\n  \"22IN06\" :\n  {\n    \"sourceFile\" : \"/Users/thomasdokithonon/rationalK/private/22IN06.xlsx\",\n    \"sheet_name\" : \"Liste_graisses\",\n    \"table_begin_address_row\" : \"3\",\n    \"table_end_address_row\" : \"431\",\n    \"cols_to_display\" : [\"AU-AW\",\"AX\",\"AY\"]\n  }\n}\n\n*/\nfunction unfixCol (cstr) {\n  return cstr.replace(/^\\$([A-Z])/, \"$1\");\n}\nfunction decodeCol (colstr) {\n  var c = unfixCol(colstr);\n  var d = 0;\n  var i = 0;\n  for (; i !== c.length; ++i) d = 26 * d + c.charCodeAt(i) - 64;\n  return d - 1;\n}\n\n\nMeteor.methods({\n  updateExcel: function (externalDocId) {\n    var sourceFile;\n    var excel = new Excel('xlsx');\n    var sourceFileSettings;\n    var sheetName;\n    var tableBeginAddressRow;\n    var tableEndAddressRow;\n    var filterOn;\n    var filterCol;\n    var colsToDisplayLetter;\n    var colsToDisplay = [];\n    var arrayLength;\n    var l = 0;\n    var i;\n    var j;\n    var colsToDisplayLetterArraySplitted;\n    var colsToDisplayLetterBegin;\n    var colsToDisplayLetterEnd;\n    var colsToDisplayBegin;\n    var colsToDisplayEnd;\n    var tableBeginAddressCol;\n    var tableEndAddressCol;\n    var range;\n    var R;\n    var obj = {};\n    var filter;\n    var full;\n    var headers;\n    var content;\n    var C;\n    var v;\n    var header;\n    var cellAddress;\n    check(externalDocId, String);\n    External.remove({externalDocId: externalDocId});\n\n    if (Meteor.settings.external[externalDocId]) {\n      sourceFileSettings = Meteor.settings.external[externalDocId];\n      RKCore.log(sourceFileSettings);\n      sourceFile = sourceFileSettings.sourceFile;\n      RKCore.log(\"Source Excel file : \" + sourceFile);\n      workbook = excel.readFile(sourceFile);\n      sheetName = sourceFileSettings.sheet_name;\n      tableBeginAddressRow = sourceFileSettings.table_begin_address_row;\n      tableEndAddressRow = sourceFileSettings.table_end_address_row;\n\n      if (typeof(sourceFileSettings.filter_on) !== 'undefined') {\n        filterOn = sourceFileSettings.filter_on;\n        filterCol = sourceFileSettings.filter_col;\n        filterCol = decodeCol(filterCol);\n      }\n      else {\n        filterOn = \"display\";\n      }\n\n      colsToDisplayLetter = sourceFileSettings.cols_to_display;\n      ws = workbook.Sheets[sheetName];\n\n      arrayLength = colsToDisplayLetter.length;\n      for (i = 0; i < arrayLength; i++) {\n        //exemple si col to display letter is \"B-D\" -> \"B\" \"C\" \"D\"\n        if (colsToDisplayLetter[i].indexOf(\"-\") >= 0) {\n            colsToDisplayLetterArraySplitted = colsToDisplayLetter[i].split(\"-\");\n            colsToDisplayLetterBegin = colsToDisplayLetterArraySplitted[0];\n            colsToDisplayLetterEnd = colsToDisplayLetterArraySplitted[1];\n            colsToDisplayBegin = decodeCol(colsToDisplayLetterBegin);\n            colsToDisplayEnd = decodeCol(colsToDisplayLetterEnd);\n            for (j = colsToDisplayBegin; j <= colsToDisplayEnd; j++) {\n              colsToDisplay[l] = j;\n              l = l + 1;\n            }\n        }\n        else {\n          colsToDisplay[l] = decodeCol(colsToDisplayLetter[i]);\n          l = l + 1;\n        }\n      }\n\n      RKCore.log(\"colsToDisplay : \");\n      RKCore.log(colsToDisplay);\n\n      tableBeginAddressCol = Math.min.apply(Math, colsToDisplay);\n      tableEndAddressCol = Math.max.apply(Math, colsToDisplay);\n\n      range = {\n        s:\n          {\n            c: tableBeginAddressCol,\n            r: tableBeginAddressRow - 1,\n          },\n        e:\n          {\n            c: tableEndAddressCol,\n            r: tableEndAddressRow - 1,\n          },\n      };\n      //RKCore.log(\"Your table is in the range (in the 0-index format): \")\n      //RKCore.log(range);\n\n      for (R = range.s.r + 1; R <= range.e.r; ++R) {\n        obj = {};\n\n        filterCellAddress = {c: filterCol, r: R};\n        filter = '';\n        if (typeof(ws[excel.utils.encode_cell(filterCellAddress)]) !== 'undefined') {\n          filter = ws[excel.utils.encode_cell(filterCellAddress)].v;\n          //RKCore.log(\"The value in the filter column :\")\n          //RKCore.log(filter)\n        }\n\n        if (typeof(sourceFileSettings.filter_on) === 'undefined') {\n            //the user has not set any filter\n            filter = \"display\";\n            //by doing the next if will be always true because \"display\" do always contains the text \"display\"\n        }\n\n        if (filter.toString().indexOf(filterOn) >= 0) {\n          //add to db\n          //RKCore.log(\"I will log this line\");\n          full = \"\";\n          headers = [];\n          content = [];\n          for (C = range.s.c; C <= range.e.c; ++C) {\n            //RKCore.log(\"cols_to_display :\");\n            //RKCore.log(cols_to_display);\n            if (colsToDisplay.indexOf(C) >= 0) {\n              headerCellAddress = {c: C, r: tableBeginAddressRow - 1}; // headers are in the first row of the table 0-index\n              header = new Spacebars.SafeString(ws[excel.utils.encode_cell(headerCellAddress)].v.split('.').join(\"\"));\n\n              cellAddress = {c: C, r: R};\n              //RKCore.log(excel.utils.encode_cell(cellAddress));\n              if (typeof(ws[excel.utils.encode_cell(cellAddress)]) !== 'undefined') {\n                //RKCore.log(ws[excel.utils.encode_cell(cellAddress)].v);\n                v = ws[excel.utils.encode_cell(cellAddress)].v;\n                full = full.concat(v).concat(\" \");\n              }\n              else {\n                v = '';\n              }\n              obj[header] = v;\n              headers.push({headerName: header.string});\n              content.push({headerName: header.string, value: v});\n            }\n          } //end loop over col\n          obj.externalDocId = externalDocId;\n          obj.full = full;\n          obj.headers = headers;\n          obj.content = content;\n          obj.searchResultFromSheet = true;\n          // insert the line\n          External.insert(obj);\n        }\n        else {\n          //skip this row\n          RKCore.log('I will skip the row : ' + R + ' because it does not contains :' + filterOn);\n        }\n      }// end loop over rows\n    } //end if settings\n    else {\n      RKCore.log(\"Please define file settings in settings.json\");\n    }\n  },\n});\n","var _ = Package.underscore._,\n    package_name = \"rationalk:sheetconnector\",\n    namespace = \"rationalk:sheetconnector\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"invitation_to_join_info_login\":\"Your username will be your company email.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"rationalk:sheetconnector\",\n    namespace = \"rationalk:sheetconnector\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"External sheet\":\"Tableur externe\",\"Search score\":\"Score de recherche\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n"]}