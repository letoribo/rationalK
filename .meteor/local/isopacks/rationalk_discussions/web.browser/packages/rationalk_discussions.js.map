{"version":3,"sources":["rationalk:discussions/lib/methods.js","rationalk:discussions/lib/collections.js","rationalk:discussions/lib/routes.js","rationalk:discussions/lib/client/discussions.html","rationalk:discussions/lib/client/discussions.js","rationalk:discussions/lib/client/discussionInSearchResults.html","rationalk:discussions/lib/client/discussionInSearchResults.js","rationalk:discussions/lib/client/messageInSearchResults.html","rationalk:discussions/lib/client/messageInSearchResults.js"],"names":[],"mappings":";;;;;;;;AAAA,mB;AACA,gB;AACA,+B;AACA,iC;AACA,G;AACA,+E;AACA,G;AACA,E;AACA,iC;AACA,G;AACA,4E;AACA,G;AACA,E;;AAEA,qC;AACA,2B;AACA,sB;AACA,C;;AAEA,mD;AACA,c;AACA,oE;AACA,iE;AACA,Y;AACA,E;;AAEA,gE;AACA,S;AACA,6B;AACA,wB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,O;AACA,c;AACA,E;;AAEA,qD;AACA,S;AACA,6B;AACA,wB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,O;AACA,c;AACA,E;;AAEA,6D;AACA,S;AACA,6B;AACA,qB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,K;AACA,I;AACA,Y;AACA,E;;AAEA,kD;AACA,S;AACA,6B;AACA,qB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,K;AACA,I;AACA,Y;AACA,E;;AAEA,kD;AACA,iF;AACA,E;AACA,+C;AACA,8E;AACA,E;;AAEA,uC;AACA,iF;AACA,E;AACA,oC;AACA,8E;AACA,E;;AAEA,gB;AACA,iD;AACA,qC;AACA,wB;AACA,iC;AACA,4B;AACA,2B;AACA,uC;AACA,O;;AAEA,uC;AACA,oD;AACA,G;AACA,G;AACA,4D;AACA,2B;AACA,gC;AACA,qB;AACA,uB;AACA,iC;AACA,4B;AACA,2B;AACA,oC;AACA,O;;AAEA,uC;AACA,gD;AACA,G;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AC3IA,kD;AACA,4C;;AAEA,oB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,iB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,qD;AACA,sE;AACA,E;AACA,O;AACA,uD;AACA,uE;AACA,G;AACA,E;AACA,kD;AACA,mE;AACA,E;AACA,O;AACA,oD;AACA,oE;AACA,G;AACA,E;AACA,C;;AAEA,8C;AACA,oD;;;;;;;;;;;;;;;;;;;ACnCA,8C;AACA,gC;AACA,wB;AACA,yB;AACA,c;AACA,wC;AACA,qC;AACA,oC;AACA,Q;AACA,M;AACA,K;;AAEA,oC;AACA,uB;AACA,uB;AACA,sC;AACA,uB;AACA,S;AACA,M;AACA,yB;AACA,c;AACA,wD;AACA,sE;AACA,oC;AACA,Q;AACA,M;AACA,K;;AAEA,yC;AACA,mM;;AAEA,0B;AACA,K;AACA,2B;AACA,6C;AACA,K;AACA,I;AACA,C;;;;;;;;;;;;;;;;;;;;ACpCA,oC;AACA,4E;AACA,kB;AACA,mB;AACA,kB;AACA,uB;AACA,wB;AACA,yB;AACA,kC;AACA,yK;AACA,yB;AACA,qG;AACA,kB;AACA,2B;AACA,wB;AACA,6B;AACA,kC;AACA,gM;AACA,yB;AACA,8C;AACA,sD;AACA,iB;AACA,sH;AACA,iB;AACA,yF;AACA,2G;AACA,I;;AAEA,mD;AACA,0G;AACA,kB;AACA,mB;AACA,kB;AACA,wB;AACA,wB;AACA,yB;AACA,mB;AACA,yD;AACA,sD;AACA,qB;AACA,sB;AACA,sE;AACA,M;AACA,iC;AACA,6B;AACA,oB;AACA,mD;AACA,2D;AACA,sF;AACA,iF;AACA,yD;AACA,wD;AACA,mC;AACA,I;;AAEA,6C;AACA,8F;AACA,kB;AACA,mB;AACA,kB;AACA,uB;AACA,wB;AACA,yB;AACA,kC;AACA,mL;AACA,yB;AACA,mD;AACA,yB;AACA,oC;AACA,4B;AACA,c;AACA,8B;AACA,+C;AACA,kL;AACA,I;;AAEA,mC;AACA,0E;AACA,kB;AACA,mB;AACA,kB;AACA,wB;AACA,wB;AACA,yB;AACA,kC;AACA,0B;AACA,6B;AACA,8B;AACA,0B;AACA,0B;AACA,+D;AACA,sD;AACA,4C;AACA,yB;AACA,uC;AACA,mD;AACA,iB;AACA,wG;AACA,iB;AACA,4F;AACA,kK;AACA,I;;AAEA,gD;AACA,oG;AACA,kB;AACA,mB;AACA,kB;AACA,wB;AACA,wB;AACA,yB;AACA,mB;AACA,0B;AACA,kB;AACA,2B;AACA,wB;AACA,2D;AACA,sD;AACA,yC;AACA,uB;AACA,wE;AACA,wD;AACA,8D;AACA,iF;AACA,2D;AACA,I;;AAEA,kD;AACA,wG;AACA,kB;AACA,2C;AACA,yB;AACA,gC;AACA,4B;AACA,c;AACA,8B;AACA,gC;AACA,iI;AACA,I;;;;;;;;;;;;;;;;;;;AC3IA,8B;AACA,2B;AACA,8B;AACA,G;AACA,G;;AAEA,6C;AACA,iC;AACA,uE;AACA,G;AACA,4B;AACA,yD;AACA,G;AACA,G;;AAEA,6B;AACA,wB;AACA,iD;AACA,G;AACA,G;;AAEA,0C;AACA,iC;AACA,uE;AACA,G;AACA,G;;;AAGA,sC;AACA,8B;AACA,wB;AACA,qE;AACA,G;AACA,G;;AAEA,2C;AACA,8B;AACA,8D;AACA,sB;AACA,sE;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACxCA,kD;AACA,wG;AACA,kB;AACA,mB;AACA,mB;AACA,uB;AACA,kB;AACA,wB;AACA,wB;AACA,+D;AACA,sD;AACA,oC;AACA,uB;AACA,oI;AACA,kC;AACA,qD;AACA,iF;AACA,2F;AACA,wD;AACA,gC;AACA,I;;;;;;;;;;;;;;;;;;;ACrBA,4C;AACA,gC;AACA,uE;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;;ACHA,+C;AACA,kG;AACA,kB;AACA,mB;AACA,mB;AACA,uB;AACA,kB;AACA,wB;AACA,wB;AACA,+D;AACA,sD;AACA,oC;AACA,uB;AACA,8H;AACA,kC;AACA,qD;AACA,iF;AACA,4F;AACA,mF;AACA,uD;AACA,sB;AACA,oF;AACA,wC;AACA,U;AACA,M;AACA,iC;AACA,oD;AACA,I;;;;;;;;;;;;;;;;;;;AC5BA,yC;AACA,iC;AACA,qB;AACA,uE;AACA,G;AACA,G","file":"/packages/rationalk_discussions.js","sourcesContent":["RKDiscussions = {};\nRKMessages = {};\nRKDiscussions.Collections = {};\nRKCore.searchResultsPackage.push(\n  {\n    name: \"RKDiscussions\", // RKDiscussions.findAllFullTextSearch should exists\n  }\n);\nRKCore.searchResultsPackage.push(\n  {\n    name: \"RKMessages\", // RKDiscussions.findAllFullTextSearch should exists\n  }\n);\n\nif (typeof(RKCore) !== 'undefined') {\n  console.log(\"RKCore : \");\n  console.log(RKCore);\n}\n\nRKDiscussions.findAllFullTextSearch = function () {\n  var sr = [];\n  sr = sr.concat(Discussions.find({}, {sort: {score: -1}}).fetch());\n  sr = sr.concat(Messages.find({}, {sort: {score: -1}}).fetch());\n  return sr;\n};\n\nRKDiscussions.findFullTextDiscussions = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Discussions.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    });\n    return sr;\n};\n\nRKDiscussions.findFullText = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Discussions.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    });\n    return sr;\n};\n\nRKDiscussions.findFullTextMessages = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Messages.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    }\n  );\n  return sr;\n};\n\nRKMessages.findFullText = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Messages.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    }\n  );\n  return sr;\n};\n\nRKDiscussions.findDummyDiscussions = function () {\n  return Discussions.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\nRKDiscussions.findDummyMessages = function () {\n  return Messages.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n\nRKDiscussions.findDummy = function () {\n  return Discussions.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\nRKMessages.findDummy = function () {\n  return Messages.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n\nMeteor.methods({\n\tcreateDiscussion: function (discussionSubject) {\n    check(discussionSubject, String);\n    Discussions.insert({\n      subject: discussionSubject,\n      createdAt: new Date(),\n      who: Meteor.userId(),\n      searchResultFromDiscussion: true,\n    });\n\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('Discussion succesfully created');\n\t\t}\n\t},\n  addMessageToDiscussion: function (message, discussionId) {\n    check(message, String);\n    check(discussionId, String);\n    Messages.insert({\n      message: message,\n      discussionId: discussionId,\n      createdAt: new Date(),\n      who: Meteor.userId(),\n      searchResultFromMessage: true,\n    });\n\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('Message succesfully posted');\n\t\t}\n\t},\n});\n","Discussions = new Mongo.Collection('discussions');\nMessages = new Mongo.Collection('messages');\n\nDiscussions.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nMessages.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof Discussions.createIndex === 'function') {\n\t\tDiscussions.createIndex({ subject: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof Discussions._ensureIndex === 'function') {\n\t\t\tDiscussions._ensureIndex( { subject: \"text\" }, {name: \"TextIndex\"});\n\t\t}\n\t}\n\tif (typeof Messages.createIndex === 'function') {\n\t\tMessages.createIndex({ message: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof Messages._ensureIndex === 'function') {\n\t\t\tMessages._ensureIndex( { message: \"text\" }, {name: \"TextIndex\"});\n\t\t}\n\t}\n}\n\nRKDiscussions.Collections.Messages = Messages;\nRKDiscussions.Collections.Discussions = Discussions;\n","if (Meteor.settings.public.show.discussions) {\n  Router.route(\"/discussions\", {\n    name: \"discussions\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"discussions\"),\n        Meteor.subscribe(\"messages\"),\n        Meteor.subscribe(\"members\"),\n      ];\n    },\n  });\n\n  Router.route(\"/discussion/:_id\", {\n    name: \"discussion\",\n    data: function () {\n      return Discussions.findOne({}, {\n        reactive: true,\n      });\n    },\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"discussion\", this.params._id),\n        Meteor.subscribe(\"messagesinthisdiscussion\", this.params._id),\n        Meteor.subscribe(\"members\"),\n      ];\n    },\n  });\n\n  url = Router.routes.discussions.path();\n  menuHTML = new Spacebars.SafeString('<li><a href=\"' + url + '\" title=\"Ban emails, start discussions !\"><strong><span class=\"glyphicon glyphicon-comment\"></span></strong> Discussions</a></li>');\n\n  RKCore.packageMenu.push(\n    {\n      \"menuHTML\": menuHTML,\n      \"fromPackage\": \"rationalk:discussions\",\n    }\n  );\n}\n","\nTemplate.__checkName(\"discussions\");\nTemplate[\"discussions\"] = new Template(\"Template.discussions\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t \", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n\t\t\t \t\", HTML.Raw('<div class=\"panel-heading\" style=\"position:relative\">\\n\t\t\t \t\t<h3 class=\"panel-title\">Discussions</h3>\\n        \t\t</div>'), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel-body\"\n  }, \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"createDiscussionForm\")), \"\\n\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t\t\t\t\t \", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n\t\t\t\t\t\t\t \t\", HTML.Raw('<div class=\"panel-heading\" style=\"position:relative\">\\n\t\t\t\t\t\t\t \t\t<h3 class=\"panel-title\">Active discussions</h3>\\n\t\t\t\t        \t\t</div>'), \"\\n\t\t\t\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel-body\"\n  }, \"\\n\t\t\t\t\t    \t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"Discussions\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t    \t\t\t\t\", Spacebars.include(view.lookupTemplate(\"discussionElementInTheList\")), \"\\n\t\t\t\t\t\t\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\t\t\t\t\", HTML.P(\"You should create a discussion.\"), \"\t\\n\t\t\t\t\t\t\t\t\t\" ];\n  }), \"\\n\t\t\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\t \"), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n        \t\t\"), \"\\n    \t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"discussionElementInTheList\");\nTemplate[\"discussionElementInTheList\"] = new Template(\"Template.discussionElementInTheList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n\t\t\t\t\t\", Blaze.View(\"lookup:subject\", function() {\n    return Spacebars.mustache(view.lookup(\"subject\"));\n  }), \" - \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"discussion\");\n    },\n    title: \"Open this discussion\"\n  }, \"Messages \", HTML.SPAN({\n    \"class\": \"badge\"\n  }, Blaze.View(\"lookup:messageCount\", function() {\n    return Spacebars.mustache(view.lookup(\"messageCount\"));\n  }))), \" (Discussion initiated by \", Blaze.View(\"lookup:memberUsername\", function() {\n    return Spacebars.mustache(view.lookup(\"memberUsername\"), view.lookup(\"who\"));\n  }), \" on \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \")\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"createDiscussionForm\");\nTemplate[\"createDiscussionForm\"] = new Template(\"Template.createDiscussionForm\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t \", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n\t\t\t \t\", HTML.Raw('<div class=\"panel-heading\" style=\"position:relative\">\\n\t\t\t \t\t<h3 class=\"panel-title\">Initiate a discussion</h3>\\n        \t\t</div>'), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel-body\"\n  }, \"\\n\t\t\t\t\t\", HTML.FORM(\"\\n\t\t\t\t\t    \", HTML.DIV({\n    \"class\": \"form-group\"\n  }, \"\\n\t\t\t\t\t\t    \", HTML.TEXTAREA({\n    \"class\": \"form-control\",\n    rows: \"3\",\n    name: \"discussionSubject\",\n    placeholder: \"The subject or your question\"\n  }), \"\\n\t\t\t\t\t    \"), \"\\n\t\t\t\t\t    \", HTML.Raw('<button type=\"submit\" class=\"btn btn-primary\">Initiate Discussion</button>'), \"\\n\t\t\t\t    \"), \"\\n\t\t\t\t\"), \"\\n\t\t\t \"), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"discussion\");\nTemplate[\"discussion\"] = new Template(\"Template.discussion\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n\t\t\t \t\", HTML.DIV({\n    \"class\": \"panel-heading\",\n    style: \"position:relative\"\n  }, \"\\n\t\t\t \t\t\", HTML.H3({\n    \"class\": \"panel-title\"\n  }, \"Discussion : \", Blaze.View(\"lookup:subject\", function() {\n    return Spacebars.mustache(view.lookup(\"subject\"));\n  })), \"\\n        \t\t\"), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel-body\"\n  }, \"\\n\t\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"Messages\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"messageElementInTheList\")), \"\\n\t\t\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\", HTML.P(\"There is no message in this discussion yet.\"), \"\\n\t\t\t\t\t\" ];\n  }), \"\\n\t\t\t\t\t\", HTML.Raw(\"<hr>\"), \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"addMessageToTheDiscussion\")), \"\\n        \t\t\"), \"\\n    \t\t\"), \"\\n\t\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"messageElementInTheList\");\nTemplate[\"messageElementInTheList\"] = new Template(\"Template.messageElementInTheList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-10\"\n  }, \"\\n\t\t\t\t\t\t\t\", Blaze.View(\"lookup:message\", function() {\n    return Spacebars.mustache(view.lookup(\"message\"));\n  }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-2\"\n  }, \"\\n\t\t\t\t\t\t\twritten on \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \" by \", Blaze.View(\"lookup:memberUsername\", function() {\n    return Spacebars.mustache(view.lookup(\"memberUsername\"), view.lookup(\"who\"));\n  }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"addMessageToTheDiscussion\");\nTemplate[\"addMessageToTheDiscussion\"] = new Template(\"Template.addMessageToTheDiscussion\", (function() {\n  var view = this;\n  return HTML.FORM(\"\\n        \", HTML.DIV({\n    \"class\": \"form-group\"\n  }, \"\\n\t\t    \", HTML.TEXTAREA({\n    \"class\": \"form-control\",\n    rows: \"3\",\n    name: \"discussionMessage\",\n    placeholder: \"Say something\"\n  }), \"\\n\t    \"), HTML.Raw('\\n\t    <button type=\"submit\" class=\"btn btn-primary\">Contribute to this discussion</button>\\n    '));\n}));\n","Template.discussions.helpers({\n\tDiscussions: function () {\n\t\treturn Discussions.find({});\n\t},\n});\n\nTemplate.discussionElementInTheList.helpers({\n\tmemberUsername: function (who) {\n\t\treturn Members.collection.findOne({accountId: who}).profile.nickname;\n\t},\n\tmessageCount: function () {\n\t\treturn Messages.find({discussionId: this._id}).count();\n\t},\n});\n\nTemplate.discussion.helpers({\n\tMessages: function () {\n\t\treturn Messages.find({discussionId: this._id});\n\t},\n});\n\nTemplate.messageElementInTheList.helpers({\n\tmemberUsername: function (who) {\n\t\treturn Members.collection.findOne({accountId: who}).profile.nickname;\n\t},\n});\n\n\nTemplate.createDiscussionForm.events({\n\t'submit form': function (e) {\n\t    e.preventDefault();\n\t\t\tMeteor.call('createDiscussion', e.target.discussionSubject.value);\n\t},\n});\n\nTemplate.addMessageToTheDiscussion.events({\n\t'submit form': function (e) {\n\t    var discussionMessage = e.target.discussionMessage.value;\n\t\t\te.preventDefault();\n\t\t\tMeteor.call('addMessageToDiscussion', discussionMessage, this._id);\n\t},\n});\n","\nTemplate.__checkName(\"discussionInSearchResults\");\nTemplate[\"discussionInSearchResults\"] = new Template(\"Template.discussionInSearchResults\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-10\"\n  }, \"\\n\t\t\t\t\", HTML.P(Blaze.View(\"lookup:subject\", function() {\n    return Spacebars.mustache(view.lookup(\"subject\"));\n  })), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-2\"\n  }, \"\\n\t\t\t\t\", HTML.Raw('<span class=\"label label-success\">Discussion</span>'), HTML.Raw(\"<br>\"), \"\\n\t\t\t\tInitiated by \", HTML.SPAN({\n    \"class\": \"label label-default\"\n  }, Blaze.View(\"lookup:memberUsername\", function() {\n    return Spacebars.mustache(view.lookup(\"memberUsername\"), view.lookup(\"who\"));\n  })), \"\\n\t\t\t\t\", HTML.Raw(\"<br>\"), \"\\n\t\t\t\ton \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n","Template.discussionInSearchResults.helpers({\n\tmemberUsername: function (who){\n\t\t\treturn Members.collection.findOne({accountId:who}).profile.nickname;\n\t}\n});\n","\nTemplate.__checkName(\"messageInSearchResults\");\nTemplate[\"messageInSearchResults\"] = new Template(\"Template.messageInSearchResults\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-10\"\n  }, \"\\n\t\t\t\t\", HTML.P(Blaze.View(\"lookup:message\", function() {\n    return Spacebars.mustache(view.lookup(\"message\"));\n  })), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-2\"\n  }, \"\\n\t\t\t\t\", HTML.Raw('<span class=\"label label-success\">Message</span>'), HTML.Raw(\"<br>\"), \"\\n\t\t\t\tPosted by \", HTML.SPAN({\n    \"class\": \"label label-default\"\n  }, Blaze.View(\"lookup:memberUsername\", function() {\n    return Spacebars.mustache(view.lookup(\"memberUsername\"), view.lookup(\"who\"));\n  })), \"\\n\t\t\t\t\", HTML.Raw(\"<br>\"), \"\\n\t\t\t\ton \", Blaze.View(\"lookup:formatTime\", function() {\n    return Spacebars.mustache(view.lookup(\"formatTime\"), view.lookup(\"createdAt\"));\n  }), \"\\n\t\t\t\t\", HTML.Raw(\"<br>\"), \"\\n\t\t\t\tin \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"discussion\", Spacebars.kw({\n        _id: view.lookup(\"discussionId\")\n      }));\n    },\n    title: \"Open the discussions\"\n  }, \"this discussion\"), \".\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n","Template.messageInSearchResults.helpers({\n\tmemberUsername: function (who) {\n\t\tcheck(who, String);\n\t\treturn Members.collection.findOne({accountId: who}).profile.nickname;\n\t},\n});\n"]}