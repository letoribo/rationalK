{"version":3,"sources":["rationalk:trello/lib/methods.js","rationalk:trello/lib/collections.js","rationalk:trello/lib/routes.js","rationalk:trello/lib/server/publications.js","rationalk:trello/lib/server/trello.js"],"names":[],"mappings":";;;;;;;;AAAA,c;;AAEA,gC;AACA,sD;AACA,E;;AAEA,gD;AACA,gC;AACA,gB;AACA,+B;AACA,U;AACA,Q;AACA,kD;AACA,gD;AACA,kB;AACA,O;AACA,E;;AAEA,kC;AACA,4E;AACA,E;;;;;;;;;;;;;;;;;;;ACpBA,wC;;AAEA,e;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,gD;AACA,8D;AACA,E;AACA,O;AACA,kD;AACA,+D;AACA,E;AACA,C;AACA,iB;;AAEA,mC;AACA,yB;;;;;;;;;;;;;;;;;;;ACpBA,yC;AACA,2B;AACA,mB;AACA,yB;AACA,c;AACA,mC;AACA,oC;AACA,uC;AACA,Q;AACA,M;AACA,K;AACA,C;;;;;;;;;;;;;;;;;;;ACXA,sC;AACA,uB;AACA,G;;;;;;;;;;;;;;;;;;;ACFA,gB;AACA,iD;AACA,2B;AACA,gB;AACA,iB;AACA,a;AACA,U;AACA,oC;AACA,qC;AACA,oD;AACA,G;AACA,sB;AACA,mE;AACA,mC;AACA,gC;AACA,qC;AACA,+B;AACA,0B;AACA,G;AACA,wB;AACA,gC;AACA,sC;AACA,+B;AACA,+B;AACA,I;AACA,Y;AACA,6B;AACA,4B;AACA,0B;AACA,sB;AACA,G;AACA,e;AACA,G;AACA,kD;AACA,gB;AACA,iB;AACA,a;AACA,U;AACA,oC;AACA,qC;AACA,oD;AACA,G;AACA,mC;AACA,iB;AACA,0B;AACA,K;AACA,gC;AACA,qC;AACA,+B;AACA,0B;AACA,G;AACA,wB;AACA,gC;AACA,sC;AACA,+B;AACA,+B;AACA,I;AACA,Y;AACA,6B;AACA,gC;AACA,0B;AACA,2C;AACA,sB;AACA,G;AACA,e;AACA,G;AACA,G","file":"/packages/rationalk_trello.js","sourcesContent":["RKTrello = {};\n\nRKTrello.findAll = function () {\n  return Trello.find({}, {sort: {score: -1}}).fetch();\n};\n\nRKTrello.findFullText = function (searchQuery) {\n  return RKTrello.Trello.find( {\n        $text: {\n          $search: searchQuery,\n        },\n    }, {\n        fields: { score: { $meta: 'textScore' } },\n        sort: { score: { $meta: 'textScore' } },\n        limit: 30,\n    });\n};\n\nRKTrello.findDummy = function () {\n  return Trello.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n","Trello = new Mongo.Collection('Trello');\n\nTrello.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof Trello.createIndex === 'function') {\n\t\tTrello.createIndex({ full: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof Trello._ensureIndex === 'function') {\n\t\t\tTrello._ensureIndex( { full: \"text\" }, {name: \"TextIndex\"});\n\t}\n}\n} //end if Server\n\n//expose it to the other packages :\nRKTrello.Trello = Trello;\n","if (Meteor.settings.public.show.trello) {\n  Router.route(\"/trello\", {\n    name: \"trello\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"trello\"),\n        Meteor.subscribe(\"members\"),\n        Meteor.subscribe(\"rkSettings\"),\n      ];\n    },\n  });\n}\n","Meteor.publish(\"trello\", function () {\n  return Trello.find();\n});\n","Meteor.methods({\n\tloadTrelloBoard: function (trelloJSONFilename) {\n\t\tvar trelloBoardJSON = {};\n\t\tvar boardName;\n\t\tvar cards = {};\n\t\tvar nCards;\n\t\tvar obj;\n\t\tcheck(trelloJSONFilename, String);\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log('Starting loading trello json file');\n\t\t}\n    Trello.remove({});\n\t\ttrelloBoardJSON = JSON.parse(Assets.getText(trelloJSONFilename));\n\t\tboardName = trelloBoardJSON.name;\n\t\tcards = trelloBoardJSON.cards;\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log(\"boardName : \");\n\t\t\tconsole.log(boardName);\n\t\t}\n\t\tnCards = cards.length;\n\t\tfor (i = 0; i < nCards; i++) {\n\t\t\tif (Meteor.settings.public.debug) {\n\t\t\t\tconsole.log(\"cardName : \");\n\t\t\t\tconsole.log(cards[i].name);\n\t\t\t}\n\t\t\tobj = {};\n\t\t\tobj.boardName = boardName;\n\t\t\tobj.full = cards[i].name;\n\t\t\tobj.url = cards[i].url;\n\t\t\tTrello.insert(obj);\n\t\t}\n\t  return true;\n\t},\n\tloadTrelloBoardJSON: function (trelloBoardJSON) {\n\t\tvar boardName;\n\t\tvar cards = {};\n\t\tvar nCards;\n\t\tvar obj;\n\t\tcheck(trelloBoardJSON, Match.Any);\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log('Starting loading trello json file');\n\t\t}\n\t\tboardName = trelloBoardJSON.name;\n\t\tTrello.remove({\n\t\t\t\"boardName\": boardName,\n\t\t});\n\t\tcards = trelloBoardJSON.cards;\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log(\"boardName : \");\n\t\t\tconsole.log(boardName);\n\t\t}\n\t\tnCards = cards.length;\n\t\tfor (i = 0; i < nCards; i++) {\n\t\t\tif (Meteor.settings.public.debug) {\n\t\t\t\tconsole.log(\"cardName : \");\n\t\t\t\tconsole.log(cards[i].name);\n\t\t\t}\n\t\t\tobj = {};\n\t\t\tobj.boardName = boardName;\n\t\t\tobj.cardName = cards[i].name;\n\t\t\tobj.url = cards[i].url;\n\t\t\tobj.full = cards[i].name + cards[i].url;\n\t\t\tTrello.insert(obj);\n\t\t}\n\t  return true;\n\t},\n});\n"]}