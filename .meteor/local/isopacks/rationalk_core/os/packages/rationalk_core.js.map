{"version":3,"sources":["rationalk:core/lib/methods.js","rationalk:core/lib/routes.js","rationalk:core/lib/server/methods.js"],"names":[],"mappings":";;;;;;;;AAAA,Y;AACA,wE;AACA,kF;AACA,gF;AACA,8E;AACA,iC;AACA,yC;AACA,6B;;AAEA,8B;AACA,qC;AACA,sB;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;ACbA,4B;AACA,2B;AACA,iC;AACA,W;AACA,G;AACA,sC;AACA,gB;AACA,W;AACA,G;AACA,0C;AACA,gB;AACA,W;AACA,G;AACA,oC;AACA,gB;AACA,W;AACA,G;AACA,uC;AACA,gB;AACA,W;AACA,G;AACA,yB;AACA,+B;AACA,kB;AACA,W;AACA,G;AACA,c;AACA,E;;AAEA,mC;AACA,c;AACA,G;;AAEA,oC;;AAEA,mB;AACA,oB;AACA,uB;AACA,Y;AACA,gC;AACA,+B;AACA,8E;AACA,kC;AACA,oC;AACA,qC;AACA,kC;AACA,Q;AACA,I;AACA,a;AACA,mB;AACA,I;AACA,G;;AAEA,kB;AACA,2B;AACA,6B;AACA,uB;AACA,yC;AACA,I;AACA,G;;AAEA,wB;AACA,gC;AACA,qB;AACA,2C;AACA,wB;AACA,I;AACA,uB;AACA,Y;AACA,oC;AACA,mC;AACA,kC;AACA,M;AACA,I;AACA,G;;AAEA,gC;AACA,iC;AACA,G;;;AAGA,wC;AACA,wB;AACA,uB;AACA,Y;;AAEA,M;AACA,I;AACA,G;;AAEA,8B;AACA,qB;AACA,uB;AACA,0C;AACA,I;AACA,G;;AAEA,uB;AACA,uB;AACA,Y;AACA,+B;AACA,+B;AACA,M;AACA,I;AACA,G;;AAEA,oC;AACA,sB;AACA,qB;AACA,iD;AACA,I;AACA,uB;AACA,0C;AACA,I;AACA,G;;AAEA,2B;AACA,sB;AACA,uB;AACA,0C;AACA,I;AACA,G;;AAEA,yB;AACA,iB;AACA,uB;AACA,Y;AACA,iC;AACA,M;AACA,I;AACA,G;;AAEA,0B;AACA,kB;AACA,uB;AACA,Y;AACA,kC;AACA,qC;AACA,M;AACA,I;AACA,G;;;;AAIA,6B;AACA,oB;AACA,uB;AACA,Y;AACA,kC;AACA,M;AACA,I;AACA,G;;AAEA,mC;AACA,qB;AACA,qB;AACA,uC;AACA,2B;AACA,O;AACA,I;AACA,uB;AACA,Y;AACA,kD;AACA,qC;AACA,M;AACA,I;AACA,G;;AAEA,4B;AACA,kB;AACA,uB;AACA,uC;AACA,I;AACA,G;;AAEA,iC;AACA,mB;AACA,qB;AACA,8B;AACA,qB;AACA,O;AACA,I;AACA,uB;AACA,kB;AACA,kC;AACA,6C;AACA,I;AACA,G;;AAEA,wB;AACA,mB;AACA,uB;AACA,Y;AACA,gC;AACA,M;AACA,I;AACA,G;;AAEA,4B;AACA,oB;AACA,uB;AACA,2C;AACA,I;AACA,G;;AAEA,sB;AACA,c;AACA,uB;AACA,Y;AACA,mC;AACA,M;AACA,I;AACA,G;;;AAGA,8C;AACA,gC;AACA,wB;AACA,yB;AACA,+C;AACA,M;AACA,K;;AAEA,8C;AACA,qB;AACA,kC;AACA,yB;AACA,+C;AACA,M;AACA,K;;AAEA,kD;AACA,yB;AACA,kC;AACA,yB;AACA,+C;AACA,M;AACA,K;AACA,C;;AAEA,2C;AACA,2B;AACA,uB;AACA,kB;AACA,iC;AACA,Y;AACA,qC;AACA,qC;AACA,M;AACA,I;AACA,G;;AAEA,4C;AACA,8B;AACA,sB;AACA,yB;AACA,c;AACA,sC;AACA,uC;AACA,Q;AACA,M;AACA,K;;AAEA,qC;AACA,6B;AACA,yB;AACA,oD;AACA,M;AACA,K;;AAEA,iC;AACA,oB;AACA,uB;AACA,gD;AACA,M;AACA,yB;AACA,kG;AACA,M;AACA,K;;AAEA,iE;AACA,mC;AACA,uB;AACA,sD;AACA,M;AACA,yB;AACA,c;AACA,2D;AACA,6C;AACA,iC;AACA,sC;AACA,uC;AACA,0C;AACA,kC;AACA,wC;AACA,qC;AACA,oC;AACA,wC;AACA,oC;AACA,Q;AACA,M;AACA,K;AACA,C;;AAEA,yC;AACA,2B;AACA,mB;AACA,yB;AACA,c;AACA,mC;AACA,Q;AACA,M;AACA,K;;AAEA,+B;AACA,kB;AACA,uB;AACA,6C;AACA,M;AACA,yB;AACA,c;AACA,oD;AACA,S;AACA,M;AACA,K;AACA,C;;AAEA,iC;AACA,oB;AACA,uB;AACA,Y;AACA,qC;AACA,M;AACA,I;AACA,G;;AAEA,iC;AACA,oB;AACA,uB;AACA,Y;AACA,qC;AACA,+B;AACA,M;AACA,I;AACA,G;;AAEA,8B;AACA,sB;AACA,uB;AACA,Y;;AAEA,M;AACA,I;AACA,G;;AAEA,gC;AACA,kB;AACA,+B;AACA,0D;AACA,kF;AACA,kC;AACA,K;AACA,U;AACA,kB;AACA,K;AACA,I;AACA,qB;AACA,yC;AACA,I;AACA,uB;AACA,kB;AACA,iC;AACA,Y;AACA,qC;AACA,2C;AACA,6C;AACA,gD;AACA,2D;AACA,yC;AACA,qC;AACA,kC;AACA,iD;AACA,M;AACA,I;AACA,G;;AAEA,qC;AACA,uB;AACA,qB;AACA,8C;AACA,I;AACA,uB;AACA,kB;AACA,sC;AACA,Y;AACA,qC;AACA,sC;AACA,kC;AACA,2C;AACA,0C;AACA,yC;AACA,kC;AACA,M;AACA,I;AACA,G;;AAEA,6B;AACA,oB;AACA,sB;AACA,+B;AACA,0D;AACA,kF;AACA,kC;AACA,K;AACA,U;AACA,kB;AACA,K;AACA,I;AACA,qB;AACA,Y;AACA,kD;AACA,M;AACA,I;AACA,uB;AACA,Y;AACA,+B;AACA,gC;AACA,kC;AACA,qC;AACA,yC;AACA,qC;AACA,M;AACA,I;AACA,G;;AAEA,iC;AACA,sB;AACA,uB;AACA,uE;AACA,I;AACA,G;;AAEA,qC;AACA,uB;AACA,qB;AACA,+C;AACA,I;AACA,uB;AACA,kB;AACA,sC;AACA,Y;AACA,2C;AACA,sC;AACA,qC;AACA,M;AACA,I;AACA,G;;AAEA,6B;AACA,uB;AACA,uB;AACA,Y;AACA,qC;AACA,gC;AACA,M;AACA,I;AACA,G;;AAEA,2C;AACA,qB;AACA,yB;AACA,qB;AACA,iE;AACA,I;AACA,uB;AACA,mG;AACA,I;AACA,G;;AAEA,mC;AACA,oB;AACA,wB;AACA,uB;AACA,6H;AACA,I;AACA,G;;AAEA,wC;AACA,iB;AACA,qB;AACA,oC;AACA,I;AACA,uB;AACA,Y;AACA,kC;AACA,qC;AACA,gC;AACA,+B;AACA,kC;AACA,oC;AACA,M;AACA,I;AACA,G;;AAEA,uB;AACA,e;AACA,uB;AACA,Y;AACA,kC;AACA,M;AACA,I;AACA,G;;AAEA,wC;AACA,yB;AACA,C;;AAEA,uB;AACA,uB;AACA,Y;AACA,wC;AACA,qC;AACA,mC;AACA,M;AACA,I;AACA,G;;AAEA,wB;AACA,gB;AACA,uB;AACA,Y;AACA,sC;AACA,mC;AACA,M;AACA,I;AACA,G;;AAEA,2B;AACA,mB;AACA,uB;AACA,c;AACA,I;AACA,G;;AAEA,yB;AACA,iB;AACA,uB;AACA,Y;AACA,kC;AACA,M;AACA,I;AACA,G;;AAEA,2B;AACA,mB;AACA,uB;AACA,0C;AACA,I;AACA,G;;AAEA,gD;AACA,kC;AACA,0B;AACA,yB;AACA,gB;AACA,M;AACA,K;AACA,C;;AAEA,yB;AACA,oB;AACA,uB;AACA,0B;AACA,oC;AACA,qC;AACA,+C;AACA,gC;AACA,+B;AACA,kC;AACA,mC;AACA,kC;AACA,qC;AACA,M;;AAEA,qE;;AAEA,gG;AACA,6C;AACA,2C;AACA,+E;AACA,yC;AACA,iE;AACA,O;;;AAGA,yE;AACA,+C;AACA,6C;AACA,iF;AACA,yC;AACA,mE;AACA,O;;AAEA,qH;;AAEA,kC;AACA,yC;AACA,kC;AACA,2D;AACA,S;AACA,O;AACA,K;;AAEA,yB;AACA,I;AACA,G;;;AAGA,wB;AACA,gB;AACA,uB;AACA,Y;AACA,qC;AACA,+B;AACA,kC;AACA,oC;AACA,wC;AACA,kC;AACA,+B;AACA,M;AACA,I;AACA,G;;AAEA,sC;AACA,6B;AACA,uB;AACA,gD;AACA,I;AACA,G;;AAEA,2B;AACA,2B;AACA,uB;AACA,Y;AACA,qC;AACA,qE;AACA,M;AACA,I;AACA,G;;;;;;;;;;;;;;;;;;;ACxoBA,gB;AACA,uC;AACA,iB;AACA,iD;AACA,+C;AACA,8B;AACA,4C;AACA,e;AACA,G;AACA,e;AACA,G;AACA,iC;AACA,iB;AACA,0C;AACA,8H;AACA,8B;AACA,wC;AACA,kB;AACA,G;AACA,Q;AACA,gB;AACA,G;AACA,G;AACA,2B;AACA,iB;AACA,oC;AACA,kD;AACA,8B;AACA,4C;AACA,e;AACA,G;AACA,Q;AACA,gB;AACA,G;AACA,G;AACA,8B;AACA,0B;AACA,a;AACA,iB;AACA,I;AACA,sC;AACA,a;AACA,yB;AACA,gB;AACA,0E;AACA,K;AACA,sB;AACA,8D;AACA,K;AACA,wB;AACA,4B;AACA,O;AACA,I;AACA,yC;AACA,0B;AACA,wB;AACA,gD;AACA,yB;AACA,gB;AACA,uE;AACA,K;AACA,W;AACA,6B;AACA,gB;AACA,M;AACA,c;AACA,qB;AACA,sB;AACA,uB;AACA,oC;AACA,gC;AACA,yC;AACA,gC;AACA,K;AACA,oB;AACA,mC;AACA,2B;AACA,oB;AACA,Q;AACA,c;AACA,uB;AACA,+B;AACA,qD;AACA,mB;AACA,Y;AACA,iB;AACA,4B;AACA,wB;AACA,W;AACA,+C;AACA,yB;AACA,uB;AACA,c;AACA,0F;AACA,qB;AACA,O;AACA,K;AACA,0D;;AAEA,0C;AACA,gE;AACA,kB;AACA,G;;AAEA,I;AACA,4D;AACA,0B;AACA,wB;AACA,mB;AACA,6B;AACA,gB;AACA,2E;AACA,K;AACA,uC;AACA,qB;AACA,O;AACA,iC;AACA,8B;AACA,iB;AACA,O;AACA,sB;AACA,uB;AACA,oC;AACA,mC;AACA,uB;AACA,sB;AACA,6B;AACA,yB;AACA,qB;AACA,S;AACA,K;AACA,gB;AACA,I;AACA,sC;AACA,+F;AACA,mE;AACA,e;AACA,G;AACA,G","file":"/packages/rationalk_core.js","sourcesContent":["RKCore = {};\nRKCore.packageMenu = []; // Packages can hook there to add menu entries.\nRKCore.packageDashboard = []; // Packages can hook there to add dashboard entries.\nRKCore.packageSettings = []; // Packages can hook there to add settings entries.\nRKCore.packageBackup = []; // Packages can hook there to add table for backup.\nRKCore.searchResultsPackage = [];\nRKCore.externalSearchResultsPackage = [];\nRKCore.customFieldsType = [];\n\nRKCore.log = function (data) {\n  if (Meteor.settings.public.debug) {\n    console.log(data);\n  }\n};\n","enforceLogin = function () {\n  var routeName = this.url;\n  if (routeName.match(/login/)) {\n    return;\n  }\n  if (routeName.match(/invitation/)) {\n    this.next();\n    return;\n  }\n  if (routeName.match(/reset-password/)) {\n    this.next();\n    return;\n  }\n  if (routeName.match(/external/)) {\n    this.next();\n    return;\n  }\n  if (routeName.match(/serverToken/)) {\n    this.next();\n    return;\n  }\n  if (!Meteor.userId()) {\n    this.layout(\"loginLayout\");\n    this.render();\n    return;\n  }\n  this.next();\n};\n\nRouter.onBeforeAction(function () {\n  this.next();\n});\n\nRouter.onBeforeAction(enforceLogin);\n\nRouter.route(\"/\", {\n  name: \"dashboard\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"views\"),\n      Meteor.subscribe(\"docs\"),\n      Meteor.subscribe(\"members\"), //needed to display the last activity owner\n      Meteor.subscribe(\"history\"),\n      Meteor.subscribe(\"revisions\"),\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"mySpace\"),\n      ];\n  },\n  progress: {\n    enabled: false,\n  },\n});\n\nRouter.configure({\n  layoutTemplate: \"layout\",\n  loadingTemplate: \"loading\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"members\")];\n  },\n});\n\nRouter.route(\"/login\", {\n  layoutTemplate: 'loginLayout',\n  data: function () {\n    templateData = { docs: Docs.find({}) };\n    return templateData;\n  },\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"naccounts\"),\n      Meteor.subscribe(\"accounts\"),\n      Meteor.subscribe(\"members\"),\n    ];\n  },\n});\n\nRouter.route(\"/access-denied\", {\n  layoutTemplate: 'accessDenied',\n});\n\n\nRouter.route(\"/reset-password/:token\", {\n  name: \"resetPassword\",\n  waitOn: function () {\n    return [\n\n    ];\n  },\n});\n\nRouter.route(\"/account/new\", {\n  name: \"accountNew\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"accounts\")];\n  },\n});\n\nRouter.route(\"/tags\", {\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"docs\"),\n      Meteor.subscribe(\"tags\"),\n    ];\n  },\n});\n\nRouter.route(\"/account/:_id/edit\", {\n  name: \"accountEdit\",\n  data: function () {\n    return Meteor.users.findOne(this.params._id);\n  },\n  waitOn: function () {\n    return [Meteor.subscribe(\"accounts\")];\n  },\n});\n\nRouter.route(\"/accounts\", {\n  name: \"accountList\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"accounts\")];\n  },\n});\n\nRouter.route(\"/axapta\", {\n  name: \"axapta\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"axapta\"),\n    ];\n  },\n});\n\nRouter.route(\"/members\", {\n  name: \"members\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"invitation\"),\n    ];\n  },\n});\n\n\n\nRouter.route(\"/member/new\", {\n  name: \"memberNew\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"members\"),\n    ];\n  },\n});\n\nRouter.route(\"/member/:_id/edit\", {\n  name: \"memberEdit\",\n  data: function () {\n    return Members.collection.findOne({\n      _id: this.params._id,\n    });\n  },\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"member\", this.params._id),\n      Meteor.subscribe(\"rkSettings\"),\n    ];\n  },\n});\n\nRouter.route(\"/views/add\", {\n  name: \"viewNew\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"views\")];\n  },\n});\n\nRouter.route(\"/view/:_id/edit\", {\n  name: \"viewEdit\",\n  data: function () {\n    return Views.findOne({}, {\n      reactive: true,\n    });\n  },\n  waitOn: function () {\n    var data = {};\n    data.viewId = this.params._id;\n    return [Meteor.subscribe(\"views\", data)];\n  },\n});\n\nRouter.route(\"/views\", {\n  name: \"viewList\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"views\"),\n    ];\n  },\n});\n\nRouter.route(\"/filelinks\", {\n  name: \"filelinks\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"filelinks\")];\n  },\n});\n\nRouter.route(\"/xml\", {\n  name: \"xml\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"XMLFiles\"),\n    ];\n  },\n});\n\n\nif (Meteor.settings.public.show.controlplan) {\n  Router.route(\"/controlplan\", {\n    name: \"controlplan\",\n    waitOn: function () {\n      return [Meteor.subscribe(\"controlplan\")];\n    },\n  });\n\n  Router.route(\"/controlplan/:_id/decCDMER\", {\n    name: \"decCDMER\",\n    layoutTemplate: 'printLayout',\n    waitOn: function () {\n      return [Meteor.subscribe(\"controlplan\")];\n    },\n  });\n\n  Router.route(\"/controlplan/:_id/planageCDMER\", {\n    name: \"planageCDMER\",\n    layoutTemplate: 'printLayout',\n    waitOn: function () {\n      return [Meteor.subscribe(\"controlplan\")];\n    },\n  });\n}\n\nRouter.route(\"/processes/:role/listDocs\", {\n  name: \"listDocsForRoles\",\n  waitOn: function () {\n    var data = {};\n    data.role = this.params.role;\n    return [\n      Meteor.subscribe(\"docs\", data),\n      Meteor.subscribe(\"rkSettings\"),\n    ];\n  },\n});\n\nif (Meteor.settings.public.show.processes) {\n  Router.route(\"/processes\", {\n    name: \"processes\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"processes\"),\n        Meteor.subscribe(\"rkSettings\"),\n      ];\n    },\n  });\n\n  Router.route(\"/processdocuments\", {\n    name: \"processdocuments\",\n    waitOn: function () {\n      return [Meteor.subscribe(\"processdocuments\")];\n    },\n  });\n\n  Router.route(\"/process/:_id\", {\n    name: \"process\",\n    data: function () {\n      return Processes.findOne(this.params._id);\n    },\n    waitOn: function () {\n      return [Meteor.subscribe(\"process\", this.params._id), Meteor.subscribe(\"processdocuments\")];\n    },\n  });\n\n  Router.route(\"/updateprocessdocuments/:processId/:elementId\", {\n    name: \"updateprocessdocuments\",\n    data: function () {\n      return Processes.findOne(this.params.processId);\n    },\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"process\", this.params.processId),\n        Meteor.subscribe(\"processdocuments\"),\n        Meteor.subscribe(\"docs\"),\n        Meteor.subscribe(\"revisions\"),\n        Meteor.subscribe(\"categories\"),\n        Meteor.subscribe(\"searchqueries\"),\n        Meteor.subscribe(\"views\"),\n        Meteor.subscribe(\"discussions\"),\n        Meteor.subscribe(\"messages\"),\n        Meteor.subscribe(\"members\"),\n        Meteor.subscribe(\"walkedfiles\"),\n        Meteor.subscribe(\"myNotes\"),\n      ];\n    },\n  });\n}\n\nif (Meteor.settings.public.show.gantts) {\n  Router.route(\"/gantts\", {\n    name: \"gantts\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"gantts\"),\n      ];\n    },\n  });\n\n  Router.route(\"/gantt/:_id\", {\n    name: \"gantt\",\n    data: function () {\n      return Gantts.findOne(this.params._id);\n    },\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"gantts\", this.params._id),\n       ];\n    },\n  });\n}\n\nRouter.route(\"/docs/docImport\", {\n  name: \"docImport\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"categories\"),\n    ];\n  },\n});\n\nRouter.route(\"/docs/docExport\", {\n  name: \"docExport\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe('docs'),\n    ];\n  },\n});\n\nRouter.route(\"/calculation\", {\n  name: \"calculation\",\n  waitOn: function () {\n    return [\n\n    ];\n  },\n});\n\nRouter.route(\"/doc/:_id/edit\", {\n  name: \"docEdit\",\n  onBeforeAction: function () {\n    if (Roles.userIsInRole(Meteor.user(), ['readonly'])) {\n      // render the accessDenied template but keep the url in the browser the same\n      this.render('accessDenied');\n    }\n    else {\n      this.next();\n    }\n  },\n  data: function () {\n    return Docs.findOne(this.params._id);\n  },\n  waitOn: function () {\n    var data = {};\n    data.docId = this.params._id;\n    return [\n      Meteor.subscribe(\"docs\", data),\n      Meteor.subscribe(\"views\"), //need all\n      Meteor.subscribe(\"members\"), //need all\n      Meteor.subscribe(\"categories\"), //need all\n      Meteor.subscribe(\"attachments\", \"doc-\" + data.docId),\n      Meteor.subscribe(\"predefinedtags\"),\n      Meteor.subscribe(\"rkSettings\"),\n      Meteor.subscribe(\"mySpace\"),\n      Meteor.subscribe(\"docHistory\", data.docId),\n    ];\n  },\n});\n\nRouter.route(\"/revision/:_id/view\", {\n  name: \"revisionView\",\n  data: function () {\n    return Revisions.findOne(this.params._id);\n  },\n  waitOn: function () {\n    var data = {};\n    data.revisionId = this.params._id;\n    return [\n      Meteor.subscribe(\"docs\", data),\n      Meteor.subscribe(\"views\", data),\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"categories\", data),\n      Meteor.subscribe(\"revisions\", data),\n      Meteor.subscribe(\"predefinedtags\"),\n      Meteor.subscribe(\"mySpace\"),\n    ];\n  },\n});\n\nRouter.route(\"/doc/create\", {\n  name: \"docCreate\",\n  template: \"docEdit\",\n  onBeforeAction: function () {\n    if (Roles.userIsInRole(Meteor.user(), ['readonly'])) {\n      // render the accessDenied template but keep the url in the browser the same\n      this.render('accessDenied');\n    }\n    else {\n      this.next();\n    }\n  },\n  data: function () {\n    return {\n      categoryId: Session.get('selectedCategory'),\n    };\n  },\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"docs\"),\n      Meteor.subscribe(\"views\"),\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"predefinedtags\"),\n      Meteor.subscribe(\"rkSettings\"),\n    ];\n  },\n});\n\nRouter.route(\"/categories/add\", {\n  name: \"categoryNew\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"categories\"), Meteor.subscribe(\"views\")];\n  },\n});\n\nRouter.route(\"/category/:_id/edit\", {\n  name: \"categoryEdit\",\n  data: function () {\n    return Categories.findOne(this.params._id);\n  },\n  waitOn: function () {\n    var data = {};\n    data.categoryId = this.params._id;\n    return [\n      Meteor.subscribe(\"categories\", data),\n      Meteor.subscribe(\"views\", data),\n      Meteor.subscribe(\"rkSettings\"),\n    ];\n  },\n});\n\nRouter.route(\"/categories\", {\n  name: \"categoryList\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"views\"),\n    ];\n  },\n});\n\nRouter.route(\"/invitation/:invitationId\", {\n  name: \"invitation\",\n  template: \"invitation\",\n  data: function () {\n    return Members.invitations.findOne(this.params.invitationId);\n  },\n  waitOn: function () {\n    return [Meteor.subscribe(\"members\"), Meteor.subscribe(\"invitation\", this.params.invitationId)];\n  },\n});\n\nRouter.route(\"/revisions/:docId\", {\n  name: \"revisions\",\n  template: \"revisions\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"doc-revisions\", this.params.docId), Meteor.subscribe(\"categories\"), Meteor.subscribe(\"views\")];\n  },\n});\n\nRouter.route(\"/browse/:categorySlug?\", {\n  name: \"browse\",\n  data: function () {\n    return this.params.categorySlug;\n  },\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"mySpace\"),\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"views\"),\n      Meteor.subscribe(\"docs\"),\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"revisions\"),\n    ];\n  },\n});\n\nRouter.route(\"/logs\", {\n  name: \"logs\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"history\"),\n    ];\n  },\n});\n\nif (Meteor.settings.public.show.about) {\n  Router.route(\"/about\");\n}\n\nRouter.route(\"/walk\", {\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"folderstoscan\"),\n      Meteor.subscribe(\"rkSettings\"),\n      Meteor.subscribe(\"rkStatus\"),\n    ];\n  },\n});\n\nRouter.route(\"/files\", {\n  name: \"files\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"walkedfiles\"),\n      Meteor.subscribe(\"rkStatus\"),\n    ];\n  },\n});\n\nRouter.route(\"/fileView\", {\n  name: \"fileView\",\n  waitOn: function () {\n    return [];\n  },\n});\n\nRouter.route(\"/backup\", {\n  name: \"backup\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"members\"),\n    ];\n  },\n});\n\nRouter.route(\"/synonyms\", {\n  name: \"synonyms\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"synonyms\")];\n  },\n});\n\nif (Meteor.settings.public.show.relationships) {\n  Router.route(\"/relationships\", {\n    name: \"relationships\",\n    waitOn: function () {\n      return [];\n    },\n  });\n}\n\nRouter.route(\"/search\", {\n  name: \"searchTpl\",\n  waitOn: function () {\n    var subscribtions =  [\n      Meteor.subscribe(\"revisions\"),\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"myCurrentSearchQuery\"),\n      Meteor.subscribe(\"views\"),\n      Meteor.subscribe(\"tags\"),\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"synonyms\"),\n      Meteor.subscribe(\"mySpace\"),\n      Meteor.subscribe(\"rkSettings\"),\n    ];\n\n    searchQuerySentToServer = Session.get(\"searchQuerySentToServer\");\n\n    if ((typeof searchQuerySentToServer !== 'undefined') && (searchQuerySentToServer !== '') ) {\n      searchType = Session.get(\"searchType\");\n      catFilter = Session.get(\"catFilter\");\n      includeWalkedFilesInResults = Session.get('includeWalkedFilesInResults');\n      if (typeof RKCSE !== 'undefined') {\n        includeWebInResults = Session.get('includeWebInResults');\n      }\n\n\n      RKCore.log(\"searchQuerySentToServer : \" + searchQuerySentToServer);\n      RKCore.log(\"searchType : \" + searchType);\n      RKCore.log(\"catFilter : \" + catFilter);\n      RKCore.log(\"includeWalkedFilesInResults : \" + includeWalkedFilesInResults);\n      if (typeof RKCSE !== 'undefined') {\n        RKCore.log(\"includeWebInResults : \" + includeWebInResults);\n      }\n\n      Meteor.subscribe(\"searchResults\", searchQuerySentToServer, catFilter, searchType, includeWalkedFilesInResults);\n\n      //todo transform like wiki :\n      if (typeof RKCSE !== 'undefined') {\n        if (includeWebInResults) {\n          Meteor.subscribe(\"cse\", searchQuerySentToServer);\n        }\n      }\n    }\n\n    return subscribtions;\n  },\n});\n\n\nRouter.route(\"/stats\", {\n  name: \"stats\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"categories\"),\n      Meteor.subscribe(\"docs\"),\n      Meteor.subscribe(\"history\"),\n      Meteor.subscribe(\"revisions\"),\n      Meteor.subscribe(\"searchqueries\"),\n      Meteor.subscribe(\"members\"),\n      Meteor.subscribe(\"tags\"),\n    ];\n  },\n});\n\nRouter.route(\"/predefinedtags/edit\", {\n  name: \"predefinedtagsEdit\",\n  waitOn: function () {\n    return [Meteor.subscribe(\"predefinedtags\")];\n  },\n});\n\nRouter.route(\"/settings\", {\n  name: \"settingsTemplate\",\n  waitOn: function () {\n    return [\n      Meteor.subscribe(\"rkSettings\"),\n      Meteor.subscribe(\"categories\"), //for the nav, not good...#todo\n    ];\n  },\n});\n","Meteor.methods({\n\tcheckInternetConnection: function () {\n\t\tthis.unblock();\n\t\tconsole.log(\"Checking Internet Connection...\");\n\t\tresult = Meteor.http.get(\"http://google.ch\");\n\t\tif (result.statusCode==200){\n\t\t\tconsole.log('Internet connection alive');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\twhatIsLastVersion: function () {\n\t\tthis.unblock();\n\t\tconsole.log(\"Checking last version...\");\n\t\tresult = Meteor.http.get(\"http://rationalk.ch/api/?action=whatIsLastVersion&key\"+\"=\"+Meteor.settings.rationalK_license_key);\n\t\tif (result.statusCode==200){\n\t\t\tcontent = JSON.parse(result.content);\n\t\t\treturn content;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t},\n\tdowloadFile :function () {\n\t\tthis.unblock();\n\t\tconsole.log(\"Dowloading file...\");\n\t\tresult = Meteor.http.get(\"http://rationalk.ch\");\n\t\tif (result.statusCode==200){\n\t\t\tconsole.log('Internet connection alive');\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t},\n\teventGetDate: function (id) {\n    return Dates.findOne({\n      _id: id\n    }).startTime;\n  },\n  docClearAll: function (categoryId) {\n    var user;\n    user = Meteor.user();\n    if (!user) {\n      throw new Meteor.Error(401, \"You need to login to delete this doc\");\n    }\n    if (!categoryId) {\n      throw new Meteor.Error(422, \"Please select a category\");\n    }\n    return Docs.remove({\n      categoryId: categoryId\n    });\n  },\n  docImport: function (categoryId, row) {\n\t\tcheck(categoryId,String)\n\t\tcheck(row, Match.Any )\n    var doc, docId, full, key, obj, user, value;\n    user = Meteor.user();\n    if (!user) {\n      throw new Meteor.Error(401, \"You need to login to update a doc\");\n    }\n    obj = {\n      categoryId: categoryId,\n      fields: {}\n    };\n    full = \"\";\n    console.log(row);\n    for (key in row) {\n      value = row[key];\n      key = key.replace(/\\./g, ' ');\n      obj.fields[\"\" + key] = {};\n      obj.fields[\"\" + key].value = value;\n      full = full.concat(value);\n    }\n    obj.full = full;\n    obj.orgId = user.profile.orgId;\n    if (full && Docs.find({\n      full: obj.full\n    }, {\n      limit: 1\n    }).count() === 0) {\n      docId = Docs.insert(obj);\n      console.log(\"Document \" + docId + \" inserted\");\n      return docId;\n    } else {\n      if (full) {\n        doc = Docs.findOne({\n          full: obj.full\n        });\n        console.log('Document already exists');\n        console.log(obj);\n        return doc._id;\n      } else {\n        console.log('Object is EMPTY, ignoring it (This is normal for the last element)');\n        return false;\n      }\n    }\n\t\t// reindex the mongo (i dont know if this is useful...):\n\n\t\tif (typeof Docs.reIndex === 'function'){\n\t\t\tconsole.log(\"Rebuilding the mongo index after batch import.\")\n\t\t\tDocs.reIndex();\n\t\t}\n\n  },\n  \"docImport-autoCreateFields\": function (categoryId, row) {\n\t\tcheck(categoryId,String)\n\t\tcheck(row, Match.Any )\n    var key, value;\n    var user = Meteor.user();\n    if (!user) {\n      throw new Meteor.Error(401, \"You need to login to call this method\");\n    }\n    var category = Categories.findOne({\n      _id: categoryId\n    });\n    var viewId = category.viewId;\n    var view = Views.findOne({\n      _id: viewId\n    });\n    for (key in row) {\n      value = row[key];\n      key = key.replace(/\\./g, ' ');\n      Meteor.call('viewAddField', {\n        viewId: viewId,\n        newField: key,\n        newFieldType: 'text',\n        mandatory: false,\n        unique: false\n      });\n    }\n    return true;\n  },\n\tlistCategoriesWithSlug: function () {\n    if (!Meteor.user()) {throw new Meteor.Error(401, \"You need to login to call this method\");}\n    var cat = Categories.find({ slug: { $exists: true } }).fetch();\n    return cat;\n  }\n});\n"]}