{"version":3,"sources":["rationalk:erp/lib/methods.js","rationalk:erp/lib/collections.js","rationalk:erp/lib/routes.js","rationalk:erp/lib/server/publications.js","rationalk:erp/lib/server/methods.js"],"names":[],"mappings":";;;;;;;;AAAA,W;;;AAGA,gB;AACA,sD;AACA,4B;AACA,6B;AACA,yC;AACA,4B;AACA,uB;AACA,wC;AACA,oD;AACA,8C;AACA,6B;AACA,0B;AACA,6B;AACA,yB;AACA,uD;AACA,oB;AACA,I;AACA,Y;AACA,gC;AACA,M;AACA,K;AACA,wC;AACA,I;AACA,I;AACA,mB;AACA,I;AACA,I;AACA,+C;AACA,2E;;;AAGA,kD;;;AAGA,uD;AACA,0C;AACA,sB;AACA,uC;AACA,+C;AACA,2C;AACA,sC;AACA,qC;AACA,yC;AACA,Q;AACA,6C;AACA,+C;AACA,gD;AACA,M;AACA,M;AACA,mC;AACA,gE;AACA,4C;AACA,4C;AACA,yB;AACA,uB;AACA,2B;AACA,Y;AACA,8C;AACA,K;AACA,I;AACA,qB;AACA,K;AACA,a;AACA,uB;AACA,O;AACA,M;AACA,K;AACA,4B;AACA,K;AACA,K;AACA,wB;;;;AAIA,oB;AACA,I;AACA,Y;AACA,uB;AACA,M;AACA,K;AACA,I;AACA,2J;AACA,K;AACA,I;AACA,mB;AACA,I;AACA,I;AACA,kD;AACA,wC;AACA,qB;AACA,qC;AACA,oE;AACA,G;AACA,G;AACA,qC;AACA,4B;AACA,qH;AACA,0C;AACA,kD;AACA,qB;AACA,sC;AACA,8C;AACA,6C;AACA,mD;AACA,qC;AACA,O;AACA,gD;AACA,yC;AACA,mD;AACA,M;AACA,iC;AACA,I;AACA,G;;AAEA,wC;AACA,qB;;AAEA,oB;AACA,I;AACA,Y;AACA,sB;AACA,M;AACA,K;AACA,I;AACA,2B;AACA,I;AACA,I;AACA,qC;AACA,mD;AACA,G;AACA,G;AACA,qC;AACA,oC;AACA,wC;AACA,oC;AACA,oC;AACA,8C;AACA,oC;AACA,kC;;AAEA,oB;AACA,I;AACA,Y;AACA,gC;AACA,M;AACA,K;AACA,I;AACA,wC;AACA,e;AACA,gB;AACA,sC;AACA,2B;AACA,qC;AACA,2B;AACA,yB;AACA,O;AACA,M;AACA,K;AACA,I;AACA,mB;AACA,I;AACA,I;AACA,qC;AACA,iF;AACA,G;AACA,G;AACA,uC;AACA,oC;AACA,oC;AACA,kD;AACA,wB;AACA,G;AACA,yE;AACA,2C;AACA,8C;AACA,uC;AACA,yC;;;AAGA,+D;AACA,oC;AACA,gC;AACA,G;AACA,0D;AACA,wD;AACA,qC;AACA,6C;AACA,+C;AACA,mD;AACA,8C;AACA,I;AACA,O;AACA,oD;AACA,4D;AACA,+C;AACA,K;AACA,K;AACA,uC;AACA,gC;AACA,M;AACA,kC;AACA,qD;AACA,uC;AACA,iE;AACA,mC;AACA,M;AACA,I;AACA,G;AACA,oB;AACA,M;AACA,c;AACA,wB;AACA,Q;AACA,O;AACA,M;AACA,0C;AACA,M;AACA,I;AACA,qC;AACA,iD;AACA,G;;;;AAIA,G;AACA,gD;AACA,6B;AACA,4B;AACA,qC;AACA,2B;AACA,G;AACA,oB;AACA,I;AACA,Y;AACA,gC;AACA,M;AACA,K;AACA,I;AACA,gD;AACA,0C;AACA,K;AACA,I;AACA,mB;AACA,I;AACA,I;AACA,qC;AACA,6D;AACA,G;AACA,G;AACA,sC;AACA,2B;AACA,8D;;AAEA,yD;AACA,gD;AACA,uC;AACA,mB;AACA,4B;AACA,yC;AACA,oC;AACA,qD;AACA,sC;AACA,wC;AACA,gD;AACA,6C;AACA,4E;AACA,2B;AACA,M;AACA,K;AACA,I;AACA,G;;AAEA,uC;AACA,wD;AACA,4B;AACA,uC;AACA,0B;AACA,yB;AACA,I;AACA,G;;;AAGA,6B;AACA,sC;AACA,iF;AACA,I;AACA,G;AACA,kC;AACA,sC;AACA,wF;AACA,I;AACA,G;AACA,Q;AACA,qC;AACA,uC;AACA,I;AACA,sC;AACA,sC;AACA,sD;AACA,I;AACA,G;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;ACjTA,gD;;AAEA,mB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,mC;AACA,8B;;;;;;;;;;;;;;;;;;;ACTA,sC;AACA,+B;AACA,mB;AACA,yB;AACA,8C;AACA,M;AACA,K;;AAEA,6B;AACA,iB;AACA,yB;AACA,c;AACA,uC;AACA,yD;AACA,Q;AACA,M;AACA,K;;AAEA,qC;AACA,kB;AACA,uB;AACA,iD;AACA,M;AACA,yB;AACA,8C;AACA,M;AACA,K;;;AAGA,sC;AACA,0C;AACA,sC;AACA,iD;AACA,8C;AACA,kE;AACA,wE;AACA,oD;AACA,I;;AAEA,0B;AACA,K;AACA,2B;AACA,sC;AACA,K;AACA,I;;AAEA,C;;;;;;;;;;;;;;;;;;;AC9CA,0D;AACA,kB;AACA,sD;AACA,uD;AACA,e;AACA,G;;AAEA,0C;AACA,2B;AACA,G;;;;;;;;;;;;;;;;;;;ACTA,sB;;AAEA,iB;AACA,yC;AACA,gB;AACA,iB;AACA,4B;AACA,uB;AACA,a;AACA,S;AACA,S;AACA,gB;AACA,2B;AACA,iB;AACA,mB;AACA,iB;AACA,sB;AACA,iB;AACA,gB;;AAEA,sC;AACA,yE;AACA,I;AACA,6C;AACA,gC;AACA,sC;AACA,uE;AACA,I;;AAEA,qC;AACA,qC;AACA,2C;AACA,4C;AACA,iD;AACA,0D;AACA,oE;AACA,+C;AACA,4C;AACA,mB;AACA,wC;AACA,S;AACA,Q;AACA,O;AACA,M;AACA,K;;AAEA,qC;AACA,iC;AACA,2C;AACA,qC;;AAEA,2C;AACA,4C;AACA,iD;AACA,0D;AACA,0C;AACA,oD;AACA,0C;AACA,wC;;AAEA,mC;AACA,S;AACA,8B;AACA,kC;AACA,8B;AACA,wC;AACA,4B;AACA,W;AACA,Q;AACA,O;AACA,M;AACA,K;;AAEA,uC;AACA,kC;AACA,6B;AACA,K;;AAEA,sB;AACA,M;AACA,K;AACA,C","file":"/packages/rationalk_erp.js","sourcesContent":["RKERP = {};\n\n\nMeteor.methods({\n\t\taddNeedToThisProduct: function (productId,dataset) {\n\t\t\tcheck(productId, String);\n\t\t\tcheck(dataset, Match.Any);\n\t\tconsole.log(\"Product Id : \"+productId);\n\t\tconsole.log(\"dataset : \");\n\t\tconsole.log(dataset);\n\t\tvar productName = dataset.productname;\n   \t    var productionStep = dataset.productionstep;\n\t\tvar productQty = Number(dataset.productqty);\n\t\tconsole.log('the need : ');\n\t\tconsole.log(productName)\n\t\tconsole.log(productionStep)\n\t\tconsole.log(productQty)\n\t\t// Create the needed product if it does not exist yet\n\t\tProduction.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{productName: productName}\n\t\t\t  ]\n\t\t\t},\n\t\t\t{ $set: { productName: productName} }\n\t\t\t,\n\t\t\t{\n\t\t\t    upsert: true\n\t\t\t}\n\t\t);\n\t\t// Get the id of the needed product (Balls) :\n\t\tvar neededProductId = Production.findOne({productName: productName})._id;\n\n\n\t\tvar needs = Production.findOne(productId).needs;\n\n\n\t\tif (typeof needs !== \"undefined\" && needs !== null) {\n\t\t\tconsole.log(\"Needs before removing :\");\n\t\t\tconsole.log(needs);\n\t\t\tvar needsArrayLength = needs.length;\n\t\t\tfor (var j = 0; j < needsArrayLength; j++) {\n\t\t\t\tconsole.log(\"current existing need :\");\n\t\t\t\tconsole.log(needs[j].productName);\n\t\t\t\tconsole.log(needs[j].productQty);\n\t\t\t\tconsole.log(needs[j].productionStep);\n\t\t\t\tif (\n\t\t\t\t\t(productName == needs[j].productName) &&\n\t\t\t\t\t(neededProductId == needs[j].productId) &&\n\t\t\t\t\t(productionStep == needs[j].productionStep)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar arrayElementToRemove = j;\n\t\t\t\t\t\tconsole.log('We need to remove/update the element : '+ j);\n\t\t\t\t\t\tconsole.log(\"Needs after removing :\");\n\t\t\t\t\t\tneeds.splice(arrayElementToRemove, 1);\n\t\t\t\t\t\tconsole.log(needs);\n\t\t\t\t\t\t//exit the loop :\n\t\t\t\t\t\tj=needsArrayLength+1;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"This need does not match.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tProduction.update(\n\t\t\t\t{\n\t\t\t\t  $and: [\n\t\t\t\t  \t{_id: productId}\n\t\t\t\t  ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t    $set: {needs: needs}\n\t\t\t\t}\n\t\t\t);\n\t\t} // end if have needs\n\n\n\n\t\tProduction.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{_id: productId},\n\t\t\t  ]\n\t\t\t},\n\t\t\t{\n\t\t\t    $push: { needs : {parentProductId:productId,productName:productName,productionStep:productionStep,productQty:productQty,productId:neededProductId} }\n\t\t\t},\n\t\t\t{\n\t\t\t    upsert: true\n\t\t\t}\n\t\t);\n\t\tvar needs = Production.findOne(productId).needs;\n\t\tconsole.log(\"Needs after updating :\");\n\t\tconsole.log(needs);\n\t\tif (typeof toastr !== \"undefined\"){\n\t\t\ttoastr.success('The product need has been updated successfully');\n\t\t}\n\t},\n\tdeleteThisNeed: function (dataset) {\n\t\tcheck(dataset, Match.Any);\n\t\t//dataset : {parentproductid: \"zzLmwhnteDGEmmDxD\", productname: \"Cage\", neededqty: \"1\", productionstep: \"Assembly\"}\n\t\tvar productId = dataset.parentproductid;\n\t\tvar needs = Production.findOne(productId).needs;\n\t\tconsole.log(needs);\n\t\tvar needsArrayLength = needs.length;\n\t\tfor (var j = 0; j < needsArrayLength; j++) {\n\t\t\tvar needProductName = dataset.productname;\n\t\t\tvar needProductionStep = dataset.productionstep;\n\t\t\tvar neededQty = dataset.neededqty;\n\t\t\tif (\n\t\t\t\t(needProductName == needs[j].productName) &&\n\t\t\t\t(neededQty == needs[j].productQty) &&\n\t\t\t\t(needProductionStep == needs[j].productionStep)\n\t\t\t\t){\n\t\t\t\tvar arrayElementToRemove = j;\n\t\t\t}\n\t\t}\n\n\t\tneeds.splice(arrayElementToRemove, 1);\n\t\tconsole.log(needs);\n\n\t\tProduction.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{_id: productId}\n\t\t\t  ]\n\t\t\t},\n\t\t\t{\n\t\t\t    $set: {needs: needs}\n\t\t\t}\n\t\t);\n\t\tif (typeof toastr !== \"undefined\"){\n\t\t\ttoastr.success('This product need has deleted');\n\t\t}\n\t},\n\tplanProduction: function (dataset) {\n\t\tcheck(dataset, Match.Any); //#todo\n\t\tvar productName = dataset.productName;\n\t\tvar productQty=dataset.productQty;\n\t\tvar startDate = dataset.startDate;\n\t\tvar productionStep = dataset.productionStep;\n\t\tvar ressource = dataset.ressource;\n\t\tvar duration = dataset.duration;\n\n\t\tProduction.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{productName: productName}\n\t\t\t  ]\n\t\t\t},\n\t\t\t{\n\t\t\t    $set: {productName: productName},\n\t\t\t    $push: {\n\t\t\t\t\t\tplanning:{\n\t\t\t\t\t\t\tproductQty: Number(productQty),\n\t\t\t\t\t\t\tstartDate:startDate,\n\t\t\t\t\t\t\tproductionStep:productionStep,\n\t\t\t\t\t\t\tressource:ressource,\n\t\t\t\t\t\t\tduration:duration,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t    upsert: true\n\t\t\t}\n\t\t);\n\t\tif (typeof toastr !== \"undefined\"){\n\t\t\ttoastr.success('The planning for this product has been updated successfully');\n\t\t}\n\t},\n\tdeleteProduction: function (dataset) {\n\t\tcheck(dataset, Match.Any); //#todo\n\t\tif (Meteor.settings.public.debug){\n\t\t\tconsole.log(\"Deleting production matching : \");\n\t\t\tconsole.log(dataset);\n\t\t}\n\t\tvar productId = dataset.productid; //que des miniscules dans le dataset\n\t    var productName = dataset.productname;\n\t\tvar productionStep = dataset.productionstep;\n\t    var startDate = dataset.startdate;\n\t    var plannedQty = dataset.plannedqty;\n\n\n\t\tvar productPlanning = Production.findOne(productId).planning;\n\t\tif (Meteor.settings.public.debug){\n\t\t\tconsole.log(productPlanning);\n\t\t}\n\t\tvar productPlanningArrayLength = productPlanning.length;\n\t\tfor (var j = 0; j < productPlanningArrayLength; j++) {\n\t\t\tif (Meteor.settings.public.debug){\n\t\t\t\tconsole.log(\"Current planning entry : \");\n\t\t\t\tconsole.log(productPlanning[j].productQty);\n\t\t\t\tconsole.log(productPlanning[j].productionStep);\n\t\t\t\tconsole.log(productPlanning[j].startDate);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t(plannedQty == productPlanning[j].productQty) &&\n\t\t\t\t(productionStep == productPlanning[j].productionStep) &&\n\t\t\t\t(startDate == productPlanning[j].startDate)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tif (Meteor.settings.public.debug){\n\t\t\t\t\t\tconsole.log(\"Remove : \"+j)\n\t\t\t\t\t}\n\t\t\t\t\tvar arrayElementToRemove = j;\n\t\t\t\t\tproductPlanning.splice(arrayElementToRemove, 1);\n\t\t\t\t\tif (Meteor.settings.public.debug){\n\t\t\t\t\t\tconsole.log(\"After removing, the planning looks like : \"+j)\n\t\t\t\t\t\tconsole.log(productPlanning);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tProduction.update(\n\t\t\t\t\t{\n\t\t\t\t\t  $and: [\n\t\t\t\t\t  \t{_id: productId}\n\t\t\t\t\t  ]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t    $set: {planning: productPlanning}\n\t\t\t\t\t}\n\t\t);\n\t\tif (typeof toastr !== \"undefined\"){\n\t\t\ttoastr.success('This event has been deleted');\n\t\t}\n\n\n\n\t},\n\taddToStock: function (productName,productQty) {\n\t\tcheck(productName, String);\n\t\tcheck(productQty, Number);\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log(productQty);\n\t\t}\n\t\tProduction.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{productName: productName}\n\t\t\t  ]\n\t\t\t},\n\t\t\t{\n\t\t\t    $inc: { productQty: Number(productQty) },\n\t\t\t    $set: { productName : productName }\n\t\t\t},\n\t\t\t{\n\t\t\t    upsert: true\n\t\t\t}\n\t\t);\n\t\tif (typeof toastr !== \"undefined\"){\n\t\t\ttoastr.success('The stock has been updated successfully');\n\t\t}\n\t},\n\tdeleteProduct: function (productId) {\n\t\tcheck(productId, String);\n\t\tvar productName = Production.findOne(productId).productName;\n\n\t\t//check if the product is not used in another product :\n\t\tvar allProducts = Production.find({}).fetch();\n\t\tvar arrayLength = allProducts.length;\n\t\tvar neededIn= \"\";\n\t\tvar neededSomewhere=false;\n\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\tvar needs = allProducts[i].needs;\n\t\t\tvar parentProductName = allProducts[i].productName\n\t\t\tif (typeof needs !== \"undefined\") {\n\t\t\t\tvar needsArrayLength = needs.length;\n\t\t\t\tfor (var j = 0; j < needsArrayLength; j++) {\n\t\t\t\t\tif (productName== needs[j].productName){\n\t\t\t\t\t\tneededIn=neededIn + ((neededIn ==\"\") ? \"\" : \", \") + parentProductName;\n\t\t\t\t\t\tneededSomewhere=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//check if the product is not planned\n\t\tvar planning = Production.findOne(productId).planning;\n\t\tvar plannedSomewhen=false;\n\t\tif (typeof planning !== \"undefined\"){\n\t\t\tif (planning.length>0){\n\t\t\t\tplannedSomewhen=true;\n\t\t\t}\n\t\t}\n\n\n\t\tif (neededSomewhere==true){\n\t\t\tif (typeof toastr !== \"undefined\"){\n\t\t\t\ttoastr.error(productName +' cannot be deleted since it used in : '+neededIn);\n\t\t\t}\n\t\t}\n\t\telse if (plannedSomewhen==true){\n\t\t\tif (typeof toastr !== \"undefined\"){\n\t\t\t\ttoastr.error(productName +' cannot be deleted since it is a production is planned');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (Meteor.settings.public.debug){\n\t\t\t\tconsole.log(\"remove : \"+productId);\n\t\t\t}\n\t\t\tProduction.remove({_id:productId});\n\t\t\tif (typeof toastr !== \"undefined\"){\n\t\t\t\ttoastr.success(productName + ' has been deleted');\n\t\t\t}\n\t\t}\n\t}\n});\n","Production = new Mongo.Collection('production');\n\nProduction.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\n//expose it to the other packages :\nRKERP.Production = Production;\n","if (Meteor.settings.public.show.erp) {\n  Router.route(\"/erp/stocks\", {\n    name: \"stocks\",\n    waitOn: function () {\n      return [Meteor.subscribe(\"production\")];\n    },\n  });\n\n  Router.route(\"/erp/plan\", {\n    name: \"plan\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"production\"),\n        //Meteor.subscribe(\"ressourcePlanningPublished\"),\n      ];\n    },\n  });\n\n  Router.route(\"/erp/product/:_id\", {\n    name: \"build\",\n    data: function () {\n      return Production.findOne(this.params._id);\n    },\n    waitOn: function () {\n      return [Meteor.subscribe(\"production\")];\n    },\n  });\n\n\n  urlPlan = Router.routes.plan.path();\n  urlStocks = Router.routes.stocks.path();\n  menuHTML = new Spacebars.SafeString(\n     '<li role=\"separator\" class=\"divider\"></li>'\n      + '<li class=\"dropdown-header\">ERP</li>'\n      + '<li><a href=\"' + urlPlan + '\" title=\"Plan\">Plan</a></li>'\n      + '<li><a href=\"' + urlStocks + '\" title=\"Stocks\">Stocks</a></li>'\n      + '<li role=\"separator\" class=\"divider\"></li>'\n  );\n\n  RKCore.packageMenu.push(\n    {\n      \"menuHTML\": menuHTML,\n      \"fromPackage\": \"rationalk:fmea\",\n    }\n  );\n\n}\n","Meteor.publish('ressourcePlanningPublished', function () {\n  var self = this;\n  var result = Meteor.call('createRessourcePlanning');\n  self.added('ressourceplanning', Random.id(), result);\n  self.ready();\n});\n\nMeteor.publish(\"production\", function () {\n  return Production.find();\n});\n","if (Meteor.isServer) {\n\n\tMeteor.methods({\n  \tcreateRessourcePlanning: function () {\n\t\t\tvar Products;\n\t\t\tvar nProducts;\n\t\t\tvar ressourcesNames = [];\n\t\t\tvar Ressources = [];\n\t\t\tvar l = 0;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar planning;\n\t\t\tvar planningArrayLength;\n\t\t\tvar productId;\n\t\t\tvar productName;\n\t\t\tvar startDate;\n\t\t\tvar productionStep;\n\t\t\tvar ressource;\n\t\t\tvar duration;\n\n\t\t\tif (Meteor.settings.public.debug) {\n\t\t\t\tconsole.log(\"Entering the server method createRessourcePlanning...\");\n\t\t\t}\n      Products = Production.find({}).fetch();\n  \t\tnProducts = Products.length;\n\t\t\tif (Meteor.settings.public.debug) {\n\t\t\t\tconsole.log(\"You have : \" +  nProducts + \" products in your erp.\");\n\t\t\t}\n\n  \t\tfor (i = 0; i < nProducts; i++) {\n  \t\t\tplanning = Products[i].planning;\n  \t\t\tif (typeof planning !== \"undefined\") {\n  \t\t\t\tplanningArrayLength = planning.length;\n  \t\t\t\tfor (j = 0; j < planningArrayLength; j++) {\n  \t\t\t\t\tif (typeof planning[j].ressource !== \"undefined\") {\n  \t\t\t\t\t\tif (ressourcesNames.indexOf(planning[j].ressource) === -1) {\n  \t\t\t\t\t\t\tressourceName = planning[j].ressource;\n  \t\t\t\t\t\t\tressourcesNames[l] = ressourceName;\n  \t\t\t\t\t\t\tl = l + 1;\n  \t\t\t\t\t\t\tRessources[ressourceName] = [];\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tfor (i = 0; i < nProducts; i++) {\n  \t\t\tproductId = Products[i]._id;\n  \t\t\tproductName = Products[i].productName;\n  \t\t\tplanning = Products[i].planning;\n\n  \t\t\tif (typeof planning !== \"undefined\") {\n  \t\t\t\tplanningArrayLength = planning.length;\n  \t\t\t\tfor (j = 0; j < planningArrayLength; j++) {\n  \t\t\t\t\tif (typeof planning[j].ressource !== \"undefined\") {\n  \t\t\t\t\t\tstartDate = planning[j].startDate;\n  \t\t\t\t\t\tproductionStep = planning[j].productionStep;\n  \t\t\t\t\t\tressource = planning[j].ressource;\n  \t\t\t\t\t\tduration = planning[j].duration;\n\n  \t\t\t\t\t\tRessources[ressource].push(\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tproductId: productId,\n  \t\t\t\t\t\t\tproductName: productName,\n  \t\t\t\t\t\t\tstartDate: startDate,\n  \t\t\t\t\t\t\tproductionStep: productionStep,\n  \t\t\t\t\t\t\tduration: duration,\n  \t\t\t\t\t\t});\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tif (Meteor.settings.public.debug) {\n  \t\t\tconsole.log(\"Ressources : \");\n  \t\t\tconsole.log(Ressources);\n  \t\t}\n\n  \t\treturn Ressources;\n    },\n  });\n}\n"]}