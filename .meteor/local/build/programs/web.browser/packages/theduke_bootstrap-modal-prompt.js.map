)]}'
{"version":3,"sources":["theduke:bootstrap-modal-prompt/prompt.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wB;;AAEA,I;AACA,gC;AACA,M;AACA,4B;AACA,yC;AACA,2C;AACA,wB;AACA,+B;AACA,uB;AACA,mD;AACA,M;AACA,K;AACA,uC;AACA,wB;AACA,4B;AACA,kB;AACA,qB;AACA,uB;;AAEA,uB;;AAEA,8B;AACA,sB;;AAEA,mD;AACA,0E;AACA,2C;;AAEA,Q;AACA,iF;AACA,0E;AACA,0C;;AAEA,Q;;AAEA,oD;AACA,0E;AACA,2C;;AAEA,Q;;AAEA,4F;AACA,0E;AACA,0C;;AAEA,Q;;AAEA,4D;AACA,oE;AACA,+F;AACA,0E;AACA,0C;AACA,oD;AACA,O;AACA,gB;;AAEA,0C;AACA,4B;AACA,qC;AACA,K;;AAEA,yC;;AAEA,mD;;AAEA,kB;AACA,kD;;AAEA,4C;AACA,iE;AACA,8B;AACA,8B;AACA,kE;AACA,6B;AACA,uB;AACA,S;AACA,O;;AAEA,+B;AACA,wD;AACA,O;;AAEA,0B;AACA,mC;AACA,K;;AAEA,kC;AACA,2B;AACA,yE;AACA,oC;AACA,2B;AACA,0B;AACA,6B;AACA,mB;AACA,Q;AACA,K;AACA,kC;AACA,gE;AACA,2B;AACA,2B;AACA,qE;AACA,mB;AACA,Q;;AAEA,sE;AACA,qD;AACA,+D;AACA,+B;AACA,uB;AACA,S;AACA,e;AACA,K;AACA,U;AACA,8C;AACA,K;;AAEA,kE;AACA,0D;;AAEA,2C;AACA,8B;AACA,iD;AACA,O;AACA,O;AACA,4C;AACA,8B;AACA,iD;AACA,O;AACA,O;;AAEA,6B;AACA,gD;AACA,K;;AAEA,4D;AACA,+B;AACA,kD;AACA,O;;AAEA,0B;AACA,sB;;AAEA,mB;AACA,O;;AAEA,I;;AAEA,6D;AACA,+B;AACA,oC;AACA,O;AACA,Y;AACA,oB;AACA,O;;AAEA,mB;AACA,O;;AAEA,wB;AACA,I;;AAEA,2B;AACA,+C;AACA,iG;AACA,gD;AACA,oJ;AACA,qD;AACA,4B;AACA,8C;;AAEA,4B;AACA,gD;AACA,wG;AACA,mG;AACA,4B;;AAEA,sC;AACA,uB;;AAEA,0B;AACA,iC;AACA,G;AACA,E","file":"/packages/theduke:bootstrap-modal-prompt.js","sourcesContent":["BootstrapModalPrompt = {\n\n  /*\n   * Expected format of options:\n   * {\n   *   title: 'Modal Title',\n   *   content: 'Text content for modal',\n   *   template: 'templateWithContentName',\n   *   templateData: {},\n   *   btnDismissText: 'Close',\n   *   btnOkText: 'OK',\n   *   onShown: function() {} // callback function.\n   * }\n   */\n  prompt: function(options, callback) {\n    options = _.extend({\n      title: 'Confirmation',\n      content: '',\n      template: null,\n      templateData: {},\n\n      formSchema: null,\n\n      btnDismissText: 'Close',\n      btnOkText: 'OK',\n\n      // Callback called before the modal is shown.\n      // Arguments are the passed initial options, and the modal DOM node.\n      beforeShow: function(options, node) {\n\n      },\n      // Called after the modal is shown and all transitions have been completed.\n      // Arguments are the passed initial options, and the modal DOM node.\n      afterShow: function(options, node) {\n\n      },\n\n      // Callback called before the modal is hidden.\n      // Arguments are the passed initial options, and the modal DOM node.\n      beforeHide: function(options, node) {\n\n      },\n\n      // Callback called after the modal has been hidden and all transitions have completed.\n      // Arguments are the passed initial options, and the modal DOM node.\n      afterHide: function(options, node) {\n\n      },\n\n      // Called when the users clicks on the confirm button.\n      // If the function returns false, the confirm will be ABORTED.\n      // Otherwise the modal will be closed and the regular callback is called with the result.\n      // Arguments are the passed initial options, and the modal DOM node.\n      onConfirm: function(options, node) {\n        // return false; // Aborts closing of modal!\n      }\n    }, options);\n\n    var modalWrap = $('.bs-prompt-modal');\n    if (!modalWrap.size()) {\n      modalWrap = this.createModal();\n    }\n\n    var modal = modalWrap.find('.modal');\n\n    modal.find('.modal-title').html(options.title);\n\n    // Reset body.\n    var body = modal.find('.modal-body').html('');\n\n    // Function to be called when confirmed.\n    // Defined up here so it can be used in AutoForm submit hook.\n    function onConfirm(data) {\n      if (options.onConfirm) {\n        var flag = options.onConfirm(options, modal.get(0), data);\n        if (flag === false) {\n          return false;\n        }\n      }\n\n      if (options.beforeHide) {\n        options.beforeHide(options, modal.get(0), data);\n      }\n\n      modal.modal('hide');\n      callback(data ? data : true);\n    }\n\n    var content = options.content;\n    if (options.template) {\n      // Render the given template with the specified data and insert it \n      // to the modal-body directly.\n      Blaze.renderWithData(\n        options.template, \n        options.templateData,\n        body.get(0)\n      );\n    }\n    else if (options.formSchema) {\n      // Render the form using the autoform quickForm template. \n      Blaze.renderWithData(\n        Template.quickForm,\n        {schema: options.formSchema, id: 'bootstrapModalPromptForm'},\n        body.get(0)\n      );\n\n      // Note the important second parameter true for replacing hooks.\n      AutoForm.addHooks('bootstrapModalPromptForm', {\n        onSubmit: function (insertDoc, updateDoc, currentDoc) {\n          onConfirm(insertDoc);\n          return false;\n        }\n      }, true);\n    }\n    else {\n      modal.find('.modal-body').html(content);\n    }\n\n    modal.find('.modal-btn-dismiss').html(options.btnDismissText);\n    modal.find('.modal-btn-save').html(options.btnOkText);\n\n    modal.on('shown.bs.modal', function() {\n      if (options.afterShow) {\n        options.afterShow(options, modal.get(0));\n      }\n    });\n    modal.on('hidden.bs.modal', function() {\n      if (options.afterHide) {\n        options.afterHide(options, modal.get(0));\n      }\n    });\n\n    if (options.beforeShow) {\n      options.beforeShow(options, modal.get(0));\n    }\n\n    modal.find('.modal-btn-dismiss').off().click(function(){\n      if (options.beforeHide) {\n        options.beforeHide(options, modal.get(0));\n      }\n\n      modal.modal('hide');\n      callback(false);\n\n      return false;\n    });\n\n    \n\n    modal.find('.modal-btn-confirm').off().click(function() {\n      if (options.formSchema) {\n        modal.find('form').submit();\n      }\n      else {\n        onConfirm();\n      }\n\n      return false;\n    });\n\n    modal.modal('show');\n  },\n\n  createModal: function() {\n    var tpl = '<div class=\"bs-prompt-modal\">' +\n                '<div class=\"modal fade\"><div class=\"modal-dialog\"><div class=\"modal-content\">' +\n                  '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>' +\n                    '<h4 class=\"modal-title\"></h4>' +\n                  '</div>' +\n                  '<div class=\"modal-body\">' +\n\n                  '</div>' +\n                  '<div class=\"modal-footer\">' +\n                    '<button type=\"button\" class=\"btn btn-default modal-btn-dismiss\" >Close</button>' + \n                    '<button type=\"button\" class=\"btn btn-primary modal-btn-confirm\">OK</button>' +\n                  '</div>' +\n\n                '</div></div></div>' +\n              '</div>';\n\n    $('body').append(tpl);\n    return $('.bs-prompt-modal');\n  }\n};\n"]}