)]}'
{"version":3,"file":"/packages/rubaxa:sortable.js","sources":["rubaxa:sortable/Sortable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,I;AACA,W;AACA,sC;AACA,e;AACA,G;;;AAGA,oB;AACA,c;;AAEA,kD;AACA,kB;AACA,E;AACA,iF;AACA,6B;AACA,E;AACA,2C;AACA,uB;AACA,E;AACA,O;AACA,iC;AACA,E;AACA,e;AACA,c;;AAEA,I;AACA,U;AACA,W;AACA,U;AACA,U;;AAEA,U;AACA,W;AACA,Y;;AAEA,e;;AAEA,U;AACA,Y;;AAEA,+C;;AAEA,gB;AACA,2B;AACA,2B;AACA,2D;;AAEA,mB;;AAEA,qE;AACA,2C;AACA,oC;AACA,mB;AACA,c;AACA,G;;AAEA,wD;AACA,gE;AACA,G;;AAEA,+E;;AAEA,wB;AACA,oB;;AAEA,+B;AACA,E;;;;AAIA,I;AACA,oB;AACA,6B;AACA,oC;AACA,I;AACA,gC;AACA,+B;AACA,2C;;;AAGA,a;AACA,kB;AACA,wB;AACA,e;AACA,gB;AACA,qG;AACA,gC;AACA,oB;AACA,e;AACA,I;;AAEA,wB;AACA,8B;AACA,mD;AACA,G;;;AAGA,kB;AACA,yC;AACA,sD;AACA,wD;AACA,W;;;AAGA,sB;AACA,8B;;;AAGA,6B;AACA,wB;AACA,8B;AACA,qC;AACA,I;AACA,G;;;AAGA,gB;AACA,yC;AACA,0C;AACA,2D;;AAEA,wC;AACA,yC;;AAEA,gD;;AAEA,oB;AACA,sD;AACA,E;;;AAGA,wD;AACA,wB;;;AAGA,6B;AACA,uD;AACA,I;;;AAGA,mD;AACA,M;AACA,2C;AACA,oC;AACA,6B;AACA,kB;AACA,6B;AACA,I;;AAEA,uD;AACA,+B;AACA,I;;AAEA,kB;AACA,sC;AACA,0C;AACA,0C;AACA,0B;AACA,K;AACA,I;AACA,qB;AACA,2D;AACA,kD;AACA,O;;AAEA,wB;AACA,0C;AACA,0B;AACA,K;AACA,I;;AAEA,wB;AACA,kD;AACA,I;;AAEA,oD;;AAEA,kB;AACA,6C;AACA,0D;AACA,uB;AACA,K;AACA,I;;AAEA,yD;AACA,iB;;AAEA,qB;AACA,oB;AACA,gC;AACA,qC;;AAEA,4B;;AAEA,0B;AACA,2D;AACA,uD;AACA,O;;AAEA,gB;AACA,4B;AACA,e;AACA,uB;AACA,8B;AACA,8B;AACA,O;;AAEA,qC;AACA,0B;AACA,K;;AAEA,2C;AACA,4C;AACA,+C;;AAEA,iD;AACA,0C;AACA,+C;;;AAGA,S;AACA,8B;AACA,iC;AACA,a;AACA,6C;AACA,M;AACA,oB;;;AAGA,oC;AACA,I;AACA,I;;AAEA,gC;AACA,kB;AACA,qC;;AAEA,O;AACA,6E;AACA,sB;AACA,iC;AACA,wC;AACA,K;;AAEA,iB;AACA,S;AACA,sC;AACA,oB;AACA,mC;AACA,mC;AACA,mC;AACA,wB;AACA,uB;AACA,W;AACA,Q;AACA,a;AACA,O;;AAEA,4C;AACA,M;AACA,yC;AACA,K;;AAEA,iC;AACA,I;AACA,I;;;AAGA,8C;AACA,gB;AACA,O;AACA,6B;AACA,0C;AACA,0C;AACA,+D;AACA,K;;AAEA,qB;;AAEA,kD;AACA,+C;AACA,8C;AACA,4C;;AAEA,yB;AACA,I;AACA,I;;;AAGA,8D;AACA,uC;;AAEA,uB;;AAEA,iB;AACA,O;AACA,4C;AACA,yB;AACA,gB;AACA,K;;AAEA,qC;;AAEA,iE;AACA,oE;AACA,uC;AACA,yC;AACA,oC;AACA,uC;AACA,sC;;AAEA,gC;;AAEA,yB;AACA,gD;AACA,2D;AACA,8D;;AAEA,wB;AACA,kD;AACA,4C;AACA,+C;;AAEA,2D;AACA,I;AACA,S;AACA,wC;AACA,qD;;AAEA,wC;AACA,I;;AAEA,kC;AACA,I;;;AAGA,wC;AACA,+G;AACA,O;AACA,mB;AACA,gE;AACA,K;;AAEA,mH;AACA,4B;AACA,K;AACA,sF;AACA,6B;AACA,sB;AACA,6B;AACA,gD;AACA,M;;;AAGA,Q;AACA,uB;AACA,sC;AACA,uC;AACA,+E;AACA,0D;AACA,4D;AACA,qG;AACA,+C;AACA,a;AACA,M;;AAEA,oB;AACA,+B;;AAEA,oB;AACA,wF;AACA,a;AACA,uE;AACA,M;;AAEA,iC;AACA,6B;AACA,a;AACA,2E;AACA,M;AACA,K;AACA,I;AACA,I;;AAEA,6B;AACA,2C;AACA,kD;AACA,4C;AACA,+C;AACA,I;;AAEA,oC;AACA,+B;;AAEA,mB;AACA,wC;AACA,+C;;AAEA,0C;AACA,iD;AACA,kD;;AAEA,uB;;AAEA,a;AACA,yB;AACA,0B;;AAEA,kB;AACA,6C;AACA,K;;AAEA,iB;AACA,+B;AACA,0D;;AAEA,oC;AACA,qB;AACA,+C;;AAEA,kB;AACA,oC;AACA,M;AACA,8C;AACA,qB;AACA,uC;AACA,M;;AAEA,mC;AACA,K;;AAEA,e;AACA,Y;AACA,Y;AACA,a;AACA,Y;;AAEA,Y;AACA,c;;AAEA,Y;AACA,a;;AAEA,uB;;AAEA,mB;AACA,uD;AACA,I;AACA,I;;;AAGA,K;AACA,iD;AACA,wB;AACA,K;AACA,wB;AACA,kB;AACA,O;AACA,gC;AACA,U;AACA,uB;AACA,I;;AAEA,uB;AACA,qB;AACA,wD;AACA,+D;AACA,K;AACA,I;;AAEA,gB;AACA,I;;;AAGA,K;AACA,+C;AACA,kD;AACA,K;AACA,0B;AACA,oC;;AAEA,4C;AACA,gC;;AAEA,uD;AACA,oB;AACA,K;AACA,Y;;;AAGA,gC;AACA,oB;AACA,mC;AACA,mC;AACA,K;AACA,M;AACA,I;;;AAGA,K;AACA,wK;AACA,+B;AACA,qE;AACA,gC;AACA,K;AACA,oC;AACA,oE;AACA,I;;;AAGA,K;AACA,Y;AACA,K;AACA,wB;AACA,4C;;AAEA,0C;AACA,0D;AACA,M;;AAEA,2C;AACA,4C;AACA,6C;;AAEA,0C;AACA,2C;;AAEA,gC;AACA,kF;AACA,oC;AACA,M;;AAEA,sF;;AAEA,kB;;AAEA,kB;AACA,G;AACA,G;;;AAGA,yB;AACA,sC;AACA,uE;AACA,4D;AACA,I;AACA,E;;;AAGA,sC;AACA,yB;AACA,a;AACA,G;AACA,gB;AACA,yB;AACA,kC;;AAEA,M;AACA,0C;AACA,4D;AACA,I;;AAEA,O;AACA,O;AACA,0C;AACA,gG;AACA,M;AACA,e;AACA,K;AACA,I;AACA,+C;AACA,G;;AAEA,c;AACA,E;;;AAGA,+B;AACA,uC;AACA,uB;AACA,E;;;AAGA,6B;AACA,wC;AACA,E;;;AAGA,8B;AACA,2C;AACA,E;;;AAGA,wC;AACA,W;AACA,sB;AACA,iD;AACA,I;AACA,S;AACA,0F;AACA,sD;AACA,I;AACA,G;AACA,E;;;AAGA,8B;AACA,uB;AACA,wB;AACA,wE;AACA,yD;AACA,K;AACA,+B;AACA,2B;AACA,K;AACA,6C;AACA,W;AACA,iE;AACA,I;AACA,G;AACA,E;;;AAGA,wC;AACA,Y;AACA,wE;AACA,kB;AACA,wB;AACA,0B;AACA,K;AACA,I;AACA,e;AACA,G;AACA,Y;AACA,E;;;AAGA,gC;AACA,8B;AACA,E;;;AAGA,sB;AACA,kB;AACA,E;;;AAGA,kC;AACA,yD;AACA,iE;AACA,E;;;AAGA,I;AACA,e;AACA,6B;AACA,qB;AACA,Y;AACA,I;AACA,2B;AACA,0E;AACA,kB;AACA,U;AACA,G;;AAEA,e;AACA,4B;AACA,G;;AAEA,0B;AACA,E;;;AAGA,gB;AACA,mB;AACA,U;AACA,Y;AACA,Y;AACA,c;AACA,c;AACA,oB;AACA,4B;AACA,4B;AACA,+B;AACA,G;;;AAGA,4B;;;AAGA,U;AACA,iB;AACA,G","sourcesContent":["/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n\n(function (factory){\n\t\"use strict\";\n\n\tif( typeof define === \"function\" && define.amd ){\n\t\tdefine(factory);\n\t}\n\telse if( typeof module != \"undefined\" && typeof module.exports != \"undefined\" ){\n\t\tmodule.exports = factory();\n\t}\n\telse if( typeof Package !== \"undefined\" ){\n\t\tSortable = factory();\n\t}\n\telse {\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function (){\n\t\"use strict\";\n\n\tvar\n\t\t  dragEl\n\t\t, ghostEl\n\t\t, rootEl\n\t\t, nextEl\n\n\t\t, lastEl\n\t\t, lastCSS\n\t\t, lastRect\n\n\t\t, activeGroup\n\n\t\t, tapEvt\n\t\t, touchEvt\n\n\t\t, expando = 'Sortable' + (new Date).getTime()\n\n\t\t, win = window\n\t\t, document = win.document\n\t\t, parseInt = win.parseInt\n\t\t, supportIEdnd = !!document.createElement('div').dragDrop\n\n\t\t, _silent = false\n\n\t\t, _createEvent = function (event/**String*/, item/**HTMLElement*/){\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(event, true, true);\n\t\t\tevt.item = item;\n\t\t\treturn evt;\n\t\t}\n\n\t\t, _dispatchEvent = function (rootEl, name, targetEl) {\n\t\t\trootEl.dispatchEvent(_createEvent(name, targetEl || rootEl));\n\t\t}\n\n\t\t, _customEvents = 'onAdd onUpdate onRemove onStart onEnd onFilter'.split(' ')\n\n\t\t, noop = function (){}\n\t\t, slice = [].slice\n\n\t\t, touchDragOverListeners = []\n\t;\n\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options){\n\t\tthis.el = el; // root element\n\t\tthis.options = options = (options || {});\n\n\n\t\t// Defaults\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tdraggable: el.children[0] && el.children[0].nodeName || (/[uo]l/i.test(el.nodeName) ? 'li' : '*'),\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null\n\t\t};\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\toptions[name] = options[name] || defaults[name];\n\t\t}\n\n\n\t\t// Define events\n\t\t_customEvents.forEach(function (name) {\n\t\t\toptions[name] = _bind(this, options[name] || noop);\n\t\t\t_on(el, name.substr(2).toLowerCase(), options[name]);\n\t\t}, this);\n\n\n\t\t// Export group name\n\t\tel[expando] = options.group;\n\n\n\t\t// Bind all private methods\n\t\tfor( var fn in this ){\n\t\t\tif( fn.charAt(0) === '_' ){\n\t\t\t\tthis[fn] = _bind(this, this[fn]);\n\t\t\t}\n\t\t}\n\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\tsupportIEdnd && _on(el, 'selectstart', this._onTapStart);\n\n\t\t_on(el, 'dragover', this._onDragOver);\n\t\t_on(el, 'dragenter', this._onDragOver);\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\n\t\t_applyEffects: function (){\n\t\t\t_toggleClass(dragEl, this.options.ghostClass, true);\n\t\t},\n\n\n\t\t_onTapStart: function (evt/**Event|TouchEvent*/){\n\t\t\tvar\n\t\t\t\t  touch = evt.touches && evt.touches[0]\n\t\t\t\t, target = (touch || evt).target\n\t\t\t\t, options =  this.options\n\t\t\t\t, el = this.el\n\t\t\t\t, filter = options.filter\n\t\t\t;\n\n\t\t\tif( evt.type === 'mousedown' && evt.button !== 0 ) {\n\t\t\t\treturn; // only left button\n\t\t\t}\n\n\t\t\t// Check filter\n\t\t\tif( typeof filter === 'function' ){\n\t\t\t\tif( filter.call(this, target, this) ){\n\t\t\t\t\t_dispatchEvent(el, 'filter', target);\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( filter ){\n\t\t\t\tfilter = filter.split(',').filter(function (criteria) {\n\t\t\t\t\treturn _closest(target, criteria.trim(), el);\n\t\t\t\t});\n\n\t\t\t\tif (filter.length) {\n\t\t\t\t\t_dispatchEvent(el, 'filter', target);\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( options.handle ){\n\t\t\t\ttarget = _closest(target, options.handle, el);\n\t\t\t}\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\t// IE 9 Support\n\t\t\tif( target && evt.type == 'selectstart' ){\n\t\t\t\tif( target.tagName != 'A' && target.tagName != 'IMG'){\n\t\t\t\t\ttarget.dragDrop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( target && !dragEl && (target.parentNode === el) ){\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = this.el;\n\t\t\t\tdragEl = target;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tactiveGroup = this.options.group;\n\n\t\t\t\tdragEl.draggable = true;\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(target, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\tif( touch ){\n\t\t\t\t\t// Touch device support\n\t\t\t\t\ttapEvt = {\n\t\t\t\t\t\t  target:  target\n\t\t\t\t\t\t, clientX: touch.clientX\n\t\t\t\t\t\t, clientY: touch.clientY\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\n\t\t\t\t_on(this.el, 'dragstart', this._onDragStart);\n\t\t\t\t_on(this.el, 'dragend', this._onDrop);\n\t\t\t\t_on(document, 'dragover', _globalDragOver);\n\n\n\t\t\t\ttry {\n\t\t\t\t\tif( document.selection ){\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.getSelection().removeAllRanges()\n\t\t\t\t\t}\n\t\t\t\t} catch (err){ }\n\n\n\t\t\t\t_dispatchEvent(dragEl, 'start');\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (){\n\t\t\tif( touchEvt ){\n\t\t\t\t_css(ghostEl, 'display', 'none');\n\n\t\t\t\tvar\n\t\t\t\t\t  target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY)\n\t\t\t\t\t, parent = target\n\t\t\t\t\t, group = this.options.group\n\t\t\t\t\t, i = touchDragOverListeners.length\n\t\t\t\t;\n\n\t\t\t\tif( parent ){\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif( parent[expando] === group ){\n\t\t\t\t\t\t\twhile( i-- ){\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\twhile( parent = parent.parentNode );\n\t\t\t\t}\n\n\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (evt/**TouchEvent*/){\n\t\t\tif( tapEvt ){\n\t\t\t\tvar\n\t\t\t\t\t  touch = evt.touches[0]\n\t\t\t\t\t, dx = touch.clientX - tapEvt.clientX\n\t\t\t\t\t, dy = touch.clientY - tapEvt.clientY\n\t\t\t\t\t, translate3d = 'translate3d(' + dx + 'px,' + dy + 'px,0)'\n\t\t\t\t;\n\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\n\t\t_onDragStart: function (evt/**Event*/, isTouch/**Boolean*/){\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif( isTouch ){\n\t\t\t\tvar\n\t\t\t\t\t  rect = dragEl.getBoundingClientRect()\n\t\t\t\t\t, css = _css(dragEl)\n\t\t\t\t\t, ghostRect\n\t\t\t\t;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\n\t\t\t\trootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width*2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height*2 - ghostRect.height);\n\n\t\t\t\t// Bind touch events\n\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 150);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\n\t\t\t\t_on(document, 'drop', this._onDrop);\n\t\t\t}\n\n\t\t\tsetTimeout(this._applyEffects);\n\t\t},\n\n\n\t\t_onDragOver: function (evt/**Event*/){\n\t\t\tif( !_silent && (activeGroup === this.options.group) && (evt.rootEl === void 0 || evt.rootEl === this.el) ){\n\t\t\t\tvar\n\t\t\t\t\t  el = this.el\n\t\t\t\t\t, target = _closest(evt.target, this.options.draggable, el)\n\t\t\t\t;\n\n\t\t\t\tif( el.children.length === 0 || el.children[0] === ghostEl || (el === evt.target) && _ghostInBottom(el, evt) ){\n\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t}\n\t\t\t\telse if( target && target !== dragEl && (target.parentNode[expando] !== void 0) ){\n\t\t\t\t\tif( lastEl !== target ){\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tvar\n\t\t\t\t\t\t  rect = lastRect\n\t\t\t\t\t\t, width = rect.right - rect.left\n\t\t\t\t\t\t, height = rect.bottom - rect.top\n\t\t\t\t\t\t, floating = /left|right|inline/.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t, isWide = (target.offsetWidth > dragEl.offsetWidth)\n\t\t\t\t\t\t, isLong = (target.offsetHeight > dragEl.offsetHeight)\n\t\t\t\t\t\t, halfway = (floating ? (evt.clientX - rect.left)/width : (evt.clientY - rect.top)/height) > .5\n\t\t\t\t\t\t, nextSibling = target.nextElementSibling\n\t\t\t\t\t\t, after\n\t\t\t\t\t;\n\n\t\t\t\t\t_silent = true;\n\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\tif( floating ){\n\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( after && !nextSibling ){\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\t_off(document, 'mouseup', this._onDrop);\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'touchend', this._onDrop);\n\t\t\t_off(document, 'touchcancel', this._onDrop);\n\t\t},\n\n\t\t_onDrop: function (evt/**Event*/){\n\t\t\tclearInterval(this._loopId);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'drop', this._onDrop);\n\t\t\t_off(document, 'dragover', _globalDragOver);\n\n\t\t\t_off(this.el, 'dragend', this._onDrop);\n\t\t\t_off(this.el, 'dragstart', this._onDragStart);\n\t\t\t_off(this.el, 'selectstart', this._onTapStart);\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif( evt ){\n\t\t\t\tevt.preventDefault();\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t\tif( ghostEl ){\n\t\t\t\t\tghostEl.parentNode.removeChild(ghostEl);\n\t\t\t\t}\n\n\t\t\t\tif( dragEl ){\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\n\t\t\t\t\tif( !rootEl.contains(dragEl) ){\n\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t_dispatchEvent(rootEl, 'remove', dragEl);\n\n\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t_dispatchEvent(dragEl, 'add');\n\t\t\t\t\t}\n\t\t\t\t\telse if( dragEl.nextSibling !== nextEl ){\n\t\t\t\t\t\t// Update event\n\t\t\t\t\t\t_dispatchEvent(dragEl, 'update');\n\t\t\t\t\t}\n\n\t\t\t\t\t_dispatchEvent(dragEl, 'end');\n\t\t\t\t}\n\n\t\t\t\t// Set NULL\n\t\t\t\trootEl =\n\t\t\t\tdragEl =\n\t\t\t\tghostEl =\n\t\t\t\tnextEl =\n\n\t\t\t\ttapEvt =\n\t\t\t\ttouchEvt =\n\n\t\t\t\tlastEl =\n\t\t\t\tlastCSS =\n\n\t\t\t\tactiveGroup = null;\n\n\t\t\t\t// Save sorting\n\t\t\t\tthis.options.store && this.options.store.set(this);\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length\n\t\t\t;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, this.options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute('data-id') || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el, options = this.options;\n\n\t\t\t_customEvents.forEach(function (name) {\n\t\t\t\t_off(el, name.substr(2).toLowerCase(), options[name]);\n\t\t\t});\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'selectstart', this._onTapStart);\n\n\t\t\t_off(el, 'dragover', this._onDragOver);\n\t\t\t_off(el, 'dragenter', this._onDragOver);\n\n\t\t\t//remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function(el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = null;\n\t\t}\n\t};\n\n\n\tfunction _bind(ctx, fn){\n\t\tvar args = slice.call(arguments, 2);\n\t\treturn\tfn.bind ? fn.bind.apply(fn, [ctx].concat(args)) : function (){\n\t\t\treturn fn.apply(ctx, args.concat(slice.call(arguments)));\n\t\t};\n\t}\n\n\n\tfunction _closest(el, selector, ctx){\n\t\tif( selector === '*' ){\n\t\t\treturn el;\n\t\t}\n\t\telse if( el ){\n\t\t\tctx = ctx || document;\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar\n\t\t\t\t  tag = selector.shift().toUpperCase()\n\t\t\t\t, re = new RegExp('\\\\s('+selector.join('|')+')\\\\s', 'g')\n\t\t\t;\n\n\t\t\tdo {\n\t\t\t\tif(\n\t\t\t\t\t   (tag === '' || el.nodeName == tag)\n\t\t\t\t\t&& (!selector.length || ((' '+el.className+' ').match(re) || []).length == selector.length)\n\t\t\t\t){\n\t\t\t\t\treturn\tel;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile( el !== ctx && (el = el.parentNode) );\n\t\t}\n\n\t\treturn\tnull;\n\t}\n\n\n\tfunction _globalDragOver(evt){\n\t\tevt.dataTransfer.dropEffect = 'move';\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn){\n\t\tel.addEventListener(event, fn, false);\n\t}\n\n\n\tfunction _off(el, event, fn){\n\t\tel.removeEventListener(event, fn, false);\n\t}\n\n\n\tfunction _toggleClass(el, name, state){\n\t\tif( el ){\n\t\t\tif( el.classList ){\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' '+el.className+' ').replace(/\\s+/g, ' ').replace(' '+name+' ', '');\n\t\t\t\tel.className = className + (state ? ' '+name : '')\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val){\n\t\tif( el && el.style ){\n\t\t\tif( val === void 0 ){\n\t\t\t\tif( document.defaultView && document.defaultView.getComputedStyle ){\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if( el.currentStyle ){\n\t\t\t\t\tval\t= el.currentStyle;\n\t\t\t\t}\n\t\t\t\treturn\tprop === void 0 ? val : val[prop];\n\t\t\t} else {\n\t\t\t\tel.style[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator){\n\t\tif( ctx ){\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\t\t\tif( iterator ){\n\t\t\t\tfor( ; i < n; i++ ){\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tlist;\n\t\t}\n\t\treturn\t[];\n\t}\n\n\n\tfunction _disableDraggable(el){\n\t\treturn el.draggable = false;\n\t}\n\n\n\tfunction _unsilent(){\n\t\t_silent = false;\n\t}\n\n\n\tfunction _ghostInBottom(el, evt){\n\t\tvar last = el.lastElementChild.getBoundingClientRect();\n\t\treturn evt.clientY - (last.top + last.height) > 5; // min delta\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0\n\t\t;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tbind: _bind,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tcreateEvent: _createEvent,\n\t\tdispatchEvent: _dispatchEvent\n\t};\n\n\n\tSortable.version = '0.5.2';\n\n\n\t// Export\n\treturn Sortable;\n});\n"]}