)]}'
{"version":3,"sources":["rationalk:notes/lib/methods.js","rationalk:notes/lib/collections.js","rationalk:notes/lib/routes.js","rationalk:notes/lib/client/notes.html","rationalk:notes/lib/client/notes.js","rationalk:notes/lib/client/noteInSearchResults.html","rationalk:notes/lib/client/noteInSearchResults.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,a;AACA,iC;AACA,G;AACA,oB;AACA,G;AACA,E;;AAEA,6C;AACA,c;AACA,8D;AACA,Y;AACA,E;;AAEA,+C;AACA,S;AACA,6B;AACA,kB;AACA,K;AACA,c;AACA,6B;AACA,Q;AACA,M;AACA,K;AACA,gD;AACA,8C;AACA,gB;AACA,O;AACA,c;AACA,E;;AAEA,iC;AACA,2E;AACA,E;;AAEA,gB;AACA,yC;AACA,e;AACA,I;AACA,6B;AACA,K;AACA,I;AACA,wB;AACA,6B;AACA,qB;AACA,sC;AACA,K;AACA,I;AACA,oB;AACA,I;AACA,I;AACA,uC;AACA,8C;AACA,G;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;ACtDA,sC;;AAEA,c;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,+C;AACA,gE;AACA,E;AACA,O;AACA,iD;AACA,iE;AACA,G;AACA,E;AACA,C;;;;;;;;;;;;;;;;;;;ACjBA,wC;AACA,0B;AACA,kB;AACA,yB;AACA,c;AACA,oC;AACA,oC;AACA,Q;AACA,M;AACA,K;;AAEA,mC;AACA,qK;AACA,0B;AACA,K;AACA,2B;AACA,uC;AACA,K;AACA,I;AACA,C;;;;;;;;;;;;;;;;;;;;AClBA,8B;AACA,gE;AACA,kB;AACA,mB;AACA,kB;AACA,uB;AACA,wB;AACA,yB;AACA,kC;AACA,sK;AACA,yB;AACA,sD;AACA,yB;AACA,oC;AACA,4B;AACA,c;AACA,oB;AACA,4B;AACA,uB;AACA,4D;AACA,K;AACA,ma;AACA,I;;;;;;;;;;;;;;;;;;;ACvBA,wB;AACA,2B;AACA,yD;AACA,uC;AACA,0B;AACA,G;AACA,e;AACA,G;AACA,G;;AAEA,uB;AACA,8B;AACA,yC;AACA,uB;AACA,uE;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;;ACfA,4C;AACA,4F;AACA,kB;AACA,mB;AACA,mB;AACA,uB;AACA,kB;AACA,wB;AACA,wB;AACA,+D;AACA,sD;AACA,qL;AACA,I;;;;;;;;;;;;;;;;;;;ACbA,sC;AACA,gC;AACA,uE;AACA,E;AACA,G","file":"/packages/rationalk_notes.js","sourcesContent":["RKNotes = {};\nRKCore.searchResultsPackage.push(\n  {\n    name: \"RKNotes\",\n  }\n);\n\nRKNotes.findAllFullTextSearch = function () {\n  var sr = [];\n  sr = sr.concat(Notes.find({}, {sort: {score: -1}}).fetch());\n  return sr;\n};\n\nRKNotes.findFullText = function (searchQuery) {\n  var sr;\n  check(searchQuery, String);\n  sr = Notes.find(\n    {\n      $text: {\n        $search: searchQuery,\n      },\n    },\n    {\n      fields: { score: { $meta: 'textScore' } },\n      sort: { score: { $meta: 'textScore' } },\n      limit: 30,\n    });\n    return sr;\n};\n\nRKNotes.findDummy = function () {\n  return Notes.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n\nMeteor.methods({\n\tupdateNote: function (content, userId) {\n\t\tNotes.update(\n\t\t\t{\n\t\t\t  userId: Meteor.userId(),\n\t\t\t},\n\t\t\t{\n\t\t\t    content: content,\n\t\t\t    updatedAt: new Date(),\n\t\t\t\t  userId: userId,\n          searchResultFromNotes: true,\n\t\t\t},\n\t\t\t{\n\t\t\t    upsert: true,\n\t\t\t}\n\t\t);\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('Note updated succesfully');\n\t\t}\n\t},\n});\n","Notes = new Mongo.Collection('notes');\n\nNotes.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof Notes.createIndex === 'function') {\n\t\tNotes.createIndex({ content: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof Notes._ensureIndex === 'function') {\n\t\t\tNotes._ensureIndex( { content: \"text\" }, {name: \"TextIndex\"});\n\t\t}\n\t}\n}\n","if (Meteor.settings.public.show.notes) {\n  Router.route(\"/notes\", {\n    name: \"notes\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"myNotes\"),\n        Meteor.subscribe(\"members\"),\n      ];\n    },\n  });\n\n  url = Router.routes.notes.path();\n  menuHTML = new Spacebars.SafeString('<li><a href=\"' + url + '\" title=\"My notes\"><strong><span class=\"glyphicon glyphicon-pencil\"></span></strong> Notes</a></li>');\n  RKCore.packageMenu.push(\n    {\n      \"menuHTML\": menuHTML,\n      \"fromPackage\": \"rationalk:notes\",\n    }\n  );\n}\n","\nTemplate.__checkName(\"notes\");\nTemplate[\"notes\"] = new Template(\"Template.notes\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-12\"\n  }, \"\\n\t\t\t \", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n\t\t\t \t\", HTML.Raw('<div class=\"panel-heading\" style=\"position:relative\">\\n\t\t\t \t\t<h3 class=\"panel-title\">My Notes</h3>\\n        \t\t</div>'), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"panel-body\"\n  }, \"\\n\t\t\t\t\t\", HTML.FORM(\"\\n\t\t\t\t        \", HTML.DIV({\n    \"class\": \"form-group\"\n  }, \"\\n\t\t\t\t\t\t    \", HTML.TEXTAREA({\n    \"class\": \"form-control\",\n    rows: \"8\",\n    name: \"content\",\n    placeholder: \"My Notes\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"noteContent\"));\n    }\n  }), \"\\n\t\t\t\t\t    \"), \"\\n\t\t\t\t\t    \", HTML.Raw('<button type=\"submit\" class=\"btn btn-primary\">Save</button>'), \"\\n\t\t\t\t\t    \", HTML.Raw('<p class=\"help-block\">Only you can see them. Use them as todo, reminders or whatever you want.</p>'), \"\\n\t\t\t\t\t    \", HTML.Raw('<p class=\"help-block\">They will appear in search results (but only for you)</p>'), \"\\n\t\t\t\t    \"), \"        \t\t\t\t\t\\n        \t\t\"), \"\\n    \t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n","Template.notes.helpers({\n\tnoteContent: function () {\n\t\tvar myNotes = Notes.findOne({userId: Meteor.userId()});\n\t\tif (typeof myNotes !== 'undefined') {\n\t\t\treturn myNotes.content;\n\t\t}\n\t\treturn false;\n\t},\n});\n\nTemplate.notes.events({\n\t'submit form': function (e) {\n    var content = e.target.content.value;\n    e.preventDefault();\n\t  Meteor.call('updateNote', content, Meteor.userId(), function () {});\n\t},\n});\n","\nTemplate.__checkName(\"noteInSearchResults\");\nTemplate[\"noteInSearchResults\"] = new Template(\"Template.noteInSearchResults\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-10\"\n  }, \"\\n\t\t\t\t\", HTML.P(Blaze.View(\"lookup:content\", function() {\n    return Spacebars.mustache(view.lookup(\"content\"));\n  })), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.Raw('<div class=\"col-md-2\">\\n\t\t\t\t<span class=\"label label-success\">My Note</span><br>\\n\t\t\t\t<p>Only you can see this</p>\\n\t\t\t</div>'), \"\\n\t\t\"), \"\\n\t\");\n}));\n","Template.noteInSearchResults.helpers({\n\tmemberUsername: function (who){\n\t\t\treturn Members.collection.findOne({accountId:who}).profile.nickname;\n\t}\n});\n"]}