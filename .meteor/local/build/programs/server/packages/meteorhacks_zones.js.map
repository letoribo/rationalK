{"version":3,"sources":["meteorhacks:zones/server/inject.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,wC;;AAEA,yD;AACA,+B;AACA,4C;AACA,4B;AACA,Q;AACA,qB;AACA,wD;;AAEA,sD;AACA,kD;AACA,2C;AACA,qD;AACA,U;AACA,0C;AACA,G;AACA,C;;AAEA,gB;AACA,kD;AACA,4B;AACA,E;;AAEA,wC;AACA,mB;AACA,iC;AACA,8F;AACA,iE;AACA,G;;AAEA,S;AACA,kB;AACA,gB;AACA,E;;AAEA,4B;AACA,uB;AACA,E;;AAEA,6B;AACA,wB;AACA,E;;AAEA,qC;AACA,yC;AACA,G","file":"/packages/meteorhacks_zones.js","sourcesContent":["var format = Npm.require('util').format;\n\n// only Meteor < 0.9 has this tyoe of naming for packages\nif(Package['inject-initial']) {\n  Inject = Package['inject-initial'].Inject;\n  var packageName = 'zones';\n} else {\n  // for Meteor 0.9 +\n  Inject = Package['meteorhacks:inject-initial'].Inject;\n\n  // this is a trick to idnentify the test environment\n  // need to set this env var before running tests\n  if(process.env['METEOR_ENV'] == 'test') {\n    var packageName = 'local-test_meteorhacks_zones';\n  } else {\n    var packageName = 'meteorhacks_zones';\n  }\n}\n\nvar fileList = [\n  'utils.js', 'before.js', 'zone.js', 'tracer.js',\n  'after.js', 'reporters.js'\n];\n\nvar cacheAvoider = (new Date).getTime();\nvar finalHtml = '';\nfileList.forEach(function(file) {\n  var template = '<script type=\"text/javascript\" src=\"/packages/%s/assets/%s?%s\"></script>\\n';\n  finalHtml += format(template, packageName, file, cacheAvoider);\n});\n\nZones = {\n  html: finalHtml,\n  enabled: true,\n};\n\nZones.enable = function () {\n  Zones.enabled = true;\n};\n\nZones.disable = function () {\n  Zones.enabled = false;\n};\n\nInject.rawHead('zones', function () {\n  return Zones.enabled ? Zones.html : '';\n});\n"]}