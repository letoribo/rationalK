{"version":3,"sources":["rationalk:fmea//Users/thomasdokithonon/rationalK/packages/rationalk-fmea/package-tap.i18n","rationalk:fmea/lib/methods.js","rationalk:fmea/lib/collections.js","rationalk:fmea/lib/routes.js","rationalk:fmea/lib/server/publications.js","rationalk:fmea/lib/server/methods.js","rationalk:fmea//Users/thomasdokithonon/rationalK/packages/rationalk-fmea/i18n/en.i18n.json","rationalk:fmea//Users/thomasdokithonon/rationalK/packages/rationalk-fmea/i18n/fr.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uH;;AAEA,+D;AACA,uD;;;;;;;;;;;;;;;;;;;ACHA,Y;AACA,wB;AACA,yC;AACA,sB;AACA,gC;;AAEA,gB;AACA,mC;AACA,mB;AACA,I;AACA,sC;AACA,2B;AACA,uB;AACA,6D;AACA,6B;AACA,2C;AACA,oD;AACA,kC;AACA,Q;AACA,Q;AACA,Q;AACA,8G;AACA,oC;AACA,I;AACA,I;AACA,uC;AACA,4D;AACA,G;AACA,G;AACA,yC;AACA,wB;AACA,mB;AACA,I;AACA,iB;AACA,I;AACA,I;AACA,uC;AACA,8C;AACA,G;AACA,G;AACA,uC;AACA,gB;AACA,yB;AACA,8D;AACA,gD;AACA,mD;AACA,4D;AACA,uD;AACA,+D;AACA,+D;AACA,8D;;AAEA,qC;AACA,iC;AACA,G;AACA,mB;AACA,I;AACA,Y;AACA,O;AACA,uB;AACA,O;AACA,O;AACA,K;AACA,I;AACA,oC;AACA,4D;AACA,gC;AACA,sC;AACA,wD;AACA,8C;AACA,kB;AACA,0D;AACA,8D;AACA,8D;AACA,kB;AACA,4D;AACA,kB;AACA,gB;AACA,qC;AACA,K;AACA,I;AACA,oB;AACA,I;AACA,I;AACA,uC;AACA,4D;AACA,G;AACA,G;AACA,G;;AAEA,wC;AACA,yD;AACA,E;;AAEA,wD;AACA,0B;AACA,gB;AACA,+B;AACA,U;AACA,Q;AACA,kD;AACA,gD;AACA,kB;AACA,O;AACA,E;;AAEA,0C;AACA,+E;AACA,E;;;;;;;;;;;;;;;;;;;AC5GA,sC;AACA,8C;AACA,oD;;AAEA,c;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,kB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,qB;AACA,iD;AACA,gD;AACA,kD;AACA,G;;AAEA,sB;AACA,mD;AACA,iE;AACA,E;AACA,O;AACA,qD;AACA,kE;AACA,E;AACA,C;AACA,iB;;;;;;;;;;;;;;;;;;;AC/BA,2C;AACA,gC;AACA,sB;AACA,yB;AACA,c;AACA,sC;AACA,Q;AACA,M;AACA,K;;AAEA,uC;AACA,4B;AACA,K;;AAEA,8C;AACA,0B;AACA,uB;AACA,gD;AACA,M;AACA,yB;AACA,c;AACA,2D;AACA,S;AACA,M;AACA,K;;;AAGA,kC;AACA,yB;AACA,yB;AACA,c;AACA,yC;AACA,S;AACA,M;AACA,K;;;AAGA,gD;AACA,sC;AACA,iD;AACA,+C;AACA,0E;AACA,qE;AACA,oD;AACA,I;;AAEA,0B;AACA,K;AACA,2B;AACA,sC;AACA,K;AACA,I;AACA,C;;;;;;;;;;;;;;;;;;;ACpDA,yC;AACA,0B;AACA,G;;AAEA,mD;AACA,wB;AACA,yB;AACA,gB;AACA,K;AACA,G;;AAEA,4C;AACA,6B;AACA,G;;;;;;;;;;;;;;;;;;;ACbA,gB;AACA,+B;AACA,yC;AACA,qD;AACA,G;AACA,gC;AACA,I;AACA,qD;AACA,c;AACA,Y;AACA,a;AACA,iB;AACA,kB;AACA,0B;AACA,c;AACA,8B;AACA,0B;AACA,mC;AACA,yB;AACA,gB;AACA,uE;AACA,K;AACA,uC;AACA,uB;AACA,gC;AACA,K;;AAEA,+B;AACA,6C;AACA,2C;AACA,wD;AACA,S;AACA,8C;AACA,uC;AACA,yB;AACA,4C;AACA,gD;AACA,S;AACA,O;AACA,K;;AAEA,oB;AACA,gC;AACA,8B;AACA,yC;;AAEA,uC;AACA,uB;AACA,K;;AAEA,Q;AACA,sB;AACA,mB;AACA,Q;AACA,O;AACA,iB;AACA,sB;AACA,O;AACA,mC;AACA,K;AACA,U;AACA,oC;AACA,K;;AAEA,uC;AACA,yC;AACA,K;;AAEA,gC;AACA,oC;AACA,yC;AACA,gE;AACA,O;AACA,K;AACA,U;AACA,yC;AACA,+C;AACA,O;AACA,oB;AACA,K;AACA,iB;AACA,4D;AACA,M;AACA,4C;AACA,mE;AACA,qB;AACA,K;AACA,M;AACA,I;AACA,G;;;;;;;;;;;;;;;;;;;ACzFA,6B;AACA,oC;AACA,iC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,wG;AACA,gD;AACA,mD;;;;;;;;;;;;;;;;;;;ACXA,6B;AACA,oC;AACA,iC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,uH;AACA,mD","file":"/packages/rationalk_fmea.js","sourcesContent":["TAPi18n.packages[\"rationalk:fmea\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"rationalk:fmea\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"rationalk:fmea\");\n","RKFMEA = {};\nRKFMEA.Collections = {};\nRKFMEA.Collections.corePFMEA = corePFMEA;\nRKFMEA.corePFMEA = {};\nRKFMEA.coreDFMEA = {}; //no used\n\nMeteor.methods({\n\tcreateCorePFMEALine: function () {\n\t\tcorePFMEA.insert(\n\t\t\t{\n\t\t\t\tprocessStepDesignation: \"Turning\",\n\t\t\t\tpartType: \"Inner Ring\",\n\t\t\t\tmachineType: \"CNC\",\n\t\t\t  potentialFailureMode: \"The inner diameter is too small\",\n\t\t\t\teffectOfFailure: \"Trash\",\n\t\t\t\tpotentialCauseOfFailure: \"Tool broken\",\n\t\t\t\tcurrentDesignPrevention: \"Maintenance programm\",\n\t\t\t\tcurrentDesignDetection: \"SPC\",\n\t\t\t\tS:6,\n\t\t\t\tD:2,\n\t\t\t\tO:3,\n\t\t\t\tfull: \"Turning Inner Ring CNC The inner diameter is too small Trash Tool broken Maintenance programm SPC\",\n\t\t\t\tsearchResultFromCorePFMEA: true,\n\t\t\t}\n\t\t);\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('A new line has been added successfully');\n\t\t}\n\t},\n\tdeleteCorePFMEALine: function (lineId) {\n\t\tcheck(lineId, String);\n\t\tcorePFMEA.remove(\n\t\t\t{\n\t\t\t  _id: lineId,\n\t\t\t}\n\t\t);\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('Line deleted succesfully');\n\t\t}\n\t},\n\tupdateCorePFMEALine: function (data) {\n\t\tvar full = '';\n\t\tcheck(data, Match.Any);\n\t\tfull = full.concat(data.processStepDesignation).concat(\" \");\n\t\tfull = full.concat(data.partType).concat(\" \");\n\t\tfull = full.concat(data.machineType).concat(\" \");\n\t\tfull = full.concat(data.potentialFailureMode).concat(\" \");\n\t\tfull = full.concat(data.effectOfFailure).concat(\" \");\n\t\tfull = full.concat(data.potentialCauseOfFailure).concat(\" \");\n\t\tfull = full.concat(data.currentDesignPrevention).concat(\" \");\n\t\tfull = full.concat(data.currentDesignDetection).concat(\" \");\n\n\t\tif (Meteor.settings.public.debug) {\n\t\t\tconsole.log(\"full : \" + full);\n\t\t}\n\t\tcorePFMEA.update(\n\t\t\t{\n\t\t\t  $and: [\n\t\t\t  \t{\n\t\t\t\t\t\t_id: data.lineId,\n\t\t\t\t\t},\n\t\t\t  ],\n\t\t\t},\n\t\t\t{\n\t\t\t\t\t// stepNumber: data.stepNumber,\n\t\t      processStepDesignation: data.processStepDesignation,\n\t\t      partType: data.partType,\n\t\t      machineType: data.machineType,\n\t\t      potentialFailureMode: data.potentialFailureMode,\n\t\t      effectOfFailure: data.effectOfFailure,\n\t\t      S: data.S,\n\t\t      specialCharacteristic: data.specialCharacteristic,\n\t\t      potentialCauseOfFailure: data.potentialCauseOfFailure,\n\t\t      currentDesignPrevention: data.currentDesignPrevention,\n\t\t      O: data.O,\n\t\t      currentDesignDetection: data.currentDesignDetection,\n\t\t      D: data.D,\n\t\t\t\t\tfull: full,\n\t\t\t\t\tsearchResultFromCorePFMEA: true,\n\t\t\t},\n\t\t\t{\n\t\t\t    upsert: true,\n\t\t\t}\n\t\t);\n\t\tif (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('The line has been updated successfully');\n\t\t}\n\t},\n});\n\nRKFMEA.corePFMEA.findAll = function () {\n  return corePFMEA.find({}, {sort: {score: -1}}).fetch();\n};\n\nRKFMEA.corePFMEA.findFullText = function (searchQuery) {\n  return corePFMEA.find( {\n        $text: {\n          $search: searchQuery,\n        },\n    }, {\n        fields: { score: { $meta: 'textScore' } },\n        sort: { score: { $meta: 'textScore' } },\n        limit: 30,\n    });\n};\n\nRKFMEA.corePFMEA.findDummy = function () {\n  return corePFMEA.find({$text: { $search: \"somethingthatyouwillneverfind\" }});\n};\n","PFMEA = new Mongo.Collection('pfmea');\ncorePFMEA = new Mongo.Collection('corepfmea');\nSettingsFMEA = new Mongo.Collection('settingsfmea');\n\nPFMEA.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\ncorePFMEA.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nSettingsFMEA.allow( {\n\t\tinsert: function (userId) {return !! userId; },\n\t\tupdate: function (userId) {return !!userId; },\n    remove: function (userId) {return !!userId; },\n});\n\nif (Meteor.isServer) {\n\tif (typeof corePFMEA.createIndex === 'function') {\n\t\tcorePFMEA.createIndex({ full: \"text\" }, { name: \"TextIndex\" });\n\t}\n\telse {\n\t\tif (typeof corePFMEA._ensureIndex === 'function') {\n\t\t\tcorePFMEA._ensureIndex( { full: \"text\" }, {name: \"TextIndex\"});\n\t}\n}\n} //end if Server\n","if (Meteor.settings.public.show.projects) {\n  Router.route(\"/fmea/p/core\", {\n    name: \"corePFMEA\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"corePFMEA\"),\n      ];\n    },\n  });\n\n  Router.route(\"/fmea/p/core/import\", {\n    name: \"importCorePFMEA\",\n  });\n\n  Router.route(\"/fmea/p/core/editLine/:_id\", {\n    name: \"editPFMEALine\",\n    data: function () {\n      return corePFMEA.findOne(this.params._id);\n    },\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"corePFMEALine\", this.params._id),\n       ];\n    },\n  });\n\n\n  Router.route(\"/fmea/settings\", {\n    name: \"settingsFMEA\",\n    waitOn: function () {\n      return [\n        Meteor.subscribe(\"settingsfmea\"),\n       ];\n    },\n  });\n\n\n  urlCorePFMEA = Router.routes.corePFMEA.path();\n  menuHTML = new Spacebars.SafeString(\n     '<li role=\"separator\" class=\"divider\"></li>'\n      + '<li class=\"dropdown-header\">FMEA</li>'\n      + '<li><a href=\"' + urlCorePFMEA + '\" title=\"PFMEA\">P-FMEA</a></li>'\n      + '<li><a href=\"#\" title=\"coming soon - DFMEA\">D-FMEA</a></li>'\n      + '<li role=\"separator\" class=\"divider\"></li>'\n  );\n\n  RKCore.packageMenu.push(\n    {\n      \"menuHTML\": menuHTML,\n      \"fromPackage\": \"rationalk:fmea\",\n    }\n  );\n}\n","Meteor.publish(\"corePFMEA\", function () {\n  return corePFMEA.find();\n});\n\nMeteor.publish(\"corePFMEALine\", function (lineId) {\n  check(lineId, String);\n  return corePFMEA.find({\n    _id: lineId,\n  });\n});\n\nMeteor.publish(\"settingsfmea\", function () {\n  return SettingsFMEA.find();\n});\n","Meteor.methods({\n  clearCorePFMEA: function () {\n    if (typeof(toastr) !== 'undefined') {\n\t\t\ttoastr.success('The core PFMEA has been emptied');\n\t\t}\n    return corePFMEA.remove({});\n  },\n  importCorePFMEALine: function (row, headersOrder) {\n    var docId;\n    var key;\n    var user;\n    var obj = {};\n    var full = \"\";\n    var columnNumberInRow;\n    var value;\n    var documentDoesNotExists;\n    check(row, Match.Any);\n    check(headersOrder, Match.Any);\n    user = Meteor.user();\n    if (!user) {\n      throw new Meteor.Error(401, \"You need to login to update a row\");\n    }\n    if (Meteor.settings.public.debug) {\n      console.log(row);\n      console.log(headersOrder);\n    }\n\n    for (key in headersOrder) {\n      if (headersOrder.hasOwnProperty(key)) {\n        if (Meteor.settings.public.debug) {\n          console.log(key + \" -> \" + headersOrder[key]);\n        }\n        columnNumberInRow = headersOrder[key];\n        value = row[columnNumberInRow];\n        obj[key] = value;\n        if (typeof(value) !== 'undefined') {\n          full = full.concat(value).concat(\" \");\n        }\n      }\n    }\n\n    obj.full = full;\n    obj.importDate = new Date();\n    obj.importedBy = user._id;\n    obj.searchResultFromCorePFMEA = true;\n\n    if (Meteor.settings.public.debug) {\n      console.log(obj);\n    }\n\n    if (\n      corePFMEA.find({\n        full: full,\n      },\n      {\n        limit: 1,\n      }).count() === 0\n    ) {\n      documentDoesNotExists = true;\n    }\n    else {\n      documentDoesNotExists = false;\n    }\n\n    if (Meteor.settings.public.debug) {\n      console.log(documentDoesNotExists);\n    }\n\n    if (documentDoesNotExists) {\n      docId = corePFMEA.insert(obj);\n      if (Meteor.settings.public.debug) {\n        console.log(\"Row \" + docId + \" inserted in core PFMEA\");\n      }\n    }\n    else {\n      if (Meteor.settings.public.debug) {\n        console.log('Document already exists');\n      }\n      docId = false;\n    }\n    return docId;\n    // reindex the mongo (i dont know if this is useful...):\n    /*\n    if (typeof Docs.reIndex === 'function'){\n      console.log(\"Rebuilding the mongo index after batch import.\")\n      Docs.reIndex();\n    }\n    */\n  },\n});\n","var _ = Package.underscore._,\n    package_name = \"rationalk:fmea\",\n    namespace = \"rationalk:fmea\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"invitation_to_join_info_login\":\"Your username will be your company email.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"rationalk:fmea\",\n    namespace = \"rationalk:fmea\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"Project Portfolio Management\":\"Gestion de portefeuille de projets\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n"]}