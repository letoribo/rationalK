{"version":3,"sources":["gadicohen:messageformat/lib/messageformat.js/messageformat.js","gadicohen:messageformat/lib/mfPkg/messageformat.js","gadicohen:messageformat/lib/mfPkg/locale-all.js","gadicohen:messageformat/lib/mfPkg/messageformat-server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,G;AACA,mB;AACA,E;AACA,iD;AACA,E;AACA,mC;AACA,iB;AACA,iB;AACA,gC;AACA,E;AACA,oB;;AAEA,mC;AACA,iD;AACA,uB;;AAEA,iC;AACA,kD;AACA,K;;AAEA,e;AACA,6C;AACA,wH;;AAEA,yB;AACA,2E;AACA,K;;AAEA,qB;AACA,iC;AACA,yB;AACA,yC;AACA,G;;AAEA,yD;AACA,0B;AACA,2B;AACA,sB;AACA,qB;AACA,O;AACA,qB;AACA,K;AACA,I;;AAEA,wC;AACA,mD;AACA,iD;AACA,yB;AACA,I;;AAEA,6D;AACA,kC;AACA,I;;AAEA,yB;AACA,8C;AACA,sD;AACA,yD;AACA,4D;AACA,qD;AACA,oI;AACA,S;AACA,M;AACA,0C;AACA,oB;AACA,wB;AACA,uB;AACA,Y;AACA,8B;AACA,6B;AACA,sC;AACA,0C;AACA,Y;;AAEA,6D;AACA,yD;AACA,iC;AACA,O;AACA,uD;AACA,kB;AACA,O;;AAEA,wC;AACA,sB;AACA,O;AACA,oD;AACA,M;AACA,2C;AACA,8D;;AAEA,iE;AACA,iE;AACA,yE;AACA,kC;AACA,sB;AACA,S;AACA,O;;AAEA,oB;AACA,K;AACA,I;;AAEA,kD;AACA,4B;AACA,M;AACA,iC;AACA,M;AACA,6B;AACA,O;AACA,I;AACA,uB;AACA,Q;AACA,2E;AACA,0E;AACA,6E;AACA,oE;AACA,Q;AACA,yE;AACA,0E;AACA,kE;AACA,S;AACA,qB;AACA,6C;AACA,2D;AACA,6C;AACA,kD;AACA,6C;AACA,6C;AACA,mD;AACA,gE;AACA,c;AACA,K;AACA,I;AACA,kB;AACA,Q;AACA,iF;AACA,+E;AACA,kF;AACA,4E;AACA,S;AACA,yC;AACA,8B;AACA,+B;AACA,6D;AACA,uE;AACA,6D;AACA,+C;AACA,2C;AACA,2C;AACA,2D;AACA,+C;AACA,2D;AACA,2C;AACA,uC;AACA,iC;AACA,yB;AACA,+B;AACA,6B;AACA,iC;AACA,qC;AACA,uB;AACA,wC;AACA,U;AACA,Q;AACA,sC;AACA,wD;AACA,4E;AACA,W;AACA,gB;AACA,8B;AACA,S;AACA,Q;AACA,oB;AACA,+B;AACA,qC;AACA,2C;AACA,Q;AACA,kD;AACA,6B;AACA,U;AACA,gD;AACA,+C;AACA,sC;AACA,W;AACA,U;AACA,wB;AACA,S;AACA,Q;AACA,6B;AACA,0C;AACA,yB;AACA,qB;AACA,U;AACA,iC;AACA,6B;AACA,uB;AACA,kB;AACA,6B;AACA,uB;AACA,W;AACA,U;AACA,+F;AACA,S;AACA,Q;AACA,uC;AACA,2C;AACA,mB;AACA,W;AACA,U;AACA,2C;AACA,uC;AACA,2C;AACA,W;AACA,U;AACA,kD;AACA,S;AACA,Q;AACA,gC;AACA,sB;AACA,mB;AACA,U;AACA,qB;AACA,iD;AACA,iC;AACA,6I;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,+C;AACA,wC;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,mC;AACA,iC;AACA,yB;AACA,wD;AACA,sC;AACA,oC;AACA,0D;AACA,a;AACA,mC;AACA,2C;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,oD;AACA,0B;AACA,mC;AACA,8B;AACA,e;AACA,oC;AACA,kD;AACA,wC;AACA,iB;AACA,e;AACA,sE;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,oD;AACA,mE;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,8C;AACA,0B;AACA,kB;AACA,kB;AACA,2B;AACA,uC;AACA,mC;AACA,a;AACA,W;AACA,iC;AACA,gC;AACA,mC;AACA,qD;AACA,qC;AACA,oC;AACA,uC;AACA,sD;AACA,kC;AACA,0B;AACA,0B;AACA,mC;AACA,+C;AACA,2C;AACA,qB;AACA,mB;AACA,yC;AACA,6C;AACA,2C;AACA,uF;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,kD;AACA,2B;AACA,0B;AACA,8B;AACA,e;AACA,mC;AACA,+B;AACA,e;AACA,6E;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,+C;AACA,wC;AACA,+B;AACA,U;AACA,qB;AACA,qB;AACA,+B;AACA,iC;AACA,uB;AACA,+C;AACA,4B;AACA,oB;AACA,oB;AACA,6B;AACA,yC;AACA,qC;AACA,e;AACA,a;AACA,mC;AACA,8C;AACA,qC;AACA,6C;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,sD;AACA,mC;AACA,2C;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,uD;AACA,0B;AACA,6C;AACA,qC;AACA,gB;AACA,0C;AACA,4C;AACA,e;AACA,oB;AACA,kC;AACA,e;AACA,yB;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,wC;AACA,4E;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,8B;AACA,iC;AACA,oD;AACA,iC;AACA,uB;AACA,oB;AACA,6B;AACA,yC;AACA,0C;AACA,e;AACA,a;AACA,mC;AACA,kC;AACA,qC;AACA,mD;AACA,gC;AACA,wB;AACA,wB;AACA,iC;AACA,6C;AACA,yC;AACA,mB;AACA,iB;AACA,uC;AACA,sC;AACA,yC;AACA,kD;AACA,2C;AACA,0C;AACA,6C;AACA,kG;AACA,8B;AACA,uC;AACA,mC;AACA,uB;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,+C;AACA,sB;AACA,uC;AACA,yB;AACA,4B;AACA,gB;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,iC;AACA,uB;AACA,uB;AACA,gC;AACA,mC;AACA,sD;AACA,mC;AACA,yB;AACA,sB;AACA,+B;AACA,2C;AACA,4C;AACA,iB;AACA,e;AACA,qC;AACA,oC;AACA,uC;AACA,qD;AACA,kC;AACA,0B;AACA,0B;AACA,mC;AACA,+C;AACA,2C;AACA,qB;AACA,mB;AACA,yC;AACA,wC;AACA,2C;AACA,oD;AACA,6C;AACA,4C;AACA,+C;AACA,oG;AACA,gC;AACA,yC;AACA,qC;AACA,yB;AACA,8B;AACA,uC;AACA,mC;AACA,uB;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,mC;AACA,iD;AACA,wB;AACA,yC;AACA,2B;AACA,8B;AACA,kB;AACA,+C;AACA,a;AACA,mC;AACA,yB;AACA,a;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,sC;AACA,sB;AACA,mB;AACA,U;AACA,qB;AACA,gD;AACA,iC;AACA,8C;AACA,uD;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,sC;AACA,sB;AACA,mB;AACA,U;AACA,qB;AACA,gD;AACA,iC;AACA,8C;AACA,uD;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,8C;AACA,wC;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,0C;AACA,oD;AACA,iC;AACA,yB;AACA,0C;AACA,sC;AACA,oC;AACA,4C;AACA,a;AACA,mC;AACA,2C;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,iD;AACA,yB;AACA,4C;AACA,+B;AACA,gB;AACA,yB;AACA,gC;AACA,e;AACA,oB;AACA,+B;AACA,e;AACA,yB;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,wC;AACA,4E;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,8B;AACA,iC;AACA,oD;AACA,iC;AACA,uB;AACA,oB;AACA,6B;AACA,yC;AACA,0C;AACA,e;AACA,a;AACA,mC;AACA,kC;AACA,qC;AACA,mD;AACA,gC;AACA,wB;AACA,wB;AACA,iC;AACA,6C;AACA,yC;AACA,mB;AACA,iB;AACA,uC;AACA,sC;AACA,yC;AACA,6C;AACA,2C;AACA,0C;AACA,6C;AACA,kG;AACA,8B;AACA,uC;AACA,mC;AACA,uB;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,4C;AACA,uB;AACA,iC;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,8C;AACA,+B;AACA,mB;AACA,U;AACA,qB;AACA,uB;AACA,wC;AACA,oC;AACA,kC;AACA,0C;AACA,W;AACA,iC;AACA,6C;AACA,sB;AACA,4C;AACA,+B;AACA,gB;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,sC;AACA,qF;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,8B;AACA,iC;AACA,wC;AACA,mC;AACA,kC;AACA,qC;AACA,oD;AACA,gC;AACA,wB;AACA,wB;AACA,iC;AACA,6C;AACA,yC;AACA,mB;AACA,iB;AACA,uC;AACA,sC;AACA,yC;AACA,2D;AACA,2C;AACA,0C;AACA,6C;AACA,4D;AACA,wC;AACA,gC;AACA,gC;AACA,yC;AACA,qD;AACA,iD;AACA,2B;AACA,yB;AACA,+C;AACA,6G;AACA,gC;AACA,yC;AACA,qC;AACA,yB;AACA,8B;AACA,uC;AACA,mC;AACA,uB;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,iD;AACA,sB;AACA,oC;AACA,uB;AACA,wB;AACA,gB;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,oC;AACA,+B;AACA,yB;AACA,U;AACA,qB;AACA,+B;AACA,iC;AACA,4C;AACA,uB;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,iC;AACA,uB;AACA,uB;AACA,+C;AACA,4B;AACA,oB;AACA,oB;AACA,6B;AACA,yC;AACA,qC;AACA,e;AACA,a;AACA,mC;AACA,uC;AACA,qC;AACA,6C;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,mC;AACA,8C;AACA,yB;AACA,mC;AACA,a;AACA,mC;AACA,yB;AACA,a;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,iC;AACA,0D;AACA,+B;AACA,U;AACA,qB;AACA,qB;AACA,8B;AACA,iC;AACA,yB;AACA,uB;AACA,gC;AACA,mC;AACA,sC;AACA,qC;AACA,oC;AACA,uC;AACA,wD;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,sC;AACA,oC;AACA,yB;AACA,kC;AACA,qC;AACA,wC;AACA,uC;AACA,sC;AACA,yC;AACA,0D;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,a;AACA,mC;AACA,2C;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,gD;AACA,2B;AACA,mD;AACA,0D;AACA,oC;AACA,iB;AACA,e;AACA,sB;AACA,+B;AACA,sC;AACA,gB;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,6B;AACA,iD;AACA,yB;AACA,U;AACA,qB;AACA,qB;AACA,8B;AACA,iC;AACA,wD;AACA,0C;AACA,oB;AACA,oB;AACA,6B;AACA,yC;AACA,0C;AACA,e;AACA,a;AACA,mC;AACA,2B;AACA,gE;AACA,4C;AACA,sB;AACA,sB;AACA,+B;AACA,2C;AACA,qD;AACA,iB;AACA,e;AACA,wC;AACA,sC;AACA,kE;AACA,8C;AACA,wB;AACA,wB;AACA,iC;AACA,6C;AACA,uD;AACA,mB;AACA,iB;AACA,e;AACA,qC;AACA,oC;AACA,uC;AACA,iE;AACA,wB;AACA,iC;AACA,6B;AACA,iB;AACA,sB;AACA,+B;AACA,2B;AACA,e;AACA,oB;AACA,6B;AACA,yB;AACA,a;AACA,kB;AACA,2B;AACA,uB;AACA,W;AACA,iC;AACA,iD;AACA,kD;AACA,6C;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,gC;AACA,+B;AACA,mB;AACA,U;AACA,qB;AACA,iC;AACA,iC;AACA,yB;AACA,sC;AACA,oC;AACA,qC;AACA,a;AACA,kB;AACA,2B;AACA,W;AACA,iC;AACA,0F;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,+B;AACA,0D;AACA,yB;AACA,U;AACA,qB;AACA,kE;AACA,wC;AACA,kB;AACA,kB;AACA,2B;AACA,uC;AACA,2D;AACA,a;AACA,W;AACA,iC;AACA,4C;AACA,uB;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,iC;AACA,uB;AACA,iD;AACA,8B;AACA,uB;AACA,oB;AACA,6B;AACA,yC;AACA,yC;AACA,e;AACA,a;AACA,mC;AACA,2C;AACA,6B;AACA,uB;AACA,a;AACA,mC;AACA,yB;AACA,a;AACA,mC;AACA,yB;AACA,mD;AACA,gC;AACA,yB;AACA,sB;AACA,+B;AACA,2C;AACA,2C;AACA,iB;AACA,e;AACA,qC;AACA,6C;AACA,kC;AACA,yB;AACA,e;AACA,qC;AACA,2B;AACA,e;AACA,qC;AACA,2B;AACA,qD;AACA,kC;AACA,2B;AACA,wB;AACA,iC;AACA,6C;AACA,6C;AACA,mB;AACA,iB;AACA,uC;AACA,+C;AACA,oC;AACA,2B;AACA,iB;AACA,uC;AACA,6B;AACA,iB;AACA,uC;AACA,6B;AACA,6B;AACA,uD;AACA,oC;AACA,6B;AACA,0B;AACA,mC;AACA,+C;AACA,+C;AACA,qB;AACA,mB;AACA,yC;AACA,+C;AACA,2C;AACA,iD;AACA,6C;AACA,mD;AACA,+C;AACA,qD;AACA,iD;AACA,oF;AACA,kC;AACA,2C;AACA,uC;AACA,2B;AACA,gC;AACA,yC;AACA,qC;AACA,yB;AACA,8B;AACA,uC;AACA,mC;AACA,uB;AACA,4B;AACA,qC;AACA,iC;AACA,qB;AACA,0B;AACA,mC;AACA,+B;AACA,mB;AACA,yC;AACA,iE;AACA,uF;AACA,6E;AACA,mB;AACA,yC;AACA,+B;AACA,mB;AACA,iB;AACA,e;AACA,a;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,iC;AACA,+B;AACA,mB;AACA,U;AACA,qB;AACA,iD;AACA,wC;AACA,kB;AACA,kB;AACA,2B;AACA,uC;AACA,mC;AACA,a;AACA,W;AACA,iC;AACA,yB;AACA,sC;AACA,oC;AACA,qD;AACA,4C;AACA,sB;AACA,sB;AACA,+B;AACA,2C;AACA,uC;AACA,iB;AACA,e;AACA,a;AACA,kB;AACA,2B;AACA,W;AACA,iC;AACA,6C;AACA,iD;AACA,8B;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,mC;AACA,sB;AACA,U;AACA,uD;AACA,wC;AACA,kB;AACA,kB;AACA,2B;AACA,uC;AACA,yC;AACA,a;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,4B;AACA,+B;AACA,mB;AACA,U;AACA,2B;AACA,qB;AACA,uB;AACA,uC;AACA,oC;AACA,kC;AACA,yC;AACA,W;AACA,iC;AACA,kF;AACA,W;AACA,iC;AACA,uB;AACA,W;AACA,2B;AACA,yD;AACA,sC;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,qC;AACA,sB;AACA,U;AACA,qD;AACA,wC;AACA,kB;AACA,kB;AACA,2B;AACA,uC;AACA,0C;AACA,a;AACA,W;AACA,yB;AACA,S;AACA,Q;AACA,Q;AACA,4C;AACA,0B;AACA,U;AACA,kC;AACA,iC;AACA,qD;AACA,+C;AACA,8C;AACA,yC;AACA,a;AACA,W;AACA,+B;AACA,S;AACA,Q;AACA,yC;AACA,Y;AACA,kF;AACA,8E;AACA,gF;AACA,kC;AACA,a;AACA,U;AACA,uB;AACA,yB;AACA,6B;AACA,U;AACA,yE;AACA,qC;AACA,8B;AACA,sC;AACA,yB;AACA,6B;AACA,2E;AACA,qB;AACA,yB;AACA,4B;AACA,oB;AACA,uB;AACA,6B;AACA,a;AACA,W;AACA,U;AACA,gD;AACA,S;AACA,Q;AACA,Q;AACA,iD;AACA,Q;AACA,U;AACA,kE;AACA,U;AACA,6D;AACA,U;AACA,iC;AACA,sC;AACA,4E;AACA,U;AACA,sE;AACA,U;AACA,iC;AACA,oC;AACA,4E;AACA,U;AACA,0E;AACA,U;AACA,gC;AACA,0B;AACA,wE;AACA,U;AACA,4E;AACA,+B;AACA,W;AACA,sD;AACA,2D;AACA,0E;AACA,qD;AACA,U;AACA,qC;AACA,uD;AACA,kB;AACA,mB;AACA,+B;AACA,gC;AACA,Y;AACA,S;AACA,Q;AACA,sB;AACA,Q;AACA,M;AACA,2C;AACA,mD;AACA,M;AACA,I;AACA,yD;AACA,I;AACA,0E;AACA,8C;AACA,8C;AACA,Q;AACA,kC;AACA,iB;AACA,+C;AACA,kB;AACA,iB;AACA,4C;AACA,kB;AACA,kB;AACA,iF;AACA,sB;AACA,8C;AACA,S;AACA,Q;AACA,+D;AACA,Q;AACA,sF;AACA,O;AACA,M;AACA,gC;AACA,+B;AACA,yB;AACA,mD;AACA,2B;AACA,uB;AACA,2B;AACA,M;AACA,I;AACA,mD;AACA,I;AACA,kB;AACA,O;;AAEA,+C;AACA,6C;AACA,qD;AACA,I;;AAEA,yD;AACA,oB;AACA,0B;AACA,c;AACA,2C;AACA,2B;AACA,M;;AAEA,sC;AACA,8B;AACA,wB;AACA,sC;;AAEA,2B;AACA,uB;AACA,0C;AACA,oC;AACA,yD;AACA,sD;AACA,W;AACA,uC;AACA,yC;AACA,yD;AACA,sD;AACA,W;AACA,mB;AACA,oC;AACA,6C;AACA,8F;AACA,6B;AACA,0D;AACA,W;AACA,gB;AACA,uD;AACA,oE;AACA,qE;AACA,sD;AACA,W;AACA,mB;AACA,6B;AACA,uC;AACA,4C;AACA,8B;AACA,gC;AACA,+F;AACA,W;AACA,4C;AACA,4C;AACA,qF;AACA,sF;AACA,+B;AACA,8B;AACA,gC;AACA,6C;AACA,sC;AACA,0H;AACA,uB;AACA,W;AACA,mB;AACA,gC;AACA,2B;AACA,6B;AACA,mC;AACA,6C;AACA,+D;AACA,qD;AACA,2B;AACA,iG;;AAEA,0D;AACA,yD;AACA,gC;AACA,a;AACA,wB;AACA,yB;AACA,a;AACA,iB;AACA,sB;AACA,a;AACA,+F;AACA,sG;AACA,W;AACA,wB;AACA,4B;AACA,6F;AACA,W;AACA,mB;AACA,mC;;AAEA,6C;AACA,kD;AACA,qD;AACA,2B;;AAEA,0D;AACA,yD;AACA,gC;AACA,a;AACA,wB;AACA,yB;AACA,a;AACA,iB;AACA,sB;AACA,a;AACA,+F;AACA,0B;AACA,+D;AACA,+B;AACA,2B;AACA,kB;AACA,c;AACA,W;AACA,wB;AACA,4B;AACA,6F;AACA,W;AACA,mB;AACA,yB;AACA,2B;AACA,U;AACA,sB;AACA,uD;AACA,4D;AACA,qE;AACA,yB;AACA,qB;AACA,gB;AACA,yD;AACA,O;AACA,K;AACA,4B;AACA,I;;AAEA,0D;AACA,0C;AACA,iB;AACA,wB;AACA,+B;AACA,S;AACA,sB;AACA,I;;;AAGA,uC;AACA,0D;AACA,+C;AACA,K;AACA,0C;AACA,G;AACA,wD;AACA,uB;AACA,2B;AACA,O;AACA,G;AACA,Q;AACA,0C;AACA,G;;AAEA,W;;;;;;;;;;;;;;;;;;;ACxjDA,E;AACA,O;AACA,E;AACA,0B;AACA,uE;AACA,iE;AACA,E;AACA,yE;AACA,4C;AACA,c;AACA,0B;AACA,E;AACA,G;;;AAGA,S;AACA,sF;AACA,gB;AACA,iB;AACA,gB;AACA,a;AACA,mB;;AAEA,sB;AACA,sB;AACA,c;AACA,qB;AACA,M;;AAEA,qH;AACA,2H;AACA,4G;;AAEA,qC;AACA,6B;AACA,4B;AACA,4B;AACA,6C;AACA,Y;AACA,6C;AACA,M;;AAEA,M;AACA,sE;AACA,yC;AACA,O;AACA,yC;AACA,0C;AACA,8B;AACA,sC;AACA,kC;AACA,gD;;AAEA,uC;AACA,kC;AACA,mE;AACA,6C;AACA,iD;AACA,8C;AACA,kD;AACA,gD;AACA,uD;AACA,uC;AACA,qE;AACA,gD;AACA,uD;AACA,sD;AACA,6D;AACA,a;AACA,W;AACA,M;;AAEA,Y;AACA,iE;AACA,sB;AACA,8D;AACA,4D;AACA,6B;AACA,8C;AACA,kE;AACA,8C;AACA,e;AACA,U;AACA,4B;AACA,8C;AACA,iE;AACA,8C;AACA,e;AACA,S;AACA,K;AACA,C;;AAEA,4G;AACA,wG;AACA,8G;AACA,0G;AACA,+C;;AAEA,6C;AACA,mC;AACA,uC;AACA,gB;AACA,8B;AACA,6B;AACA,yB;AACA,sB;AACA,K;;AAEA,mC;AACA,c;AACA,+D;AACA,+D;AACA,oC;AACA,K;;AAEA,+C;AACA,oB;AACA,6F;AACA,gE;AACA,iD;AACA,kD;AACA,uD;AACA,Y;AACA,qC;;AAEA,sE;AACA,mD;AACA,gC;;AAEA,qE;AACA,K;;AAEA,S;AACA,oC;AACA,K;AACA,gB;AACA,uB;AACA,K;AACA,I;AACA,oB;AACA,C;;;AAGA,gE;AACA,2B;AACA,8C;AACA,yB;AACA,oC;AACA,wB;AACA,4B;AACA,+E;AACA,uC;AACA,gD;AACA,wE;AACA,wE;;AAEA,kC;AACA,wD;AACA,8D;AACA,uF;AACA,mG;AACA,2C;AACA,S;AACA,O;AACA,G;;;;;;;;;;;;;;;;;;;ACpKA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,gB;AACA,kB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,gE;AACA,iB;AACA,G;AACA,iE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,gB;AACA,kB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,mC;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,gB;AACA,kB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,0B;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,wB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,e;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,2C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,yC;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,2D;AACA,mE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,iB;AACA,E;AACA,uC;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,yC;AACA,gB;AACA,kB;AACA,G;AACA,uB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,4D;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,gB;AACA,kB;AACA,G;AACA,yC;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,iC;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,4C;AACA,8C;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,4E;AACA,iB;AACA,G;AACA,iE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,kD;AACA,+E;AACA,2B;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,4C;AACA,8C;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,yC;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,2D;AACA,mE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,yB;AACA,iB;AACA,G;AACA,gD;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,e;AACA,iB;AACA,G;AACA,mC;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,uB;AACA,iB;AACA,G;AACA,uB;AACA,iB;AACA,G;AACA,yC;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,wC;AACA,yC;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,2D;AACA,mE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,uC;AACA,0B;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,uC;AACA,iB;AACA,E;AACA,wC;AACA,yC;AACA,iB;AACA,G;AACA,uC;AACA,iE;AACA,iB;AACA,G;AACA,2D;AACA,mE;AACA,kB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,kB;AACA,iB;AACA,G;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;AACA,0C;AACA,iB;AACA,E;;;;;;;;;;;;;;;;;;;AChfA,wD;AACA,4D;AACA,wD;AACA,wB;AACA,yB;AACA,I;AACA,iD;AACA,6C;;AAEA,G;AACA,oE;AACA,0E;AACA,I;;AAEA,uE;AACA,6E;AACA,uB;AACA,qB;AACA,qC;;AAEA,0D;AACA,4B;AACA,Y;;AAEA,yE;AACA,6C;AACA,Y;;AAEA,yE;AACA,iF;AACA,oB;AACA,mD;AACA,U;AACA,mB;AACA,yC;AACA,e;AACA,a;AACA,mB;AACA,qB;AACA,M;AACA,G;;AAEA,S;AACA,Y;AACA,c;AACA,kB;AACA,oB;AACA,oB;AACA,yB;AACA,I;AACA,yC;AACA,wB;AACA,wC;;AAEA,gE;AACA,iB;AACA,4C;AACA,qB;AACA,W;AACA,qE;AACA,+C;AACA,oB;AACA,I;AACA,U;AACA,mB;AACA,G;;AAEA,wD;AACA,wC;AACA,gD;AACA,yB;AACA,6D;AACA,G;;AAEA,wE;AACA,wB;AACA,wB;AACA,e;AACA,iC;AACA,I;;AAEA,iB;AACA,uC;AACA,U;AACA,uC;AACA,G;;AAEA,iB;AACA,2C;AACA,kB;AACA,yB;AACA,+B;AACA,wE;AACA,gC;AACA,K;AACA,oB;AACA,kC;;AAEA,mE;AACA,I;;AAEA,qC;AACA,oC;AACA,G;;AAEA,6B;AACA,C;;AAEA,0B;AACA,2C;AACA,qB;;AAEA,2D;AACA,sD;;AAEA,S;;AAEA,qD;AACA,2C;;AAEA,yD;;AAEA,wC;AACA,8E;;AAEA,gD;AACA,E;AACA,C;;AAEA,yB;AACA,yC;;AAEA,iD;AACA,0C;;AAEA,sB;AACA,0B;AACA,wD;;AAEA,8D;AACA,gC;;AAEA,oC;AACA,uE;;AAEA,8C;AACA,C;;AAEA,8C;AACA,2B;AACA,wE;AACA,gC;AACA,K;;AAEA,wE;AACA,yB;AACA,uC;AACA,C;;AAEA,gB;AACA,oE;AACA,iC;AACA,yB;AACA,yB;AACA,mB;AACA,+B;AACA,2C;AACA,a;AACA,sB;AACA,mC;AACA,uD;AACA,G;AACA,U;AACA,oB;AACA,iC;AACA,G;AACA,E;AACA,G;;AAEA,6D;AACA,8B;AACA,4C;AACA,sB;AACA,oD;AACA,0C;;AAEA,Y;AACA,wB;AACA,c;;AAEA,6C;AACA,qB;AACA,2B;AACA,2B;AACA,4B;AACA,wB;AACA,oB;;AAEA,W;AACA,6B;;AAEA,e;AACA,gD;;AAEA,6C;AACA,G;;AAEA,qD;AACA,8B;AACA,4C;AACA,sC;;AAEA,qB;AACA,2B;AACA,e;AACA,sD;AACA,W;AACA,wB;AACA,+C;AACA,G;;AAEA,oB;AACA,kB;AACA,+B;AACA,gC;AACA,iC;;AAEA,2D;;AAEA,8B;AACA,yB;AACA,Y;;AAEA,kB;AACA,c;;AAEA,gC;AACA,kE;AACA,e;;AAEA,gC;AACA,sD;AACA,c;AACA,I;;AAEA,yE;AACA,2E;AACA,2E;AACA,mC;AACA,2D;;AAEA,+E;AACA,+E;AACA,mF;AACA,E;;AAEA,mC;AACA,kD;AACA,C;;AAEA,+D;AACA,sC;AACA,iB;AACA,yB;AACA,8C;AACA,qB;AACA,qB;AACA,iD;AACA,I;AACA,uB;AACA,gD;AACA,I;AACA,uB;AACA,mD;AACA,G;AACA,I;;AAEA,sB;AACA,4C;AACA,c;;AAEA,0B;AACA,gB;AACA,I;AACA,G;;AAEA,gB;AACA,+B;AACA,+B;AACA,E;AACA,G;;AAEA,0C;AACA,8B;AACA,G","file":"/packages/gadicohen:messageformat.js","sourcesContent":["/**\n * messageformat.js\n *\n * ICU PluralFormat + SelectFormat for JavaScript\n *\n * @author Alex Sexton - @SlexAxton\n * @version 0.1.5\n * @license WTFPL\n * @contributor_license Dojo CLA\n*/\n(function ( root ) {\n\n  // Create the contructor function\n  function MessageFormat ( locale, pluralFunc ) {\n    var fallbackLocale;\n\n    if ( locale && pluralFunc ) {\n      MessageFormat.locale[ locale ] = pluralFunc;\n    }\n\n    // Defaults\n    fallbackLocale = locale = locale || \"en\";\n    pluralFunc = pluralFunc || MessageFormat.locale[ fallbackLocale = MessageFormat.Utils.getFallbackLocale( locale ) ];\n\n    if ( ! pluralFunc ) {\n      throw new Error( \"Plural Function not found for locale: \" + locale );\n    }\n\n    // Own Properties\n    this.pluralFunc = pluralFunc;\n    this.locale = locale;\n    this.fallbackLocale = fallbackLocale;\n  }\n\n  // Set up the locales object. Add in english by default\n  MessageFormat.locale = {\n    \"en\" : function ( n ) {\n      if ( n === 1 ) {\n        return \"one\";\n      }\n      return \"other\";\n    }\n  };\n\n  // Build out our basic SafeString type\n  // more or less stolen from Handlebars by @wycats\n  MessageFormat.SafeString = function( string ) {\n    this.string = string;\n  };\n\n  MessageFormat.SafeString.prototype.toString = function () {\n    return this.string.toString();\n  };\n\n  MessageFormat.Utils = {\n    numSub : function ( string, key, depth ) {\n      // make sure that it's not an escaped octothorpe\n      return string.replace( /^#|[^\\\\]#/g, function (m) {\n        var prefix = m && m.length === 2 ? m.charAt(0) : '';\n        return prefix + '\" + (function(){ var x = ' +\n        key+';\\nif( isNaN(x) ){\\nthrow new Error(\"MessageFormat: `\"+lastkey_'+depth+'+\"` isnt a number.\");\\n}\\nreturn x;\\n})() + \"';\n      });\n    },\n    escapeExpression : function (string) {\n      var escape = {\n            \"\\n\": \"\\\\n\",\n            \"\\\"\": '\\\\\"'\n          },\n          badChars = /[\\n\"]/g,\n          possible = /[\\n\"]/,\n          escapeChar = function(chr) {\n            return escape[chr] || \"&amp;\";\n          };\n\n      // Don't escape SafeStrings, since they're already safe\n      if ( string instanceof MessageFormat.SafeString ) {\n        return string.toString();\n      }\n      else if ( string === null || string === false ) {\n        return \"\";\n      }\n\n      if ( ! possible.test( string ) ) {\n        return string;\n      }\n      return string.replace( badChars, escapeChar );\n    },\n    getFallbackLocale: function( locale ) {\n      var tagSeparator = locale.indexOf(\"-\") >= 0 ? \"-\" : \"_\";\n\n      // Lets just be friends, fallback through the language tags\n      while ( ! MessageFormat.locale.hasOwnProperty( locale ) ) {\n        locale = locale.substring(0, locale.lastIndexOf( tagSeparator ));\n        if (locale.length === 0) {\n          return null;\n        }\n      }\n\n      return locale;\n    }\n  };\n\n  // This is generated and pulled in for browsers.\n  var mparser = (function(){\n    /*\n     * Generated by PEG.js 0.7.0.\n     *\n     * http://pegjs.majda.cz/\n     */\n    \n    function quote(s) {\n      /*\n       * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n       * string literal except for the closing quote character, backslash,\n       * carriage return, line separator, paragraph separator, and line feed.\n       * Any character may appear in the form of an escape sequence.\n       *\n       * For portability, we also escape escape all control and non-ASCII\n       * characters. Note that \"\\0\" and \"\\v\" escape sequences are not used\n       * because JSHint does not like the first and IE the second.\n       */\n       return '\"' + s\n        .replace(/\\\\/g, '\\\\\\\\')  // backslash\n        .replace(/\"/g, '\\\\\"')    // closing quote character\n        .replace(/\\x08/g, '\\\\b') // backspace\n        .replace(/\\t/g, '\\\\t')   // horizontal tab\n        .replace(/\\n/g, '\\\\n')   // line feed\n        .replace(/\\f/g, '\\\\f')   // form feed\n        .replace(/\\r/g, '\\\\r')   // carriage return\n        .replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g, escape)\n        + '\"';\n    }\n    \n    var result = {\n      /*\n       * Parses the input with a generated parser. If the parsing is successfull,\n       * returns a value explicitly or implicitly specified by the grammar from\n       * which the parser was generated (see |PEG.buildParser|). If the parsing is\n       * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n       */\n      parse: function(input, startRule) {\n        var parseFunctions = {\n          \"start\": parse_start,\n          \"messageFormatPattern\": parse_messageFormatPattern,\n          \"messageFormatPatternRight\": parse_messageFormatPatternRight,\n          \"messageFormatElement\": parse_messageFormatElement,\n          \"elementFormat\": parse_elementFormat,\n          \"pluralStyle\": parse_pluralStyle,\n          \"selectStyle\": parse_selectStyle,\n          \"pluralFormatPattern\": parse_pluralFormatPattern,\n          \"offsetPattern\": parse_offsetPattern,\n          \"selectFormatPattern\": parse_selectFormatPattern,\n          \"pluralForms\": parse_pluralForms,\n          \"stringKey\": parse_stringKey,\n          \"string\": parse_string,\n          \"id\": parse_id,\n          \"chars\": parse_chars,\n          \"char\": parse_char,\n          \"digits\": parse_digits,\n          \"hexDigit\": parse_hexDigit,\n          \"_\": parse__,\n          \"whitespace\": parse_whitespace\n        };\n        \n        if (startRule !== undefined) {\n          if (parseFunctions[startRule] === undefined) {\n            throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");\n          }\n        } else {\n          startRule = \"start\";\n        }\n        \n        var pos = 0;\n        var reportFailures = 0;\n        var rightmostFailuresPos = 0;\n        var rightmostFailuresExpected = [];\n        \n        function padLeft(input, padding, length) {\n          var result = input;\n          \n          var padLength = length - input.length;\n          for (var i = 0; i < padLength; i++) {\n            result = padding + result;\n          }\n          \n          return result;\n        }\n        \n        function escape(ch) {\n          var charCode = ch.charCodeAt(0);\n          var escapeChar;\n          var length;\n          \n          if (charCode <= 0xFF) {\n            escapeChar = 'x';\n            length = 2;\n          } else {\n            escapeChar = 'u';\n            length = 4;\n          }\n          \n          return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n        }\n        \n        function matchFailed(failure) {\n          if (pos < rightmostFailuresPos) {\n            return;\n          }\n          \n          if (pos > rightmostFailuresPos) {\n            rightmostFailuresPos = pos;\n            rightmostFailuresExpected = [];\n          }\n          \n          rightmostFailuresExpected.push(failure);\n        }\n        \n        function parse_start() {\n          var result0;\n          var pos0;\n          \n          pos0 = pos;\n          result0 = parse_messageFormatPattern();\n          if (result0 !== null) {\n            result0 = (function(offset, messageFormatPattern) { return { type: \"program\", program: messageFormatPattern }; })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_messageFormatPattern() {\n          var result0, result1, result2;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse_string();\n          if (result0 !== null) {\n            result1 = [];\n            result2 = parse_messageFormatPatternRight();\n            while (result2 !== null) {\n              result1.push(result2);\n              result2 = parse_messageFormatPatternRight();\n            }\n            if (result1 !== null) {\n              result0 = [result0, result1];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, s1, inner) {\n              var st = [];\n              if ( s1 && s1.val ) {\n                st.push( s1 );\n              }\n              for( var i in inner ){\n                if ( inner.hasOwnProperty( i ) ) {\n                  st.push( inner[ i ] );\n                }\n              }\n              return { type: 'messageFormatPattern', statements: st };\n            })(pos0, result0[0], result0[1]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_messageFormatPatternRight() {\n          var result0, result1, result2, result3, result4, result5;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          if (input.charCodeAt(pos) === 123) {\n            result0 = \"{\";\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"{\\\"\");\n            }\n          }\n          if (result0 !== null) {\n            result1 = parse__();\n            if (result1 !== null) {\n              result2 = parse_messageFormatElement();\n              if (result2 !== null) {\n                result3 = parse__();\n                if (result3 !== null) {\n                  if (input.charCodeAt(pos) === 125) {\n                    result4 = \"}\";\n                    pos++;\n                  } else {\n                    result4 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"\\\"}\\\"\");\n                    }\n                  }\n                  if (result4 !== null) {\n                    result5 = parse_string();\n                    if (result5 !== null) {\n                      result0 = [result0, result1, result2, result3, result4, result5];\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, mfe, s1) {\n              var res = [];\n              if ( mfe ) {\n                res.push(mfe);\n              }\n              if ( s1 && s1.val ) {\n                res.push( s1 );\n              }\n              return { type: \"messageFormatPatternRight\", statements : res };\n            })(pos0, result0[2], result0[5]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_messageFormatElement() {\n          var result0, result1, result2;\n          var pos0, pos1, pos2;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse_id();\n          if (result0 !== null) {\n            pos2 = pos;\n            if (input.charCodeAt(pos) === 44) {\n              result1 = \",\";\n              pos++;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\",\\\"\");\n              }\n            }\n            if (result1 !== null) {\n              result2 = parse_elementFormat();\n              if (result2 !== null) {\n                result1 = [result1, result2];\n              } else {\n                result1 = null;\n                pos = pos2;\n              }\n            } else {\n              result1 = null;\n              pos = pos2;\n            }\n            result1 = result1 !== null ? result1 : \"\";\n            if (result1 !== null) {\n              result0 = [result0, result1];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, argIdx, efmt) {\n              var res = { \n                type: \"messageFormatElement\",\n                argumentIndex: argIdx\n              };\n              if ( efmt && efmt.length ) {\n                res.elementFormat = efmt[1];\n              }\n              else {\n                res.output = true;\n              }\n              return res;\n            })(pos0, result0[0], result0[1]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_elementFormat() {\n          var result0, result1, result2, result3, result4, result5, result6;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            if (input.substr(pos, 6) === \"plural\") {\n              result1 = \"plural\";\n              pos += 6;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"plural\\\"\");\n              }\n            }\n            if (result1 !== null) {\n              result2 = parse__();\n              if (result2 !== null) {\n                if (input.charCodeAt(pos) === 44) {\n                  result3 = \",\";\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\",\\\"\");\n                  }\n                }\n                if (result3 !== null) {\n                  result4 = parse__();\n                  if (result4 !== null) {\n                    result5 = parse_pluralStyle();\n                    if (result5 !== null) {\n                      result6 = parse__();\n                      if (result6 !== null) {\n                        result0 = [result0, result1, result2, result3, result4, result5, result6];\n                      } else {\n                        result0 = null;\n                        pos = pos1;\n                      }\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, t, s) {\n              return {\n                type : \"elementFormat\",\n                key  : t,\n                val  : s.val\n              };\n            })(pos0, result0[1], result0[5]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          if (result0 === null) {\n            pos0 = pos;\n            pos1 = pos;\n            result0 = parse__();\n            if (result0 !== null) {\n              if (input.substr(pos, 6) === \"select\") {\n                result1 = \"select\";\n                pos += 6;\n              } else {\n                result1 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"select\\\"\");\n                }\n              }\n              if (result1 !== null) {\n                result2 = parse__();\n                if (result2 !== null) {\n                  if (input.charCodeAt(pos) === 44) {\n                    result3 = \",\";\n                    pos++;\n                  } else {\n                    result3 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"\\\",\\\"\");\n                    }\n                  }\n                  if (result3 !== null) {\n                    result4 = parse__();\n                    if (result4 !== null) {\n                      result5 = parse_selectStyle();\n                      if (result5 !== null) {\n                        result6 = parse__();\n                        if (result6 !== null) {\n                          result0 = [result0, result1, result2, result3, result4, result5, result6];\n                        } else {\n                          result0 = null;\n                          pos = pos1;\n                        }\n                      } else {\n                        result0 = null;\n                        pos = pos1;\n                      }\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n            if (result0 !== null) {\n              result0 = (function(offset, t, s) {\n                return {\n                  type : \"elementFormat\",\n                  key  : t,\n                  val  : s.val\n                };\n              })(pos0, result0[1], result0[5]);\n            }\n            if (result0 === null) {\n              pos = pos0;\n            }\n          }\n          return result0;\n        }\n        \n        function parse_pluralStyle() {\n          var result0;\n          var pos0;\n          \n          pos0 = pos;\n          result0 = parse_pluralFormatPattern();\n          if (result0 !== null) {\n            result0 = (function(offset, pfp) {\n              return { type: \"pluralStyle\", val: pfp };\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_selectStyle() {\n          var result0;\n          var pos0;\n          \n          pos0 = pos;\n          result0 = parse_selectFormatPattern();\n          if (result0 !== null) {\n            result0 = (function(offset, sfp) {\n              return { type: \"selectStyle\", val: sfp };\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_pluralFormatPattern() {\n          var result0, result1, result2;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse_offsetPattern();\n          result0 = result0 !== null ? result0 : \"\";\n          if (result0 !== null) {\n            result1 = [];\n            result2 = parse_pluralForms();\n            while (result2 !== null) {\n              result1.push(result2);\n              result2 = parse_pluralForms();\n            }\n            if (result1 !== null) {\n              result0 = [result0, result1];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, op, pf) {\n              var res = {\n                type: \"pluralFormatPattern\",\n                pluralForms: pf\n              };\n              if ( op ) {\n                res.offset = op;\n              }\n              else {\n                res.offset = 0;\n              }\n              return res;\n            })(pos0, result0[0], result0[1]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_offsetPattern() {\n          var result0, result1, result2, result3, result4, result5, result6;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            if (input.substr(pos, 6) === \"offset\") {\n              result1 = \"offset\";\n              pos += 6;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"offset\\\"\");\n              }\n            }\n            if (result1 !== null) {\n              result2 = parse__();\n              if (result2 !== null) {\n                if (input.charCodeAt(pos) === 58) {\n                  result3 = \":\";\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\":\\\"\");\n                  }\n                }\n                if (result3 !== null) {\n                  result4 = parse__();\n                  if (result4 !== null) {\n                    result5 = parse_digits();\n                    if (result5 !== null) {\n                      result6 = parse__();\n                      if (result6 !== null) {\n                        result0 = [result0, result1, result2, result3, result4, result5, result6];\n                      } else {\n                        result0 = null;\n                        pos = pos1;\n                      }\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, d) {\n              return d;\n            })(pos0, result0[5]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_selectFormatPattern() {\n          var result0, result1;\n          var pos0;\n          \n          pos0 = pos;\n          result0 = [];\n          result1 = parse_pluralForms();\n          while (result1 !== null) {\n            result0.push(result1);\n            result1 = parse_pluralForms();\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, pf) {\n              return {\n                type: \"selectFormatPattern\",\n                pluralForms: pf\n              };\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_pluralForms() {\n          var result0, result1, result2, result3, result4, result5, result6, result7;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            result1 = parse_stringKey();\n            if (result1 !== null) {\n              result2 = parse__();\n              if (result2 !== null) {\n                if (input.charCodeAt(pos) === 123) {\n                  result3 = \"{\";\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"{\\\"\");\n                  }\n                }\n                if (result3 !== null) {\n                  result4 = parse__();\n                  if (result4 !== null) {\n                    result5 = parse_messageFormatPattern();\n                    if (result5 !== null) {\n                      result6 = parse__();\n                      if (result6 !== null) {\n                        if (input.charCodeAt(pos) === 125) {\n                          result7 = \"}\";\n                          pos++;\n                        } else {\n                          result7 = null;\n                          if (reportFailures === 0) {\n                            matchFailed(\"\\\"}\\\"\");\n                          }\n                        }\n                        if (result7 !== null) {\n                          result0 = [result0, result1, result2, result3, result4, result5, result6, result7];\n                        } else {\n                          result0 = null;\n                          pos = pos1;\n                        }\n                      } else {\n                        result0 = null;\n                        pos = pos1;\n                      }\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, k, mfp) {\n              return {\n                type: \"pluralForms\",\n                key: k,\n                val: mfp\n              };\n            })(pos0, result0[1], result0[5]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_stringKey() {\n          var result0, result1;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          result0 = parse_id();\n          if (result0 !== null) {\n            result0 = (function(offset, i) {\n              return i;\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          if (result0 === null) {\n            pos0 = pos;\n            pos1 = pos;\n            if (input.charCodeAt(pos) === 61) {\n              result0 = \"=\";\n              pos++;\n            } else {\n              result0 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"=\\\"\");\n              }\n            }\n            if (result0 !== null) {\n              result1 = parse_digits();\n              if (result1 !== null) {\n                result0 = [result0, result1];\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n            if (result0 !== null) {\n              result0 = (function(offset, d) {\n                return d;\n              })(pos0, result0[1]);\n            }\n            if (result0 === null) {\n              pos = pos0;\n            }\n          }\n          return result0;\n        }\n        \n        function parse_string() {\n          var result0, result1, result2, result3, result4;\n          var pos0, pos1, pos2;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            result1 = [];\n            pos2 = pos;\n            result2 = parse__();\n            if (result2 !== null) {\n              result3 = parse_chars();\n              if (result3 !== null) {\n                result4 = parse__();\n                if (result4 !== null) {\n                  result2 = [result2, result3, result4];\n                } else {\n                  result2 = null;\n                  pos = pos2;\n                }\n              } else {\n                result2 = null;\n                pos = pos2;\n              }\n            } else {\n              result2 = null;\n              pos = pos2;\n            }\n            while (result2 !== null) {\n              result1.push(result2);\n              pos2 = pos;\n              result2 = parse__();\n              if (result2 !== null) {\n                result3 = parse_chars();\n                if (result3 !== null) {\n                  result4 = parse__();\n                  if (result4 !== null) {\n                    result2 = [result2, result3, result4];\n                  } else {\n                    result2 = null;\n                    pos = pos2;\n                  }\n                } else {\n                  result2 = null;\n                  pos = pos2;\n                }\n              } else {\n                result2 = null;\n                pos = pos2;\n              }\n            }\n            if (result1 !== null) {\n              result0 = [result0, result1];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, ws, s) {\n              var tmp = [];\n              for( var i = 0; i < s.length; ++i ) {\n                for( var j = 0; j < s[ i ].length; ++j ) {\n                  tmp.push(s[i][j]);\n                }\n              }\n              return {\n                type: \"string\",\n                val: ws + tmp.join('')\n              };\n            })(pos0, result0[0], result0[1]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_id() {\n          var result0, result1, result2, result3;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            if (/^[a-zA-Z$_]/.test(input.charAt(pos))) {\n              result1 = input.charAt(pos);\n              pos++;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[a-zA-Z$_]\");\n              }\n            }\n            if (result1 !== null) {\n              result2 = [];\n              if (/^[^ \\t\\n\\r,.+={}]/.test(input.charAt(pos))) {\n                result3 = input.charAt(pos);\n                pos++;\n              } else {\n                result3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^ \\\\t\\\\n\\\\r,.+={}]\");\n                }\n              }\n              while (result3 !== null) {\n                result2.push(result3);\n                if (/^[^ \\t\\n\\r,.+={}]/.test(input.charAt(pos))) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[^ \\\\t\\\\n\\\\r,.+={}]\");\n                  }\n                }\n              }\n              if (result2 !== null) {\n                result3 = parse__();\n                if (result3 !== null) {\n                  result0 = [result0, result1, result2, result3];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, s1, s2) {\n              return s1 + (s2 ? s2.join('') : '');\n            })(pos0, result0[1], result0[2]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_chars() {\n          var result0, result1;\n          var pos0;\n          \n          pos0 = pos;\n          result1 = parse_char();\n          if (result1 !== null) {\n            result0 = [];\n            while (result1 !== null) {\n              result0.push(result1);\n              result1 = parse_char();\n            }\n          } else {\n            result0 = null;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, chars) { return chars.join(''); })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_char() {\n          var result0, result1, result2, result3, result4;\n          var pos0, pos1;\n          \n          pos0 = pos;\n          if (/^[^{}\\\\\\0-\\x1F \\t\\n\\r]/.test(input.charAt(pos))) {\n            result0 = input.charAt(pos);\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\");\n            }\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, x) {\n              return x;\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          if (result0 === null) {\n            pos0 = pos;\n            if (input.substr(pos, 2) === \"\\\\#\") {\n              result0 = \"\\\\#\";\n              pos += 2;\n            } else {\n              result0 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"\\\\\\\\#\\\"\");\n              }\n            }\n            if (result0 !== null) {\n              result0 = (function(offset) {\n                return \"\\\\#\";\n              })(pos0);\n            }\n            if (result0 === null) {\n              pos = pos0;\n            }\n            if (result0 === null) {\n              pos0 = pos;\n              if (input.substr(pos, 2) === \"\\\\{\") {\n                result0 = \"\\\\{\";\n                pos += 2;\n              } else {\n                result0 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"\\\\\\\\{\\\"\");\n                }\n              }\n              if (result0 !== null) {\n                result0 = (function(offset) {\n                  return \"\\u007B\";\n                })(pos0);\n              }\n              if (result0 === null) {\n                pos = pos0;\n              }\n              if (result0 === null) {\n                pos0 = pos;\n                if (input.substr(pos, 2) === \"\\\\}\") {\n                  result0 = \"\\\\}\";\n                  pos += 2;\n                } else {\n                  result0 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"\\\\\\\\}\\\"\");\n                  }\n                }\n                if (result0 !== null) {\n                  result0 = (function(offset) {\n                    return \"\\u007D\";\n                  })(pos0);\n                }\n                if (result0 === null) {\n                  pos = pos0;\n                }\n                if (result0 === null) {\n                  pos0 = pos;\n                  pos1 = pos;\n                  if (input.substr(pos, 2) === \"\\\\u\") {\n                    result0 = \"\\\\u\";\n                    pos += 2;\n                  } else {\n                    result0 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"\\\"\\\\\\\\u\\\"\");\n                    }\n                  }\n                  if (result0 !== null) {\n                    result1 = parse_hexDigit();\n                    if (result1 !== null) {\n                      result2 = parse_hexDigit();\n                      if (result2 !== null) {\n                        result3 = parse_hexDigit();\n                        if (result3 !== null) {\n                          result4 = parse_hexDigit();\n                          if (result4 !== null) {\n                            result0 = [result0, result1, result2, result3, result4];\n                          } else {\n                            result0 = null;\n                            pos = pos1;\n                          }\n                        } else {\n                          result0 = null;\n                          pos = pos1;\n                        }\n                      } else {\n                        result0 = null;\n                        pos = pos1;\n                      }\n                    } else {\n                      result0 = null;\n                      pos = pos1;\n                    }\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                  if (result0 !== null) {\n                    result0 = (function(offset, h1, h2, h3, h4) {\n                        return String.fromCharCode(parseInt(\"0x\" + h1 + h2 + h3 + h4));\n                    })(pos0, result0[1], result0[2], result0[3], result0[4]);\n                  }\n                  if (result0 === null) {\n                    pos = pos0;\n                  }\n                }\n              }\n            }\n          }\n          return result0;\n        }\n        \n        function parse_digits() {\n          var result0, result1;\n          var pos0;\n          \n          pos0 = pos;\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            result1 = input.charAt(pos);\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n          if (result1 !== null) {\n            result0 = [];\n            while (result1 !== null) {\n              result0.push(result1);\n              if (/^[0-9]/.test(input.charAt(pos))) {\n                result1 = input.charAt(pos);\n                pos++;\n              } else {\n                result1 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[0-9]\");\n                }\n              }\n            }\n          } else {\n            result0 = null;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, ds) {\n              return parseInt((ds.join('')), 10);\n            })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          return result0;\n        }\n        \n        function parse_hexDigit() {\n          var result0;\n          \n          if (/^[0-9a-fA-F]/.test(input.charAt(pos))) {\n            result0 = input.charAt(pos);\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9a-fA-F]\");\n            }\n          }\n          return result0;\n        }\n        \n        function parse__() {\n          var result0, result1;\n          var pos0;\n          \n          reportFailures++;\n          pos0 = pos;\n          result0 = [];\n          result1 = parse_whitespace();\n          while (result1 !== null) {\n            result0.push(result1);\n            result1 = parse_whitespace();\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, w) { return w.join(''); })(pos0, result0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          reportFailures--;\n          if (reportFailures === 0 && result0 === null) {\n            matchFailed(\"whitespace\");\n          }\n          return result0;\n        }\n        \n        function parse_whitespace() {\n          var result0;\n          \n          if (/^[ \\t\\n\\r]/.test(input.charAt(pos))) {\n            result0 = input.charAt(pos);\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[ \\\\t\\\\n\\\\r]\");\n            }\n          }\n          return result0;\n        }\n        \n        \n        function cleanupExpected(expected) {\n          expected.sort();\n          \n          var lastExpected = null;\n          var cleanExpected = [];\n          for (var i = 0; i < expected.length; i++) {\n            if (expected[i] !== lastExpected) {\n              cleanExpected.push(expected[i]);\n              lastExpected = expected[i];\n            }\n          }\n          return cleanExpected;\n        }\n        \n        function computeErrorPosition() {\n          /*\n           * The first idea was to use |String.split| to break the input up to the\n           * error position along newlines and derive the line and column from\n           * there. However IE's |split| implementation is so broken that it was\n           * enough to prevent it.\n           */\n          \n          var line = 1;\n          var column = 1;\n          var seenCR = false;\n          \n          for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {\n            var ch = input.charAt(i);\n            if (ch === \"\\n\") {\n              if (!seenCR) { line++; }\n              column = 1;\n              seenCR = false;\n            } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n              line++;\n              column = 1;\n              seenCR = true;\n            } else {\n              column++;\n              seenCR = false;\n            }\n          }\n          \n          return { line: line, column: column };\n        }\n        \n        \n        var result = parseFunctions[startRule]();\n        \n        /*\n         * The parser is now in one of the following three states:\n         *\n         * 1. The parser successfully parsed the whole input.\n         *\n         *    - |result !== null|\n         *    - |pos === input.length|\n         *    - |rightmostFailuresExpected| may or may not contain something\n         *\n         * 2. The parser successfully parsed only a part of the input.\n         *\n         *    - |result !== null|\n         *    - |pos < input.length|\n         *    - |rightmostFailuresExpected| may or may not contain something\n         *\n         * 3. The parser did not successfully parse any part of the input.\n         *\n         *   - |result === null|\n         *   - |pos === 0|\n         *   - |rightmostFailuresExpected| contains at least one failure\n         *\n         * All code following this comment (including called functions) must\n         * handle these states.\n         */\n        if (result === null || pos !== input.length) {\n          var offset = Math.max(pos, rightmostFailuresPos);\n          var found = offset < input.length ? input.charAt(offset) : null;\n          var errorPosition = computeErrorPosition();\n          \n          throw new this.SyntaxError(\n            cleanupExpected(rightmostFailuresExpected),\n            found,\n            offset,\n            errorPosition.line,\n            errorPosition.column\n          );\n        }\n        \n        return result;\n      },\n      \n      /* Returns the parser source code. */\n      toSource: function() { return this._source; }\n    };\n    \n    /* Thrown when a parser encounters a syntax error. */\n    \n    result.SyntaxError = function(expected, found, offset, line, column) {\n      function buildMessage(expected, found) {\n        var expectedHumanized, foundHumanized;\n        \n        switch (expected.length) {\n          case 0:\n            expectedHumanized = \"end of input\";\n            break;\n          case 1:\n            expectedHumanized = expected[0];\n            break;\n          default:\n            expectedHumanized = expected.slice(0, expected.length - 1).join(\", \")\n              + \" or \"\n              + expected[expected.length - 1];\n        }\n        \n        foundHumanized = found ? quote(found) : \"end of input\";\n        \n        return \"Expected \" + expectedHumanized + \" but \" + foundHumanized + \" found.\";\n      }\n      \n      this.name = \"SyntaxError\";\n      this.expected = expected;\n      this.found = found;\n      this.message = buildMessage(expected, found);\n      this.offset = offset;\n      this.line = line;\n      this.column = column;\n    };\n    \n    result.SyntaxError.prototype = Error.prototype;\n    \n    return result;\n  })();\n\n  MessageFormat.prototype.parse = function () {\n    // Bind to itself so error handling works\n    return mparser.parse.apply( mparser, arguments );\n  };\n\n  MessageFormat.prototype.precompile = function ( ast ) {\n    var self = this,\n        needOther = false,\n        fp = {\n      begin: 'function(d){\\nvar r = \"\";\\n',\n      end  : \"return r;\\n}\"\n    };\n\n    function interpMFP ( ast, data ) {\n      // Set some default data\n      data = data || {};\n      var s = '', i, tmp, lastkeyname;\n\n      switch ( ast.type ) {\n        case 'program':\n          return interpMFP( ast.program );\n        case 'messageFormatPattern':\n          for ( i = 0; i < ast.statements.length; ++i ) {\n            s += interpMFP( ast.statements[i], data );\n          }\n          return fp.begin + s + fp.end;\n        case 'messageFormatPatternRight':\n          for ( i = 0; i < ast.statements.length; ++i ) {\n            s += interpMFP( ast.statements[i], data );\n          }\n          return s;\n        case 'messageFormatElement':\n          data.pf_count = data.pf_count || 0;\n          s += 'if(!d){\\nthrow new Error(\"MessageFormat: No data passed to function.\");\\n}\\n';\n          if ( ast.output ) {\n            s += 'r += d[\"' + ast.argumentIndex + '\"];\\n';\n          }\n          else {\n            lastkeyname = 'lastkey_'+(data.pf_count+1);\n            s += 'var '+lastkeyname+' = \"'+ast.argumentIndex+'\";\\n';\n            s += 'var k_'+(data.pf_count+1)+'=d['+lastkeyname+'];\\n';\n            s += interpMFP( ast.elementFormat, data );\n          }\n          return s;\n        case 'elementFormat':\n          if ( ast.key === 'select' ) {\n            s += interpMFP( ast.val, data );\n            s += 'r += (pf_' +\n                 data.pf_count +\n                 '[ k_' + (data.pf_count+1) + ' ] || pf_'+data.pf_count+'[ \"other\" ])( d );\\n';\n          }\n          else if ( ast.key === 'plural' ) {\n            s += interpMFP( ast.val, data );\n            s += 'if ( pf_'+(data.pf_count)+'[ k_'+(data.pf_count+1)+' + \"\" ] ) {\\n';\n            s += 'r += pf_'+data.pf_count+'[ k_'+(data.pf_count+1)+' + \"\" ]( d ); \\n';\n            s += '}\\nelse {\\n';\n            s += 'r += (pf_' +\n                 data.pf_count +\n                 '[ MessageFormat.locale[\"' +\n                 self.fallbackLocale +\n                 '\"]( k_'+(data.pf_count+1)+' - off_'+(data.pf_count)+' ) ] || pf_'+data.pf_count+'[ \"other\" ] )( d );\\n';\n            s += '}\\n';\n          }\n          return s;\n        /* // Unreachable cases.\n        case 'pluralStyle':\n        case 'selectStyle':*/\n        case 'pluralFormatPattern':\n          data.pf_count = data.pf_count || 0;\n          s += 'var off_'+data.pf_count+' = '+ast.offset+';\\n';\n          s += 'var pf_' + data.pf_count + ' = { \\n';\n          needOther = true;\n          // We're going to simultaneously check to make sure we hit the required 'other' option.\n\n          for ( i = 0; i < ast.pluralForms.length; ++i ) {\n            if ( ast.pluralForms[ i ].key === 'other' ) {\n              needOther = false;\n            }\n            if ( tmp ) {\n              s += ',\\n';\n            }\n            else{\n              tmp = 1;\n            }\n            s += '\"' + ast.pluralForms[ i ].key + '\" : ' + interpMFP( ast.pluralForms[ i ].val,\n          (function(){ var res = JSON.parse(JSON.stringify(data)); res.pf_count++; return res; })() );\n          }\n          s += '\\n};\\n';\n          if ( needOther ) {\n            throw new Error(\"No 'other' form found in pluralFormatPattern \" + data.pf_count);\n          }\n          return s;\n        case 'selectFormatPattern':\n\n          data.pf_count = data.pf_count || 0;\n          s += 'var off_'+data.pf_count+' = 0;\\n';\n          s += 'var pf_' + data.pf_count + ' = { \\n';\n          needOther = true;\n\n          for ( i = 0; i < ast.pluralForms.length; ++i ) {\n            if ( ast.pluralForms[ i ].key === 'other' ) {\n              needOther = false;\n            }\n            if ( tmp ) {\n              s += ',\\n';\n            }\n            else{\n              tmp = 1;\n            }\n            s += '\"' + ast.pluralForms[ i ].key + '\" : ' + interpMFP( ast.pluralForms[ i ].val,\n              (function(){\n                var res = JSON.parse( JSON.stringify( data ) );\n                res.pf_count++;\n                return res;\n              })()\n            );\n          }\n          s += '\\n};\\n';\n          if ( needOther ) {\n            throw new Error(\"No 'other' form found in selectFormatPattern \" + data.pf_count);\n          }\n          return s;\n        /* // Unreachable\n        case 'pluralForms':\n        */\n        case 'string':\n          return 'r += \"' + MessageFormat.Utils.numSub(\n            MessageFormat.Utils.escapeExpression( ast.val ),\n            'k_' + data.pf_count + ' - off_' + ( data.pf_count - 1 ),\n            data.pf_count\n          ) + '\";\\n';\n        default:\n          throw new Error( 'Bad AST type: ' + ast.type );\n      }\n    }\n    return interpMFP( ast );\n  };\n\n  MessageFormat.prototype.compile = function ( message ) {\n    return (new Function( 'MessageFormat',\n      'return ' +\n        this.precompile(\n          this.parse( message )\n        )\n    ))(MessageFormat);\n  };\n\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = MessageFormat;\n    }\n    exports.MessageFormat = MessageFormat;\n  }\n  else if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return MessageFormat;\n    });\n  }\n  else {\n    root['MessageFormat'] = MessageFormat;\n  }\n\n})( this );\n","/*\n * TODO\n *\n * -> Revisions, show diff\n * -> Mark stuff as fuzzy or invalid depending on how big the change is\n * -> transUI, enable on load, etc... decide on mfTrans.js format\n *\n * sendNative code (force send of native strings in case not kept inline)\n * ready() function for loadlang, sub.  XXX-\n * setLocale()\n * language loader tooltip\n *\n */\n\n\nmfPkg = {\n    native: 'en',   // Fine to use reserved words for IdentifierNames (vs Identifiers)\n    objects: {},\n    compiled: {},\n    strings: {},\n    meta: {},\n    initted: false,\n\n    sendPolicy: 'all',\n    sendNative: false,\n    transUI: {\n        enabled: true\n    },\n\n    mfStrings: typeof Mongo !== 'undefined' ? new Mongo.Collection('mfStrings') : new Meteor.Collection('mfStrings'),\n    mfRevisions: typeof Mongo !== 'undefined' ? new Mongo.Collection('mfRevisions') : new Meteor.Collection('mfRevisions'),\n    mfMeta: typeof Mongo !== 'undefined' ? new Mongo.Collection('mfMeta') : new Meteor.Collection('mfMeta'),\n\n    init: function(native, options) {\n        this.native = native;\n        this.initted = true;\n        if (Meteor.isServer)\n            this.serverInit(native, options);\n        else\n            this.clientInit(native, options);\n    },\n\n    /*\n     * Observe additions/changes from after our last extract time, and\n     * update the local cache accordingly\n     */\n    observeFrom: function(mtime, which) {\n        var query = {mtime: {$gt: mtime}};\n        if (which == 'native')\n            query.lang = mfPkg.native;\n        else if (which == 'trans')\n            query.lang = { $not: mfPkg.native };\n\n        this.mfStrings.find().observe({\n            added: function(doc) {\n//                console.log('added ' + doc.key + ' ' + doc.text);\n                if (!mfPkg.strings[doc.lang])\n                    mfPkg.strings[doc.lang] = {};\n                if (!mfPkg.compiled[doc.lang])\n                    mfPkg.compiled[doc.lang] = {};\n                mfPkg.strings[doc.lang][doc.key]\n                    = Meteor.isClient ? doc.text : doc;\n            }, changed: function(doc) {\n//                console.log('changed ' + doc.key + ' ' + doc.text);\n                mfPkg.strings[doc.lang][doc.key]\n                    = Meteor.isClient ? doc.text : doc;\n                if (mfPkg.compiled[doc.lang][doc.key])\n                    delete mfPkg.compiled[doc.lang][doc.key];\n            }\n        });\n    },\n\n    webUI: {\n        allowFuncs: [ function() { return !!Meteor.userId(); } ],\n        denyFuncs: [],\n        allow: function(func) { this.allowFuncs.push(func); },\n        deny: function(func) { this.denyFuncs.push(func); },\n        allowed: function() {\n            var self = this, args = arguments;\n            return _.some(mfPkg.webUI.allowFuncs, function(func) {\n                return func.apply(self, args);\n            });\n        },\n        denied: function() {\n            var self = this, args = arguments;\n            return _.some(mfPkg.webUI.denyFuncs, function(func) {\n                return func.apply(self, args);\n            });\n        }\n    }\n}\n\nmfPkg.mfStrings.allow({insert:mfPkg.webUI.allowed, update:mfPkg.webUI.allowed, remove:mfPkg.webUI.allowed});\nmfPkg.mfStrings.deny({insert:mfPkg.webUI.denied, update:mfPkg.webUI.denied, remove:mfPkg.webUI.denied});\nmfPkg.mfRevisions.allow({insert:mfPkg.webUI.allowed, update:mfPkg.webUI.allowed, remove:mfPkg.webUI.allowed});\nmfPkg.mfRevisions.deny({insert:mfPkg.webUI.denied, update:mfPkg.webUI.denied, remove:mfPkg.webUI.denied});\nmfPkg.mfMeta.deny(function() { return true; });\n\nmf = function(key, params, message, locale) {\n    if (!locale && Meteor.isClient)\n        locale = Session.get('locale');\n    if (!locale)\n        locale = mfPkg.native;\n    if (_.isString(params)) {\n        message = params;\n        params = null;\n    }\n\n    var mf = mfPkg.objects[locale];\n    if (!mf) {\n        mf = mfPkg.objects[locale] = new MessageFormat(locale);\n        if (!mfPkg.strings[locale]) mfPkg.strings[locale] = {};\n        mfPkg.compiled[locale] = {};\n    }\n\n    var cmessage = mfPkg.compiled[locale][key];\n    if (!cmessage) {\n        // try find key in 1) locale, 2) native, 3) as an argument, 4) just show the key name\n        if (mfPkg.strings[locale] && mfPkg.strings[locale][key])\n            message = mfPkg.strings[locale][key];\n        else if (mfPkg.strings[mfPkg.native][key])\n            message = mfPkg.strings[mfPkg.native][key];\n        else\n            message = message || key;\n\n        // If loaded from database (only when mfExtract/All.js exists)\n        if (Meteor.isServer && _.isObject(message))\n        \tmessage = message.text;\n\n        cmessage = mfPkg.compiled[locale][key] = mf.compile(message);\n    }\n\n    try {\n        cmessage = cmessage(params);\n    }\n    catch(err) {\n        cmessage = err;\n    }\n    \n    return cmessage;\n}\n\n\n// needs to be on client and server for routing to work properly\nif (Package['iron:router'])\nPackage['iron:router'].Router.map(function() {\n    this.route('mfAll', {\n        path: '/translate/mfAll.js',\n        where: 'server',\n        action: function() {\n            var out, meta = { exportedAt: new Date().getTime(), updatedAt: 0 };\n            for (lang in mfPkg.strings)\n                for (key in mfPkg.strings[lang])\n                    if (mfPkg.strings[lang][key].mtime > meta.updatedAt)\n                        meta.updatedAt = mfPkg.strings[lang][key].mtime;\n\n            out = 'mfPkg.syncAll('\n                + JSON.stringify(mfPkg.strings, null, 2)\n                + ', ' + JSON.stringify(meta, null, 2) + ');';\n            //this.response.writeHead(200, {'Content-Type': 'application/javascript'});\n            this.response.writeHead(200, {'Content-Disposition': 'attachment; filename=mfAll.js'});\n            this.response.end(out, 'utf8');\n        }\n    });\n});\n","MessageFormat.locale.af = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.am = function(n) {\n  if (n === 0 || n == 1) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.ar = function(n) {\n  if (n === 0) {\n    return 'zero';\n  }\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2) {\n    return 'two';\n  }\n  if ((n % 100) >= 3 && (n % 100) <= 10 && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 100) >= 11 && (n % 100) <= 99 && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.bg = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.bn = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.br = function (n) {\n  if (n === 0) {\n    return 'zero';\n  }\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2) {\n    return 'two';\n  }\n  if (n == 3) {\n    return 'few';\n  }\n  if (n == 6) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.ca = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.cs = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2 || n == 3 || n == 4) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.cy = function (n) {\n  if (n === 0) {\n    return 'zero';\n  }\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2) {\n    return 'two';\n  }\n  if (n == 3) {\n    return 'few';\n  }\n  if (n == 6) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.da = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.de = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.el = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.en = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.es = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.et = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.eu = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.fa = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.fi = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.fil = function(n) {\n  if (n === 0 || n == 1) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.fr = function (n) {\n  if (n >= 0 && n < 2) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.ga = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2) {\n    return 'two';\n  }\n  return 'other';\n};\nMessageFormat.locale.gl = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.gsw = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.gu = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.he = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.hi = function(n) {\n  if (n === 0 || n == 1) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.hr = function (n) {\n  if ((n % 10) == 1 && (n % 100) != 11) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 4 &&\n      ((n % 100) < 12 || (n % 100) > 14) && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 10) === 0 || ((n % 10) >= 5 && (n % 10) <= 9) ||\n      ((n % 100) >= 11 && (n % 100) <= 14) && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.hu = function(n) {\n  return 'other';\n};\nMessageFormat.locale.id = function(n) {\n  return 'other';\n};\nMessageFormat.locale[\"in\"] = function(n) {\n  return 'other';\n};\nMessageFormat.locale.is = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.it = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.iw = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.ja = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.kn = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.ko = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.lag = function (n) {\n  if (n === 0) {\n    return 'zero';\n  }\n  if (n > 0 && n < 2) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.ln = function(n) {\n  if (n === 0 || n == 1) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.lt = function (n) {\n  if ((n % 10) == 1 && ((n % 100) < 11 || (n % 100) > 19)) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 9 &&\n      ((n % 100) < 11 || (n % 100) > 19) && n == Math.floor(n)) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.lv = function (n) {\n  if (n === 0) {\n    return 'zero';\n  }\n  if ((n % 10) == 1 && (n % 100) != 11) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.mk = function (n) {\n  if ((n % 10) == 1 && n != 11) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.ml = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.mo = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n === 0 || n != 1 && (n % 100) >= 1 &&\n      (n % 100) <= 19 && n == Math.floor(n)) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.mr = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.ms = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.mt = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n === 0 || ((n % 100) >= 2 && (n % 100) <= 4 && n == Math.floor(n))) {\n    return 'few';\n  }\n  if ((n % 100) >= 11 && (n % 100) <= 19 && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.nl = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.no = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.or = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.pl = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 4 &&\n      ((n % 100) < 12 || (n % 100) > 14) && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 10) === 0 || n != 1 && (n % 10) == 1 ||\n      ((n % 10) >= 5 && (n % 10) <= 9 || (n % 100) >= 12 && (n % 100) <= 14) &&\n      n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.pt = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.ro = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n === 0 || n != 1 && (n % 100) >= 1 &&\n      (n % 100) <= 19 && n == Math.floor(n)) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.ru = function (n) {\n  if ((n % 10) == 1 && (n % 100) != 11) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 4 &&\n      ((n % 100) < 12 || (n % 100) > 14) && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 10) === 0 || ((n % 10) >= 5 && (n % 10) <= 9) ||\n      ((n % 100) >= 11 && (n % 100) <= 14) && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.shi = function(n) {\n  if (n >= 0 && n <= 1) {\n    return 'one';\n  }\n  if (n >= 2 && n <= 10 && n == Math.floor(n)) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.sk = function (n) {\n  if (n == 1) {\n    return 'one';\n  }\n  if (n == 2 || n == 3 || n == 4) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.sl = function (n) {\n  if ((n % 100) == 1) {\n    return 'one';\n  }\n  if ((n % 100) == 2) {\n    return 'two';\n  }\n  if ((n % 100) == 3 || (n % 100) == 4) {\n    return 'few';\n  }\n  return 'other';\n};\nMessageFormat.locale.sq = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.sr = function (n) {\n  if ((n % 10) == 1 && (n % 100) != 11) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 4 &&\n      ((n % 100) < 12 || (n % 100) > 14) && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 10) === 0 || ((n % 10) >= 5 && (n % 10) <= 9) ||\n      ((n % 100) >= 11 && (n % 100) <= 14) && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.sv = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.sw = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.ta = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.te = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.th = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.tl = function(n) {\n  if (n === 0 || n == 1) {\n    return 'one';\n  }\n  return 'other';\n};\nMessageFormat.locale.tr = function(n) {\n  return 'other';\n};\nMessageFormat.locale.uk = function (n) {\n  if ((n % 10) == 1 && (n % 100) != 11) {\n    return 'one';\n  }\n  if ((n % 10) >= 2 && (n % 10) <= 4 &&\n      ((n % 100) < 12 || (n % 100) > 14) && n == Math.floor(n)) {\n    return 'few';\n  }\n  if ((n % 10) === 0 || ((n % 10) >= 5 && (n % 10) <= 9) ||\n      ((n % 100) >= 11 && (n % 100) <= 14) && n == Math.floor(n)) {\n    return 'many';\n  }\n  return 'other';\n};\nMessageFormat.locale.ur = function ( n ) {\n  if ( n === 1 ) {\n    return \"one\";\n  }\n  return \"other\";\n};\nMessageFormat.locale.vi = function ( n ) {\n  return \"other\";\n};\nMessageFormat.locale.zh = function ( n ) {\n  return \"other\";\n};\n","// Load each string and update the database if necessary\nmfPkg.langUpdate = function(lang, strings, meta, lastSync) {\n\t_.each(['strings', 'compiled', 'meta'], function(key) {\n\t\tif (!mfPkg[key][lang])\n\t\t\tmfPkg[key][lang] = {};\n\t});\n\tmfPkg.meta[lang].extractedAt = meta.extractedAt;\n\tmfPkg.meta[lang].updatedAt = meta.updatedAt;\n\n\t/*\n\t * See if any of our extracted strings are newer than their copy in\n\t * the database and update them accordingly, then update mfPkg.string key\n\t */\n\n\tvar str, existing, revisionId, obj, updating, dbInsert, result, query,\n\t\toptional = ['_id', 'file', 'line', 'template', 'func', 'removed', 'fuzzy'];\n\tfor (key in strings) {\n\t\tstr = strings[key];\n\t\texisting = this.strings[lang][key];\n\n\t\t// skip keys which haven't been modified since last sync\n\t\tif (str.mtime <= lastSync)\n\t\t\tcontinue;\n\n\t\t// skip key if local copy is newer than this one (i.e. from other file)\n\t\tif (existing && existing.mtime > str.mtime)\n\t\t\tcontinue;\n\n\t\t// if text has changed, create a new revision, else preserve revisionId\n\t\tif (existing && existing.text == str.text && existing.removed == str.removed) {\n\t\t\tupdating = false;\n\t\t\trevisionId = this.strings[lang][key].revisionId;\n\t\t} else {\n\t\t\tupdating = true;\n\t\t\trevisionId = this.mfRevisions.insert({\n\t\t\t\tlang: lang,\n\t\t\t\tkey: key,\n\t\t\t\ttext: str.text,\n\t\t\t\tctime: str.ctime,\n\t\t\t});\n\t\t}\n\n\t\tobj = {\n\t\t\tkey: key,\n\t\t\tlang: lang,\n\t\t\ttext: str.text,\n\t\t\tctime: str.ctime,\n\t\t\tmtime: str.mtime,\n\t\t\trevisionId: revisionId\n\t\t};\n\t\tfor (var i=0; i < optional.length; i++)\n\t\t\tif (str[optional[i]])\n\t\t\t\tobj[optional[i]] = str[optional[i]];\n\n\t\t// insert unfound, or re-insert on wrong _id, otherwise update\n\t\tif (existing) {\n\t\t\tif (str._id && existing._id == str._id) {\n\t\t\t\tdbInsert = false;\n\t\t\t} else {\n\t\t\t\t// non-matching ID.  remove and insert with correct ID (mfAll.js)\n\t\t\t\tthis.mfStrings.remove({_id: existing._id});\n\t\t\t\tdbInsert = true;\n\t\t\t}\n\t\t} else {\n\t\t\tdbInsert = true;\n\t\t}\n\n\t\t/* meteor upsert does allow _id even for insert upsert\n\t\tif (this.strings[lang][key] && str._id\n\t\t\t\t&& this.strings[lang][key]._id != str._id) {\n\t\t\tconsole.log('remove');\n\t\t\tthis.mfStrings.remove({_id: this.strings[lang][key]._id});\n\t\t}\n\n\t\tresult = this.mfStrings.upsert({key: key, lang: lang}, { $set: obj });\n\t\tif (result.insertedId)\n\t\t\tobj._id = insertedId;\n\t\tif (updating)\n\t\t\tthis.strings[lang][key] = obj;\n\t\t*/\n\n\t\tif (dbInsert) {\n\t\t\tobj._id = this.mfStrings.insert(obj)\n\t\t} else {\n\t\t\tthis.mfStrings.update(obj._id, obj);\n\t\t}\n\n\t\tif (updating) {\n\t\t\t// does this update affect translations?\n\t\t\tif (existing) {\n\t\t\t\tquery = { $set: {} };\n\t\t\t\tif (lang == mfPkg.native) {\n\t\t\t\t\t// TODO, consider string comparison with threshold to mark as fuzzy\n\t\t\t\t\tquery['$set'].fuzzy = true;\n\t\t\t\t}\n\t\t\t\tif (str.removed)\n\t\t\t\t\tquery['$set'].removed = true;\n\n\t\t\t\tthis.mfStrings.update( { key: key, lang: {$ne: lang} }, query);\n\t\t\t}\n\n\t\t\t// finally, update the local cache\n\t\t\tthis.strings[lang][key] = obj;\t\t\t\n\t\t}\n\n\t} /* for (key in strings) */\n}\n\n// called from mfExract.js\nmfPkg.addNative = function(strings, meta) {\n\tif (!this.initted) {\n\n\t\t// not initted yet, we don't know what the native lang is\n\t\tthis.nativeQueue = { strings: strings, meta: meta };\n\n\t} else {\n\n\t\tvar lastSync = this.mfMeta.findOne('syncExtracts');\n\t\tlastSync = lastSync ? lastSync.mtime : 0;\n\n\t\tthis.langUpdate(mfPkg.native, strings, meta, lastSync);\n\n\t\tthis['syncExtracts'] = meta.updatedAt;\n\t\tthis.mfMeta.upsert('syncExtracts', {$set: {mtime: this['syncExtracts'] } });\n\n\t    this.observeFrom(meta.updatedAt, 'native');\n\t}\n}\n\n// called from mfTrans.js\nmfPkg.syncAll = function(strings, meta) {\n\n\tvar lastSync = this.mfMeta.findOne('syncTrans');\n\tlastSync = lastSync ? lastSync.mtime : 0;\n\n\tfor (lang in strings)\n\t\tif (lang != this.native)\n\t\t\tthis.langUpdate(lang, strings[lang], meta, lastSync);\n\n\t// TODO.  Sync native strings too, ensure _id's are the same,\n\t// allow for random load order\t\n\n\tthis['syncTrans'] = meta.updatedAt;\n\tthis.mfMeta.upsert('syncTrans', {$set: {mtime: this['syncTrans'] } });\n\n    this.observeFrom(meta.updatedAt, 'trans');\n}\n\nmfPkg.serverInit = function(native, options) {\n    if (this.nativeQueue) {\n        this.addNative(this.nativeQueue.strings, this.nativeQueue.meta);\n        delete this.nativeQueue;\n    }\n\n    // If addTrans() was never called, observe full translation database\n    if (!mfPkg.syncTrans)\n        mfPkg.observeFrom(0, 'trans');\t\n}\n\nMeteor.methods({\n\t// Method to send language data to client, see note in client file.\n\tmfLoadLangs: function(reqLang) {\n\t\tcheck(reqLang, String);\n\t\t//console.log(reqLang);\n\t\tvar strings = {};\n\t\tfor (lang in mfPkg.strings) {\n\t\t\tif (reqLang != lang && reqLang != 'all')\n\t\t\t\tcontinue;\n\t\t\tstrings[lang] = {};\n\t\t\tfor (key in mfPkg.strings[lang])\n\t\t\t\tstrings[lang][key] = mfPkg.strings[lang][key].text;\n\t\t}\n\t\treturn {\n\t\t\tstrings: strings,\n\t\t\tlastSync: new Date().getTime()\n\t\t}\n\t}\n});\n\nMeteor.publish('mfStrings', function(lang, after, fullInfo) {\n\tvar query = {}, options = {};\n\tcheck(lang, Match.OneOf(String, [String]));\n\t//console.log(after);\n\tcheck(after, Match.OneOf(Number, undefined, null));\n\tcheck(fullInfo, Match.Optional(Boolean));\n\n\t// fake sub\n\tif (lang == 'notReady')\n\t\treturn null;\n\n\t// ['en', 'he'] or 'en' or 'native' or 'all'\n\tif (_.isArray(lang))\n\t\tquery.lang = {$in: lang};\n\telse if (lang == 'native')\n\t\tquery.lang = mfPkg.native;\n\telse if (lang != 'all')\n\t\tquery.lang = lang;\n\n\tif (after)\n\t\tquery.mtime = {$gt: after};\n\n\tif (!fullInfo)\n\t\toptions.fields = { key: 1, lang: 1, text: 1 };\n\n\treturn mfPkg.mfStrings.find(query, options);\n});\n\nMeteor.publish('mfRevisions', function(lang, limit) {\n\tvar query = {}, options = {};\n\tcheck(lang, Match.OneOf(String, [String]));\n\tcheck(limit, Match.Optional(Number));\n\n\tif (_.isArray(lang))\n\t\tquery.lang = {$in: lang};\n\telse if (lang)\n\t\tquery.lang = lang == 'native' ? mfPkg.native : lang;\n\tif (limit)\n\t\toptions.limit = limit;\n\treturn mfPkg.mfRevisions.find(query, options);\n});\n\nfunction mfStats() {\n\tvar totals = { };\n\tvar nativeLang = mfPkg.native;\n\tif (!mfPkg.strings[nativeLang])\n\t\treturn { total: 0, langs: [] };\n\n\tvar total = Object.keys(mfPkg.strings[nativeLang]).length;\n\n\tfor (lang in mfPkg.strings) {\n\t\tif (lang == nativeLang)\n\t\t\tcontinue;\n\n\t\ttotals[lang] = {\n\t\t\tlang: lang,\n\n\t\t\ttrans: mfPkg.mfStrings.find({\n\t\t\t\tlang: lang, removed: {$exists: false}, fuzzy: {$exists: false}\n\t\t\t\t}).count(),\n\n\t\t\tfuzzy: mfPkg.mfStrings.find({\n\t\t\t\tlang: lang, removed: {$exists: false}, fuzzy: true\n\t\t\t\t}).count()\n\t\t};\n\n\t\ttotals[lang].untrans = total - totals[lang].trans - totals[lang].fuzzy;\n\t\ttotals[lang].transPercent = Math.round(totals[lang].trans / total * 100);\n\t\ttotals[lang].fuzzyPercent = Math.round(totals[lang].fuzzy / total * 100);\n\t\ttotals[lang].untransPercent = 100\n\t\t\t- totals[lang].transPercent - totals[lang].fuzzyPercent;\n\n\t\ttotals[lang].transWidth = 'width: ' + (2 * totals[lang].transPercent) + 'px';\n\t\ttotals[lang].fuzzyWidth = 'width: ' + (2 * totals[lang].fuzzyPercent) + 'px';\n\t\ttotals[lang].untransWidth = 'width: ' + (2 * totals[lang].untransPercent) + 'px';\n\t}\n\n\ttotals = _.sortBy(totals, 'lang');\n\treturn { total: total, langs: _.values(totals) };\n}\n\n// TODO, can/should optimize this to just update correct counts\nMeteor.publish('mfStats', function() {\n\tvar self = this;\n\tvar initializing = true;\n\tvar handle = mfPkg.mfStrings.find().observe({\n\t\tadded: function() {\n\t\t\tif (!initializing)\n\t\t\t\tself.changed('mfMeta', '__stats', mfStats());\n\t\t},\n\t\tchanged: function() {\n\t\t\tself.changed('mfMeta', '__stats', mfStats());\n\t\t},\n\t\tremoved: function() {\n\t\t\tself.changed('mfMeta', '__stats', mfStats());\t\t\t\n\t\t}\n\t});\n\n\tinitializing = false;\n\tself.added('mfMeta', '__stats', mfStats());\n\tself.ready();\n\n\tself.onStop(function () {\n\t\thandle.stop();\n\t});\n});\n\nMeteor.methods({\n\t'mfPkg.langList': function() {\n\t\treturn _.keys(mfPkg.strings);\n\t}\n});\n\nInject.obj('meteor-langList', function() {\n\treturn _.keys(mfPkg.strings);\n});"]}